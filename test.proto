
message acccommand{ 
    optional int64 commandid = 1; // 自增id
    optional int64 accountid = 2; // 资金账户id
    optional string accdate = 3; // 记账日期(yyyymmdd)
    optional string createtime = 4; // 发生时间
    optional int32 businesscode = 5; //  
    optional int32 buyorsell = 6; // 买卖方向0买1卖
    optional int64 relationorderid = 7; // 关联单号
    optional int32 ordersrc = 8; // 委托来源-1,//客户端2,//风控服务3,//管理端4,//交割5//交易服务
    optional int32 status = 9; // 状态:1：待发送2：已发送3：处理成功4：处理失败
}

message accountcmdlog{ 
    optional int64 autoid = 1; // 自增id
    optional string createtime = 2; // 记录时间
    optional int32 userid = 3; // 用户id
    optional int32 businesscode = 4; // 业务编号
    optional int64 relationorderid = 5; // 关联单号
    optional int64 tradeid = 6; // 交易编号
    optional int32 rspcode = 7; // 响应码
    optional int32 rsplen = 8; // 响应字节数
    optional string rspstring = 9; // 响应字符串
    optional string rspbytes = 10; // 响应字节串
}

message accountoverloss{ 
    optional int64 autoid = 1; // 穿仓记录明细id
    optional int64 accountid = 2; // 资金账户id
    optional int32 currencyid = 3; // 货币id
    optional string createtime = 4; // 创建时间
    optional int32 operatetype = 5; // 资金操作类型
    optional int32 businesscode = 6; // 业务编号
    optional double amount = 7; // 资金金额
    optional double currentbalance = 8; // 期末余额
    optional double balance = 9; // 期初余额
    optional int64 relationorderid = 10; // 关联单号
    optional string remark = 11; // 备注
}

message accountriskconfig{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 userid = 2; // 用户id
    optional int32 customertype = 3; // 投资者风险率客户类别
}

message accounttradeconfig{ 
    optional int64 autoid = 1; // 自增id
    optional int64 accountid = 2; // 资金账号
    optional int32 userid = 3; // 用户id
    optional int32 memberuserid = 4; // 所属会员id
    optional int32 goodsid = 5; // 商品id
    optional int32 marketid = 6; // 市场id
    optional int32 ruletype = 7; // 参数类型-1.保证金类2.交易规则3.交易费用
    optional int32 paramid = 8; //  
    optional int32 feealgorithm = 9; // 费用算法-1：比率2：固定
    optional double paramvalue = 10; // 参数值(保证金类此项为空)
    optional string createtime = 11; // 创建时间
    optional int32 creatorid = 12; // 创建人
    optional int32 tradetype = 13; // 交易类型[交易费用]-1:投资者自营2:做市
}

message amounttransferapply{ 
    optional int64 autoid = 1; // 流水序号(自增id)-seq_amounttransferapply
    optional int64 accountid = 2; // 账号id
    optional int32 transfertype = 3; // 划转类型-1:划出2:划入
    optional double amount = 4; // 金额
    optional int32 applystatus = 5; // 申请状态-1:待审核2:审核通过3:审核拒绝
    optional int32 applyuserid = 6; // 申请人id
    optional string applytime = 7; // 申请时间
    optional int32 audituserid = 8; // 审核人
    optional string audittime = 9; // 审核时间
    optional string remark = 10; // 备注
}

message areainterestrate{ 
    optional int64 userid = 1; // 机构用户id其他做市关系，都设置为1
    optional int32 roletype = 2; // 角色类型-10:金融机构
    optional int32 interestratemode = 3; // 利率方式-1:年利率2:日利率
    optional double interestrate = 4; // 利率
    optional int32 interestsettlemode = 5; // 结息方式-1:按日结息2:按周结息3:按月结息
    optional int32 interestsettlevalue = 6; // 结息方式值
    optional double recoverriskrate = 7; // 默认追缴风险率-[仓单回购仓单质押]
    optional string modifytime = 8; // 修改时间
    optional int32 modifierid = 9; // 修改人id
}

message arearole{ 
    optional int64 userid = 1; // 机构用户id其他做市关系，都设置为1
    optional int32 roletype = 2; //  
    optional int64 tradeaccountid = 3; //  
    optional string createtime = 4; // 创建时间
    optional int32 creatorid = 5; // 创建人id
    optional string modifytime = 6; // 修改时间
    optional int32 modifierid = 7; // 修改人id
    optional string shoppassword = 8; // 商城店铺登陆密码(商城店铺角色使用)
    optional int32 isreturnscore = 9; // 是否返还积分[经纪会员-辽东湾]-0:不返还1:返还
    optional string transurl = 10; // 物流地址(物流机构)
    optional string outuserid = 11; // 外部账户[场外期权做市商]
    optional int32 parentuserid = 12; // 上级组织机构(组织机构)
    optional int32 rootuserid = 13; // 顶级组织机构用户id(组织机构)
    optional string sublevelpath = 14; // 组织机构层级路径(逗号分隔,首尾加逗号)
    optional string orgtype = 15; // 组织机构类型(组织机构)1:管理2:现货3:期货100:项目；可多个类型，逗号分隔
}

message arearoledivideconfig{ 
    optional int32 userid = 1; // 机构用户id其他做市关系，都设置为1
    optional int32 marketid = 2; // 市场id(此项为0时，为通用设置)
    optional int32 goodsid = 3; // 商品id(此项为0时，为通用设置)
    optional int32 roletype = 4; //  
    optional int32 tradefeeid = 5; //  
    optional int32 feealgorithm = 6; // 费用算法1：比率2：固定
    optional double dividevalue = 7; // 分润值
    optional string createtime = 8; // 创建时间
    optional int32 creatorid = 9; // 创建人id
    optional string modifytime = 10; // 修改时间
    optional int32 modifierid = 11; // 修改人id
}

message arearoledividetypeconfig{ 
    optional int32 roletype = 1; //  
    optional int32 feetype = 2; // 交易费用-1:交易手续费2:递延费3:交割手续费4:递延费2
    optional int32 feepart = 3; // 费用部分-1:交易所部分2:会员部分
    optional int32 orderindex = 4; // 顺序(数字小的先分,最后一个分所有)
    optional string remark = 5; // 备注
}

message arearolemarket{ 
    optional int32 areauserid = 1; // 机构用户id
    optional int32 roletype = 2; // 角色类型-6:自营会员7:纪经会员
    optional int32 marketid = 3; // 市场id
    optional string modifytime = 4; // 修改时间
    optional int32 modifierid = 5; // 修改人id
    optional int32 spotrighttype = 6; // 现货权限类型-1:可挂可摘2:可挂3:可摘[现货类](卖大厅)
    optional int32 buyspotrighttype = 7; // 现货权限类型-1:可挂可摘2:可挂3:可摘[现货类](买大厅)
}

message arearolemarketmaker{ 
    optional int32 areauserid = 1; // 机构用户id
    optional int32 roletype = 2; // 角色类型-18:报价配置机构19:场外期权做市商
    optional int32 mmuserid = 3; // 做市会员用户id
    optional string modifytime = 4; // 修改时间
    optional int32 modifierid = 5; // 修改人id
}

message auction_breachdetail{ 
    optional int64 tradeid = 1; // 成交单号(326+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 breachtype = 2; // 违约方-1:买方2:卖方
    optional int64 buyaccountid = 3; // 买方账号
    optional int64 sellaccountid = 4; // 卖方账号
    optional double buyamount = 5; // 买方应付/应收金额
    optional double buyamounthandled = 6; // 买方已处理金额
    optional double sellamount = 7; // 卖方应付/应收金额
    optional double sellamounthandled = 8; // 卖方已处理金额
    optional double exchangeamount = 9; // 交易所应收金额
    optional double exchangeamounthandled = 10; // 交易所已处理金额
    optional int32 breachstatus = 11; // 违约处理状态-1:未完成2:已处理3:已成功
    optional string createtime = 12; // 创建时间
}

message auction_changeapply{ 
    optional int64 applyid = 1; // 申请id自增id(seq_auction_pricechangeapply)
    optional int32 goodsid = 2; // 拍品id-自增seq_goods确保不重复
    optional string tradedate = 3; // 交易日
    optional int32 marketid = 4; // 市场id
    optional double startprice = 5; // 起拍价[总价]
    optional double floorprice = 6; // 底价[总价]
    optional int32 wruserid = 7; // 申请人用户id
    optional string requesttime = 8; // 申请时间
    optional int32 cutinterval = 9; // 降价周期(秒)-[降价式、荷兰式]
    optional double pricestep = 10; // 价格幅度[降价式、竞价式、荷兰式]
    optional string audittime = 11; // 审核时间
    optional int32 auditid = 12; // 审核人
    optional string remark = 13; // 审核备注
    optional int32 applystatus = 14; // 申请状态-0:未提交1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败6:已撤销
    optional int32 handlestatus = 15; // 处理状态-1:未处理2:已处理
}

message auction_groupgoods{ 
    optional string tradedate = 1; // 交易日(yyyymmdd)
    optional int32 groupid = 2; // 场次id
    optional int32 goodsid = 3; // 拍品id-自增seq_goods确保不重复
    optional int32 orderindex = 4; // 顺序-默认按10倍数往上加
    optional int32 status = 5; // 状态-1:未开始2:已开始3:已结束
    optional string updatetime = 6; // 更新时间
}

message auction_groupinfo{ 
    optional int64 autoid = 1; // autoid(seq_auction_groupinfo)
    optional string groupname = 2; // 场次名称
    optional string starttime = 3; // 开始时间(h24:mi:ss)
    optional int32 goodsinterval = 4; // 拍品间隔(秒)
    optional double marginvalue = 5; // 参与保证金(固定)
    optional string remark = 6; // 备注
    optional int32 marketid = 7; // 所属市场
    optional int32 creatorid = 8; // 创建人
    optional string createtime = 9; // 创建时间
    optional string updatetime = 10; // 更新时间
    optional int32 isvalid = 11; // 是否有效-0:无效1:有效
    optional string tradedate = 12; // 交易日(yyyymmdd)
    optional int32 status = 13; // 状态-1:未开始2:已开始3:已结束
    optional string endtime = 14; // 结束时间(h24:mi:ss)-暂时无用
}

message auction_groupmargin{ 
    optional int64 orderid = 1; // 委托id(327+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 groupid = 3; // 场次id
    optional int64 accountid = 4; // 资金账号id
    optional int32 userid = 5; // 申请人用户id
    optional double freezemargin = 6; // 买方保证金设置值
    optional double unfreezemargin = 7; // 解冻保证金
    optional int32 joinstatus = 8; // 参与状态-0:不可参与1:可参与
    optional string updatetime = 9; // 更新时间
    optional int32 retcode = 10; // 错误代码
    optional int32 clienttype = 11; //  
    optional int32 orderstatus = 12; //  
    optional string uuid = 13; // 发起端唯一id
    optional string clientordertime = 14; // 客户端委托时间
    optional string ordertime = 15; // 委托时间
    optional int32 ordersrc = 16; // 委托来源-1:客户端2:风控服务3:管理端4:交割端5:交易服务
    optional string clientticket = 17; // 客户端流水号
}

message auction_orderapply{ 
    optional int64 applyid = 1; // 申请id自增id
    optional string tradedate = 2; // 交易日
    optional int32 wruserid = 3; // 申请人用户id
    optional int64 wraccountid = 4; // 资金账号id
    optional int32 marketid = 5; // 市场id
    optional int32 buyorsell = 6; // 买卖-0:买1:卖
    optional string goodsname = 7; // 拍品名称
    optional int64 wrfactortypeid = 8; // 仓单要素类型id
    optional int32 deliverygoodsid = 9; // 交割商品id
    optional int32 brandid = 10; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 11; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 12; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 13; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 14; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 applyqty = 15; // 申请数量
    optional int32 applystatus = 16; // 申请状态-0:未提交1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败6:已撤销
    optional double startprice = 17; // 起拍价[总价]
    optional double floorprice = 18; // 底价[总价]
    optional string starttime = 19; // 开始日期
    optional string endtime = 20; // 结束日期
    optional double margin = 21; // 保证金(固定值)
    optional int32 cutinterval = 22; // 降价周期(秒)-[降价式、荷兰式]
    optional double pricestep = 23; // 价格幅度[降价式、竞价式、荷兰式]
    optional string requesttime = 24; // 申请时间
    optional string audittime = 25; // 审核时间
    optional int32 auditid = 26; // 审核人
    optional string remark = 27; // 审核备注
    optional int32 decimalplace = 28; // 报价小数位
    optional string unit = 29; // 单位
    optional string goodspicurl = 30; // 商品介绍图片
    optional string auctiondesc = 31; // 拍品描述
    optional int32 pricemode = 32; // 价格类型-1:单价2:总价[荷兰式-单价则起拍价为单价,总价为总价]
    optional int32 haswr = 33; // 是否有仓单[荷兰式竞价式]
    optional string starttradedate = 34; // 起拍交易日[荷兰式]
    optional int32 groupid = 35; // 竞拍场次[荷兰式]
    optional double highestprice = 36; // 最高价[竞价式]
    optional string appraisal = 37; // 鉴定书
}

message auction_orderdetail{ 
    optional int64 orderid = 1; // 委托id(324+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 applyid = 2; // 申请id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int64 accountid = 5; // 账户id
    optional int32 memberuserid = 6; // 所属会员userid
    optional int32 goodsid = 7; // 拍品id-自增seq_goods
    optional int32 deliverygoodsid = 8; // 交割商品id
    optional int32 buyorsell = 9; // 买卖-0:买1:卖
    optional int32 orderqty = 10; // 委托数量
    optional int32 tradeqty = 11; // 成交数量
    optional double freezemargin = 12; // 冻结保证金(买方参与保证金)
    optional string ordertime = 13; // 委托时间
    optional int32 ordersrc = 14; // 委托来源-1:客户端2:风控服务3:管理端4:交割端5:交易服务
    optional int32 orderstatus = 15; //  
    optional string clientordertime = 16; // 客户端委托时间
    optional string clientticket = 17; // 客户端流水号
    optional string uuid = 18; // 发起端唯一id
    optional int32 retcode = 19; // 错误代码
    optional int32 clienttype = 20; //  
    optional int32 feealgorithm = 21; // 手续费收取方式1：比率2：固定(卖方取卖方手续费与流拍手续费大的值)
    optional double exchagechargevalue = 22; // (交易所部分)(卖方取卖方手续费与流拍手续费大的值)
    optional double freezecharge = 23; // 冻结手续费(卖方取卖方手续费与流拍手续费大的值冻结)
    optional int32 marginalgorithm = 24; // 保证金方式-1：比率2：固定
    optional double marginvalue = 25; // 保证金设置值
    optional double unfreezemargin = 26; // 解冻保证金
    optional double unfreezecharge = 27; // 解冻手续费
    optional int32 buyfirstmarginalgorithm = 28; // 买方首付保证金方式-1：比率2：固定
    optional double buyfirstmarginvalue = 29; // 买方首付保证金设置值
    optional double buyfirstmargin = 30; // 买方首付保证金
    optional double memberchargevalue = 31; //  
}

message auction_orderinfo{ 
    optional int32 goodsid = 1; // 拍品id-自增seq_goods确保不重复
    optional string goodscode = 2; // 拍品代码-系统自动生成[#a(2位)+goodsid十六进制(6位)]
    optional string goodsname = 3; // 拍品名称
    optional int32 applyid = 4; // 申请id
    optional int32 wruserid = 5; // 申请人用户id
    optional int64 wraccountid = 6; // 资金账号id
    optional int32 marketid = 7; // 市场id
    optional int32 buyorsell = 8; // 买卖-0:买1:卖
    optional int64 wrfactortypeid = 9; // 仓单要素类型id
    optional int32 deliverygoodsid = 10; // 交割商品id
    optional int32 brandid = 11; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 12; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 13; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 14; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 15; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 applyqty = 16; // 申请数量
    optional int32 acutionstatus = 17; //  
    optional double startprice = 18; // 起拍价
    optional double floorprice = 19; // 底价
    optional string starttradedate = 20; // 起拍交易日
    optional string starttime = 21; // 开始时间
    optional string endtime = 22; // 结束时间
    optional int32 cutinterval = 23; // 降价周期-[降价式];[荷兰式]:大钟转一圈的时间
    optional double pricestep = 24; // 价格幅度[降价式、竞价式];[荷兰式]:大钟转一圈的价格,10的幂次方
    optional double tradeprice = 25; // 成交价[结束时更新]
    optional int32 tradeqty = 26; // 成交数量
    optional int32 quotenum = 27; // 出价次数[结束时更新]
    optional string createtime = 28; // 创建时间
    optional string updatetime = 29; // 更新时间
    optional int32 decimalplace = 30; // 报价小数位
    optional int32 feealgorithm = 31; // 买方手续费收取方式1：比率2：固定
    optional double exchagechargevalue = 32; // 买方手续费设置值(交易所部分)
    optional int32 feealgorithm2 = 33; // 卖方手续费收取方式1：比率2：固定
    optional double exchagechargevalue2 = 34; // 卖方手续费设置值(交易所部分)
    optional int32 feealgorithm3 = 35; // 流拍手续费收取方式1：比率2：固定
    optional double exchagechargevalue3 = 36; // 流拍手续费设置值[收卖方，比例时按底价计算](交易所部分)
    optional double failcharge = 37; // 流拍手续费
    optional string unit = 38; // 单位
    optional string goodspicurl = 39; // 商品介绍图片
    optional int32 buymarginalgorithm = 40; // 买方保证金方式-1：比率2：固定
    optional double margin = 41; // 买方保证金设置值
    optional int32 sellmarginalgorithm = 42; // 卖方保证金方式-1：比率2：固定
    optional double sellmarginvalue = 43; // 卖方保证金设置值
    optional int32 performancemode = 44; // 履约方式-1:立即执行2:履约模板执行
    optional int64 performancetemplateid = 45; // 履约计划模板id(方式为1时填-1,为2时选择模板)
    optional double sellerfreezemargin = 46; // 卖方冻结保证金
    optional double sellerfreezecharge = 47; // 卖方冻结手续费
    optional int32 buyfirstmarginalgorithm = 48; // 买方首付保证金方式-1：比率2：固定
    optional double buyfirstmarginvalue = 49; // 买方首付保证金设置值
    optional string auctiondesc = 50; // 拍品描述
    optional int32 pricemode = 51; // 价格类型-1:单价2:总价[荷兰式-单价则起拍价为单价,总价为总价]
    optional int32 haswr = 52; // 是否有仓单[荷兰式竞价式]
    optional double highestprice = 53; // 最高价[竞价式]
    optional double rebateratio = 54; // 返利比率
    optional string appraisal = 55; // 鉴定书
    optional double memberchargevalue = 56; // 买方手续费设置值(会员部分)
    optional double memberchargevalue2 = 57; // 卖方手续费设置值(会员部分)
    optional double memberchargevalue3 = 58; // 流拍卖方手续费设置值(会员部分)
}

message auction_quotedetail{ 
    optional int64 goodsid = 1; // 拍品id-自增seq_goods
    optional int64 accountid = 2; // 账户id[系统自动报价时为0]
    optional int32 orderqty = 3; // 委托数量[大宗式]
    optional double curprice = 4; // 当前价
    optional double orderprice = 5; // 报价价格
    optional string ordertime = 6; // 出价时间
}

message auction_quotelog{ 
    optional int64 quoteid = 1; // 报价流水id(325+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 goodsid = 2; // 拍品id-自增seq_goods
    optional int64 orderid = 3; // 委托id(324+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 applyid = 4; // 申请id(323+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int32 marketid = 6; // 市场id
    optional int64 accountid = 7; // 账户id
    optional int32 buyorsell = 8; // 买卖-0:买1:卖
    optional int32 orderqty = 9; // 委托数量[大宗式]
    optional double curprice = 10; // 当前价
    optional double pricestep = 11; // 价格幅度[降价式、竞价式]
    optional int32 stepratio = 12; // 价格幅度系数
    optional double orderprice = 13; // 报价价格
    optional string ordertime = 14; // 出价时间
    optional int32 ordersrc = 15; // 委托来源-1:客户端2:风控服务3:管理端4:交割端5:交易服务
    optional string clientticket = 16; // 客户端流水号
    optional int32 handlestatus = 17; // 处理状态
}

message auction_rebateflow{ 
    optional int64 quoteid = 1; // 报价流水id(325+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)(卖方为0)
    optional int32 goodsid = 2; // 拍品id-自增seq_goods
    optional int64 accountid = 3; // 账户id[系统自动报价时为0]
    optional double curprice = 4; // 当前价
    optional double orderprice = 5; // 报价价格
    optional string ordertime = 6; // 出价时间
    optional double rebateratio = 7; // 返利比率
    optional double rebateamount = 8; //  
    optional string tradedate = 9; // 交易日(yyyymmdd)
    optional int32 marketid = 10; // 市场id
    optional int64 serialnumber = 11; // 处理流水号(327+unix秒时间戳(10位)+2位(marketserviceid)
    optional int32 handlestatus = 12; // 处理状态
}

message auction_tradedetail{ 
    optional int64 tradeid = 1; // 成交单号(326+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional int64 orderid = 3; // 委托单号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int64 accountid = 5; // 账号id
    optional int32 goodsid = 6; // 拍品id-自增seq_goods
    optional int32 marketid = 7; // 市场id
    optional int32 deliverygoodsid = 8; // 交割商品id
    optional int32 memberuserid = 9; // 会员id个人投资者需要填写
    optional int64 matchaccountid = 10; // 对手账号id
    optional string tradetime = 11; // 成交时间
    optional double tradeprice = 12; // 成交价格
    optional int32 tradeqty = 13; // 成交数量
    optional double tradeamount = 14; // 成交金额
    optional double charge = 15; // 手续费
    optional int32 status = 16; //  
    optional int32 handlestatus = 17; // 处理状态-
    optional int64 relatedwrid = 18; // 关联仓单id
    optional int32 feealgorithm = 19; // 手续费收取方式1：比率2：固定
    optional double exchagechargevalue = 20; // 交易所手续费设置值(交易所部分)
    optional int32 ismain = 21; // 是否主单-0:不是1:是[卖方为主单]
    optional int32 isreckoned = 22; // 是否已结算-0:未结算1:已结算
    optional int64 performanceplanid = 23; // 履约计划id
    optional int32 tradetype = 24; // 成交类别-1:正常委托成交2:流拍成交3:违约成交
    optional double buyfirstmargin = 25; // 买方实际冻结首付保证金
    optional double rebateamount = 26; // 返利总金额[竞价式]
    optional double memberchargevalue = 27; // 手续费设置值(会员部分)(自营会员设为0)
}

message auction_tradelog{ 
    optional int64 logticket = 1; // 日志id(106+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 funcode = 3; // 功能码
    optional int32 typeid = 4; // 类型id
    optional int32 retcode = 5; // 返回码
    optional int64 accountticket = 6; // 帐号id
    optional int64 orderticket = 7; // 单据id
    optional bytes logcontent = 8; // 日志内容
    optional int32 messagestatus = 9; // 状态-1:待发送2:发送完成
    optional string createtime = 10; // 创建时间
    optional string remark = 11; // 备注
    optional string clientticket = 12; // 客户端id
    optional int32 marketid = 13; // 市场id
}

message bank_account{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional double balance = 2; // 期初余额
    optional double currentbalance = 3; // 期末余额
    optional int32 intotalcount = 4; // 今日入金次数
    optional double intotalamount = 5; // 今日入金金额
    optional int32 outtotalcout = 6; // 今天出金次数
    optional double outtotalamount = 7; // 今日出金金额
    optional double outtotalfreezeamount = 8; // 今日出金冻结
    optional string lastsuccesstradedate = 9; // 最后清算成功交易日
}

message bank_accountloss{ 
    optional string accountcode = 1; // 资金账号
    optional string tradedate = 2; // 交易日
    optional int32 accounttype = 3; // 账号类型
    optional double balance = 4; // 期初余额(上一次清算成功后的结算余额)
    optional double currentbalance = 5; // 期末余额（结算余额）只能<=0
    optional string createtime = 6; // 创建时间
    optional string remark = 7; // 备注
}

message bank_accountlosslog{ 
    optional string accountcode = 1; // 资金账号
    optional string tradedate = 2; // 交易日
    optional double amout = 3; // 穿仓金额
    optional string createtime = 4; // 创建时间
    optional string remark = 5; // 备注
}

message bank_accountoutinapply{ 
    optional string accountcode = 1; // 资金账号
    optional string cusbankid = 2; // 托管银行编号
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional string exchticket = 4; // 银行服务流水号
    optional int64 extoperateid = 5; // 交易服务流水号
    optional string bankticket = 6; // 银行流水
    optional int32 applystatus = 7; //  
    optional int32 executetype = 8; //  
    optional double amount = 9; // 金额
    optional string currency = 10; // 币种
    optional double charge = 11; // 手续费
    optional string accountpwd = 12; // 资金密码
    optional string updatetime = 13; // 更新时间
    optional string bankid = 14; // 银行编号
    optional string branchbankid = 15; // 银行支行号
    optional string branchbankname = 16; // 银行支行名称
    optional string bankaccountno = 17; // 银行卡号
    optional string bankaccountname = 18; // 银行账户名
    optional string extendinfo = 19; // 扩展信息
    optional int32 auditid = 20; // 审核人
    optional string audittime = 21; // 审核时间
    optional string remark = 22; // 备注
    optional string netaddr = 23; // 调转网址
    optional string accountticket = 24; // 最新账户服务流水号
    optional int32 checkerrorflag = 25; // 对账差错标志-1:为单边账;其它为正常出入金
    optional string remark2 = 26; // 备注(失败原因)
    optional int32 reauditid = 27; // 复审人
    optional string reaudittime = 28; // 复审时间
    optional string reauditremark = 29; // 复审备注
    optional string applyremark = 30; // 申请备注
    optional string relatedorderid = 31; // 三方关联id
    optional double capamountout = 32; // 出金(劣后本金)-外部子账户
    optional double infamount = 33; // 劣后金额(自有)
    optional double priamount = 34; // 优先金额(授信)
    optional string bank_apply_ticket = 35; // 银行申请流水
    optional string certificatephotourl = 36; // 凭证地址
    optional double soucreamount = 37; // 原始出入金金额
    optional int32 soucrecurrencyid = 38; // 原始出入金币种
}

message bank_accountoutinlog{ 
    optional int64 autoid = 1; // 自增(autoid)
    optional string accountcode = 2; // 资金账号
    optional string cusbankid = 3; // 托管银行编号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional string exchticket = 5; // 流水号
    optional string bankticket = 6; // 银行流水
    optional int32 executetype = 7; //  
    optional int32 bizlaststatus = 8; //  
    optional double amount = 9; // 金额
    optional double charge = 10; // 手续费
    optional string accountpwd = 11; // 资金密码
    optional string executedate = 12; // 执行日期
    optional string tradetime = 13; // 交易时间
    optional int32 retcode = 14; // 返回代号
    optional string remark = 15; // 备注
    optional int32 signstatus = 16; // 签约状态
    optional string bankid = 17; // 银行编号
    optional string branchbankid = 18; // 银行支行号
    optional string branchbankname = 19; // 银行支行名称
    optional string bankaccountno = 20; // 银行卡号
    optional string bankaccountname = 21; // 银行账户名
    optional int32 bankcardtype = 22; // 银行卡类型
    optional int32 cardtype = 23; // 证件类型
    optional string currency = 24; // 币种
    optional int32 direct = 25; // 方向（哪一方发起的）
    optional string dealtext = 26; // 平台处理描述文本
    optional string bankdealtext = 27; // 银行处理描述文本
    optional string netaddr = 28; // 调转网址
    optional string extendinfo = 29; // 扩展信息
    optional string accountticket = 30; // 最新账户服务流水号
    optional double capamountout = 31; // 出金(劣后本金)-外部子账户
    optional double infamount = 32; // 劣后金额(自有)
    optional double priamount = 33; // 优先金额(授信)
    optional string bank_apply_ticket = 34; // 银行申请流水
}

message bank_accountsign{ 
    optional string accountcode = 1; // 资金账号
    optional string cusbankid = 2; // 托管银行编号
    optional int32 signstatus = 3; //  
    optional string currency = 4; // 币种
    optional int32 accounttype = 5; // 账户类型(usertype)
    optional string accountname = 6; // 资金账号对应的账号名(username)
    optional int32 bankcardtype = 7; // 银行卡类型
    optional string bankaccountno = 8; // 银行卡号
    optional int32 bankaccounttype = 9; // 银行账户类型-1-对私;2-对公
    optional string bankchildaccount = 10; // 银行子账号（签约成功后，很多银行会返回对应的这个虚拟账号）
    optional string bankid = 11; // 签约银行id
    optional string branchbankid = 12; // 签约银行支行号
    optional string branchbankname = 13; // 签约银行支行名称
    optional string bankaccountname = 14; // 签约银行卡账号名
    optional string cardtype = 15; // 证件类型
    optional string cardno = 16; // 证件号码
    optional string bankprovince = 17; // 开户行省份
    optional string bankcity = 18; // 开户行城市
    optional int32 direct = 19; // 方向(可以判断那方先发起的签约)
    optional string mobilephone = 20; // 手机号
    optional string extendinfo = 21; // 扩展信息(json字符串)
    optional string exchticket = 22; // 最后一次签约成功的流水号
    optional string updatetime = 23; // 更新时间(签解约更新时间)
    optional string applicationtime = 24; // 最后一次更新的时间
    optional string netaddr = 25; // 调转网址
    optional int32 auditid = 26; // 审核人
    optional string audittime = 27; // 审核时间
    optional string applyexchticket = 28; // 申请流水
}

message bank_accountsignlog{ 
    optional int64 exchticket = 1; // 流水号
    optional int32 direct = 2; // 方向(可以判断那方先发起的签约)1:交易服务2:清算中心3:账户服务
    optional string accountcode = 3; // 资金账号
    optional string cusbankid = 4; // 托管银行编号
    optional int32 signtype = 5; // 签约类型-1:签约2:修改4-绑卡;5-解绑;6-换卡7:解约
    optional int32 isforce = 6; // 是否强制-0:非强制1:强制
    optional int32 dealstatus = 7; // 处理状态-1:待审核2:待处理3:处理成功4:处理失败
    optional string currency = 8; // 币种
    optional int32 accounttype = 9; // 账户类型
    optional string accountname = 10; // 资金账号对应的账号名称
    optional int32 bankcardtype = 11; // 银行卡类型
    optional string bankaccountno = 12; // 银行卡号
    optional int32 bankaccounttype = 13; // 银行账户类型-1-对私;2-对公
    optional string bankchildaccount = 14; // 银行子账号（签约成功后，很多银行会返回对应的这个虚拟账号）
    optional string bankid = 15; // 签约银行id
    optional string branchbankid = 16; // 签约银行支行号
    optional string branchbankname = 17; // 签约银行支行名称
    optional string bankaccountname = 18; // 签约银行卡账号名
    optional string cardtype = 19; // 证件类型
    optional string cardno = 20; // 证件号码
    optional string bankprovince = 21; // 开户行省份
    optional string bankcity = 22; // 开户行城市
    optional string mobilephone = 23; // 手机号
    optional string extendinfo = 24; // 扩展信息(json字符串)
    optional string createtime = 25; // 申请时间
    optional string remark = 26; // 备注
    optional string netaddr = 27; // 调转网址
}

message bank_amounttransfer{ 
    optional string exchticket = 1; // 银行服务流水号
    optional int32 transfertype = 2; // 资金划转类别-[1-资金调拨;2-费用划转;3-利息划转]
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional string bankticket = 4; // 银行流水
    optional string cusbankid = 5; // 托管银行编号
    optional string bankaccno = 6; // 银行账号
    optional string bankaccname = 7; // 银行账户名
    optional string targetbankid = 8; // 收款方银行行号
    optional string targetbankaccno = 9; // 收款方银行账号
    optional string targetbankaccname = 10; // 收款方银行账户名
    optional string begindate = 11; // 开始日期
    optional string enddate = 12; // 结束日期
    optional double amount = 13; // 金额
    optional string currency = 14; // 币种
    optional string remark = 15; // 备注
    optional int32 applystatus = 16; // 申请状态-1:待审核2:审核通过3:审核拒绝4:审核失败
    optional int32 handlestatus = 17; // 处理状态
    optional int32 retcode = 18; // 返回代号
}

message bank_bankcityinfo{ 
    optional int64 platcityid = 1; // 平台城市id
    optional string bankcityid = 2; // 银行城市id
    optional string bankcityname = 3; // 银行城市名称
    optional string provinceid = 4; // 省份id
}

message bank_bankinfo{ 
    optional string bankid = 1; // 银行id
    optional string bankname = 2; // 银行名称
    optional string clearbankno = 3; // 清算系统银行编号
    optional int32 status = 4; // 状态-0:正常1:注销
    optional int32 orderindex = 5; // 排序顺序
}

message bank_bankprovinceinfo{ 
    optional int64 platprovinceid = 1; // 平台省份id
    optional string bankprovinceid = 2; // 银行省份id
    optional string bankprovincename = 3; // 银行省份名称
}

message bank_checkbankdata{ 
    optional string bankticket = 1; // 银行流水
    optional string exchticket = 2; // 银行服务流水号
    optional string cusbankid = 3; // 托管银行编号
    optional string accountcode = 4; // 资金账号(母账号)
    optional string tradedate = 5; // 交易日
    optional int32 biztype = 6; // 业务类型-[0-出金;1-入金;2-出金申请;3-入金申请;4-付款;5-付款确认]
    optional double amount = 7; // 金额
    optional double charge = 8; // 手续费
    optional string currency = 9; // 币种
    optional string bankid = 10; // 银行卡行号
    optional string bankcardno = 11; // 银行卡号
    optional string bankcardname = 12; // 银行卡户名
    optional string bankaccountno = 13; // 银行账号
    optional string bankaccountname = 14; // 银行账户名
    optional int32 sendertype = 15; // 发起方类型-[0-中心;1-交易所;2-银行]
    optional int32 bizstatus = 16; // 业务状态-[0-成功;1-失败]
    optional int32 checkstatus = 17; // 对账状态-1:未对账2:对账成功3:对账失败
}

message bank_checkerror{ 
    optional int64 autoid = 1; // 对账差错id(401+unix秒时间戳(10位)+xxxxxx)
    optional string exchticket = 2; // 银行服务流水号
    optional string bankticket = 3; // 银行流水
    optional int64 extoperateid = 4; // 交易服务流水号
    optional string cusbankid = 5; // 托管银行编号
    optional string accountcode = 6; // 资金账号(母账号)
    optional string tradedate = 7; // 交易日
    optional int32 amounttype = 8; // 费用类型-1:出金2:入金
    optional double amount = 9; // 金额
    optional int32 status = 10; // 状态-1:未处理2:已处理
    optional int32 errorcode = 11; // 错误代号
    optional int32 dealcode = 12; // 处理结果返回码
    optional string systdate = 13; // 添加记录时间
    optional string tradetime = 14; // 交易时间
    optional string modifierid = 15; // 修改人
    optional string executedate = 16; // 执行日期
    optional string remark = 17; // 备注
    optional int64 accountticket = 18; // 账号服务操作流水
}

message bank_checkexchdata{ 
    optional string exchticket = 1; // 银行服务流水号
    optional string accountcode = 2; // 资金账号(母账号)
    optional string tradedate = 3; // 交易日
    optional int32 amounttype = 4; // 费用类型-1:出金2:入金
    optional double amount = 5; // 金额
    optional int32 checkstatus = 6; // 对账状态-1:未对账2:对账成功3:对账失败4:单边账调整成功
}

message bank_clearaccountinfo{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional string cusbankid = 3; // 托管银行编号
    optional int32 accounttype = 4; // 账号类型
    optional double balance = 5; // 期初余额
    optional double currentbalance = 6; // 期末余额
    optional double pl = 7; // 盈亏合计(中间数据表的盈亏+穿仓盈亏)
    optional double charge = 8; // 手续费
    optional double inamount = 9; // 入金金额
    optional double outamount = 10; // 出金金额
    optional double closepl = 11; // 平仓盈亏
    optional double reckonpl = 12; // 结算盈亏
    optional double bankcurrentbalance = 13; // 银行端期末余额
    optional int32 clearstatus = 14; // 清算状态-1:未清算2:清算成功3:清算失败
    optional int32 handlestatus = 15; // 处理状态-1:未处理2:处理中3:处理完成
    optional string remark = 16; // 备注
    optional int32 amounttype = 17; // 金额类型-1:正常数据2:清算失败金额3:累计上一个交易日清算失败的金额
    optional double clearamount = 18; // 清算金额
}

message bank_clearexchcheckerror{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional string cusbankid = 3; // 托管银行编号
    optional int32 errtype = 4; // 错误类型
    optional string createtime = 5; // 创建时间
    optional string errremarl = 6; // 错误描述
    optional int32 dealstatus = 7; // 处理状态-1:待处理2:处理成功3:处理失败
    optional string dealtime = 8; // 处理时间
    optional string dealremark = 9; // 处理描述
}

message bank_clearexchdata{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional string cusbankid = 3; // 托管银行编号
    optional double balance = 4; // 期初余额
    optional double currentbalance = 5; // 期末余额
    optional double pl = 6; // 盈亏(除交易所手续外的其它费用)
    optional double charge = 7; // 交易所手续费
    optional double inamount = 8; // 入金金额
    optional double outamount = 9; // 出金金额
    optional double closepl = 10; // 平仓盈亏
    optional double reckonpl = 11; // 结算盈亏
}

message bank_clearexchresult{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional string cusbankid = 3; // 托管银行编号
    optional int32 accounttype = 4; // 账号类型
    optional double balance = 5; // 期初余额
    optional double currentbalance = 6; // 期末余额
    optional double pl = 7; // 盈亏
    optional double charge = 8; // 手续费
    optional double inamount = 9; // 入金金额
    optional double outamount = 10; // 出金金额
    optional double closepl = 11; // 平仓盈亏
    optional double reckonpl = 12; // 结算盈亏
    optional int32 clearstatus = 13; // 清算状态-1:未清算2:清算成功3:清算失败
    optional string retcode = 14; // 返回代码
    optional string remark = 15; // 备注
    optional string cleardatebeing = 16; // 开始清算的日期（累计清算的起始日期）
    optional string cleardateend = 17; // 截止清算日期（累计清算的截止日期）
}

message bank_clearmiddledata{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional string cusbankid = 3; // 托管银行编号
    optional double balance = 4; // 期初余额
    optional double currentbalance = 5; // 期末余额
    optional double pl = 6; // 盈亏(除交易所手续外的其它费用)
    optional double losspl = 7; // 穿仓盈亏(交易所今日为穿仓垫付或收回的金额=穿仓表的今日期初-今日期末)
    optional double charge = 8; // 交易所手续费
    optional double inamount = 9; // 入金金额
    optional double outamount = 10; // 出金金额
    optional double closepl = 11; // 平仓盈亏
    optional double reckonpl = 12; // 结算盈亏
}

message bank_clearresultfiledata{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional string cusbankid = 3; // 托管银行编号
    optional double balance = 4; // 期初余额
    optional double currentbalance = 5; // 期末余额
    optional double changeamount = 6; // 发生金额(盈亏+手续费)
    optional int32 clearstatus = 7; // 清算状态-1:未清算2:清算成功3:清算失败
    optional string retcode = 8; // 返回代码
    optional string remark = 9; // 备注
    optional double charge = 10; // 手续费
    optional double pl = 11; // 清算盈亏
}

message bank_cusbankchannel{ 
    optional string cusbankid = 1; // 托管银行编号
    optional int32 outintype = 2; // 出入金类型1:出金2:入金
    optional string channeltype = 3; // 渠道类型
    optional string channelname = 4; // 渠道名称
}

message bank_cusbankcharge{ 
    optional string cusbankid = 1; // 托管银行编号
    optional int32 outorin = 2; // 出入金类型-1:出金2:入金
    optional int32 usertype = 3; // 客户类型-1:对私2:对公
    optional int32 chargetype = 4; // 手续费收取类型-1:统一2:区间[detail表]
    optional int32 chargealgorithm = 5; // 手续费收取方式-1:比率2:固定[统一]
    optional double chargevalue = 6; // 手续费值[统一]
    optional double singlemin = 7; // 单笔最低值[统一/区间](仅对比率生效,0为不限)
    optional double singlemax = 8; // 单笔最高值[统一/区间](仅对比率生效,0为不限)
}

message bank_cusbankchargedetail{ 
    optional string cusbankid = 1; // 托管银行编号
    optional int32 outorin = 2; // 出入金类型-1:出金2:入金
    optional int32 usertype = 3; // 客户类型-1:对私2:对公
    optional int32 rangeorder = 4; // 区间序号-金额由小到大递增，从1开始;添加、修改、删除区间时须重新变更
    optional double rangemin = 5; // 区间左值
    optional double rangemax = 6; // 区间右值
    optional int32 chargealgorithm = 7; // 手续费收取方式-1:比率2:固定
    optional double chargevalue = 8; // 手续费值
}

message bank_cusbankcheck{ 
    optional string cusbankid = 1; // 托管银行id
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 checkstatus = 3; // 对账状态-1:未对账2:对账成功3:对账失败
    optional int32 inamoutcout = 4; // 入金总笔数
    optional double totalinamout = 5; // 入金总金额
    optional int32 inamoutnum = 6; // 入金总人数
    optional int32 outamountcout = 7; // 出金总笔数
    optional double totaloutamount = 8; // 出金总金额
    optional int32 outamountnum = 9; // 出金总人数
    optional int32 signincount = 10; // 日签约数
    optional int32 signoutcount = 11; // 日解约数
    optional int32 opencount = 12; // 日开户数
    optional int32 totalsignincount = 13; // 当前签约总数
    optional double totalpl = 14; // 总盈亏
    optional double totalcharge = 15; // 总手续费(交易所)
    optional double totalincharge = 16; // 总入金手续费
    optional double totaloutcharge = 17; // 总出金手续费
    optional double balance = 18; // 上日余额
    optional double currentbalance = 19; // 今日余额
}

message bank_cusbankextendconfig{ 
    optional string cusbankid = 1; // 托管银行编号
    optional int32 extendbiztype = 2; // 扩展业务类型-1:签约2:入金3:出金4:签约信息修改
    optional int32 fieldid = 3; // 字段id
    optional int32 ismandatory = 4; // 是否必填-0:不必填1:必填
}

message bank_cusbankinfo{ 
    optional string cusbankid = 1; // 托管银行编号(对应清算中心tran_no)
    optional string cusbankname = 2; // 银行业务名称
    optional string cusbankshortname = 3; // 银行业务简称
    optional string exchbankid = 4; // 交易所开户银行id
    optional string exchpaybankaccno = 5; // 交易所支出结算账户
    optional string exchpaybankaccname = 6; // 交易所支出结算账户户名
    optional string currency = 7; // 币种
    optional int32 cansign = 8; // 是否可签约-0:不可1:可以
    optional int32 canrelease = 9; // 是否可解约-0:不可1:可以
    optional int32 caninamount = 10; // 是否可入金-0:不可1:可以
    optional int32 canoutamount = 11; // 是否可出金-0:不可1:可以
    optional string riskinfo = 12; // 签约风险提示书
    optional int32 cansign2 = 13; // 是否可签约(网银端)-0:不可1:可以
    optional int32 canrelease2 = 14; // 是否可解约(网银端)-0:不可1:可以
    optional int32 caninamount2 = 15; // 是否可入金(网银端)-0:不可1:可以
    optional int32 canoutamount2 = 16; // 是否可出金(网银端)-0:不可1:可以
    optional int32 canbindcard = 17; // 是否可绑卡与解卡-0:不可1:可以
    optional int32 isneedclear = 18; // 是否需要清算-0:不需要1:需要
    optional int32 canmodifyphone = 19; // 是否可修改手机号-0:不可1:可以
    optional int32 canmodifysigninfo = 20; // 是否可修改签约信息-0:不可1:可以
    optional int32 isneedcheck = 21; // 是否需要对账-0:需要1:不需要[不需要界面配置]
    optional int32 canmodifybankcard = 22; // 是否可修改银行卡号-0:不可1:可以
    optional int32 canallot = 23; // 是否支持跨行调拨-0:不支持1:支持
    optional int32 canallotquery = 24; // 是否支持跨行调拨查询-0:不支持1:支持
}

message bank_cusbanksignbank{ 
    optional string cusbankid = 1; // 托管银行id
    optional string bankid = 2; // 银行id
}

message bank_cusbanksignlog{ 
    optional int64 autoid = 1; // 自增id
    optional string cusbankid = 2; // 托管银行id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 signstatus = 4; // 签到状态-1:签到2:签退
    optional string createtime = 5; // 操作时间
}

message bank_cusbankstatus{ 
    optional string cusbankid = 1; // 托管银行id
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 signstatus = 3; // 当前签到/签退状态-1:签到2:签退
    optional string updatetime = 4; // 当前签到/签退更新时间
    optional string lastsignintime = 5; // 最后签到时间
    optional string lastsignouttime = 6; // 最后签退时间
    optional string lastchecktime = 7; // 最后对账时间
    optional int32 lastcheckstatus = 8; // 最后对账状态-对账状态-1:未对账2:对账成功3:对账失败
    optional string lastcleartime = 9; // 最后清算时间
    optional int32 lastclearstatus = 10; // 最后清算状态-1:未清算2:清算成功3:清算失败4:清算部分成功
}

message bank_customerinfoupload{ 
    optional int32 userid = 1; // 用户id
    optional int64 accountid = 2; // 资金账号id
    optional int32 changetype = 3; // 变更类型-[1-增加;2-修改3-注销]
    optional string username = 4; // 客户名称
    optional string usershortname = 5; // 客户简称
    optional int32 usertype = 6; // 客户类型-[1-个人;2-机构]
    optional int32 accounttype = 7; //  
    optional int32 cardtype = 8; // 证件类型
    optional string cardno = 9; // 证件号码
    optional int32 sex = 10; // 性别-[0-未填;1-男;2-女]
    optional string legalpersonname = 11; // 法人姓名(机构填写)
    optional string orgcode = 12; // 组织机构代码(机构填写)
    optional string nationality = 13; // 国籍
    optional string address = 14; // 地址
    optional string contactname = 15; // 联系人姓名
    optional string contactphone = 16; // 联系人电话
    optional string contactfax = 17; // 联系人传真
    optional string contactemail = 18; // 联系人邮箱
    optional string relatedaccount = 19; // 经纪商账号
    optional int32 dealstatus = 20; // 处理状态-1:待上传2:上传成功3:上传失败4:已注销
}

message bank_dayaccountoutin{ 
    optional string accountcode = 1; // 资金账号(母账号)
    optional string tradedate = 2; // 交易日
    optional double balance = 3; // 期初余额
    optional double currentbalance = 4; // 期末余额
    optional int32 intotalcount = 5; // 今日入金次数
    optional double intotalamount = 6; // 今日入金金额
    optional int32 outtotalcout = 7; // 今天出金次数
    optional double outtotalamount = 8; // 今日出金金额
    optional double outtotalfreezeamount = 9; // 今日出金冻结
}

message bank_exchexpensesaccount{ 
    optional string accountno = 1; // 账号
    optional string cusbankid = 2; // 托管银行
    optional string currency = 3; // 币种
    optional int32 isdefault = 4; // 默认标志-0:非默认1:默认
    optional int32 accounttype = 5; // 账号类型
    optional string bankid = 6; // 银行id
    optional string branchbankid = 7; // 支行id
    optional string branchbankname = 8; // 支行名称
    optional string bankaccountname = 9; // 银行账户名
    optional string accountname = 10; // 账号名称（内部名称，可以用于显示）
    optional string cardno = 11; // 证件号
    optional string cardtype = 12; // 证件类型id
    optional int32 bankaccountstatus = 13; // 银行账户状态
    optional int32 bankaccounttype = 14; // 银行账户类型
    optional string bankprovince = 15; // 银行账户所属省份
    optional string bankcity = 16; // 银行账户所属城市
    optional string mobilephone = 17; // 手机
}

message bank_extendfield{ 
    optional int32 fieldid = 1; // 字段id
    optional string fieldcode = 2; // 字段代码
    optional string fieldname = 3; // 字段名称
    optional int32 status = 4; // 状态-0:正常1:注销
    optional int32 fieldtype = 5; // 字段类型-1:扩展字段2:协议字段
    optional int32 usabletype = 6; // 可用类型-1:通用2:机构专用3:投资者专用
}

message bank_file{ 
    optional string cusbankid = 1; // 托管银行
    optional string tradedate = 2; // 交易日
    optional int32 type = 3; //  
    optional string name = 4; // 文件名
    optional string remark = 5; // 备注
    optional string createtime = 6; // 创建时间
    optional int32 comefrom = 7; // 文件来源-1:银行服务2:中心
    optional int32 isvalid = 8; // 文件是否有效-1:有效2:无效的文件
}

message bank_investorgroup{ 
    optional int32 userid = 1; // 投资者用户id
    optional int32 grouptype = 2; // 分组类型-1:出金审核组2:商城价格分组
    optional int32 groupid = 3; // 分组id[商城价格分组]
}

message bank_outmsg{ 
    optional string cusbankid = 1; // 托管银行编号
    optional string accountcode = 2; // 资金账号
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 msgtype = 4; // 消息类型-1:签约2:解约
    optional string msgcontent = 5; // 消息内容
    optional int32 handlestatus = 6; // 处理状态-0:未处理1:已处理
}

message bank_reckonprocess{ 
    optional string tradedate = 1; // 交易日
    optional int32 checkprocessstatus = 2; //  
    optional string checkremark = 3; // 对账过程备注
    optional int32 clearprocessstatus = 4; //  
    optional string clearremark = 5; // 清算备注
    optional int32 signinsyncstatus = 6; // 签约信息同步状态-1.未同步2:同步中3:同步完成4:同步失败
}

message bank_sendmsglog{ 
    optional string exchticket = 1; // 银行服务流水号
    optional string secondticket = 2; // 清算中心银行流水号
    optional int32 funccode = 3; // 功能码
    optional int32 msgtype = 4; // 消息类型-1,发往清算总线。2，发往交易总线
    optional bytes msgcontent = 5; // 消息内容
    optional int32 status = 6; // 处理状态
    optional int32 msgretcode = 7; // 消息回复码
    optional string sendtopic = 8; // 发送主题
}

message bank_systemconfig{ 
    optional int32 configid = 1; // 参数id
    optional string configcode = 2; // 参数代码
    optional string configvalue = 3; // 参数值
    optional int32 validstatus = 4; // 有效状态-0:无效1:有效
    optional string remark = 5; // 备注
}

message bank_tasklog{ 
    optional string exchticket = 1; // 银行服务流水号
    optional int64 extoperateid = 2; // 交易服务流水号
    optional int32 funccode = 3; // 功能码
    optional int32 requestid = 4; // 请求id
    optional int32 accessid = 5; // 会话id
    optional string tradedate = 6; // 交易日(yyyymmdd)
    optional int64 accountid = 7; // 资金账号
    optional string bankticket = 8; // 清算中心银行流水号
    optional string dealdate = 9; // 处理日期
    optional string cusbankid = 10; // 托管银行编号
    optional string bankaccountno = 11; // 银行账号
    optional int32 firstdirect = 12; // 第一处理方向
    optional int32 operatestatus = 13; // 操作状态-0:操作成功1:操作失败
    optional string operateaccountid = 14; // 操作人代码
    optional int32 customersignid = 15; // 客户签约id
    optional string updatetime = 16; // 更新时间
    optional int32 dealednum = 17; // 处理步骤
    optional string plateformretcode = 18; // 平台返回码
    optional string bankretcode = 19; // 清算中心返回代码
    optional double sessionid = 20; // 客户端会话id
}

message bank_taskmsg{ 
    optional int64 extoperateid = 1; // 流水号
    optional string bankticket = 2; // 清算中心银行流水号
    optional string exchticket = 3; // 银行服务流水号
    optional int32 funccode = 4; // 功能码
    optional int32 requestid = 5; // 请求id
    optional int32 accessid = 6; // 会话id
    optional int64 accountid = 7; // 资金账号
    optional string msgserial = 8; // 消息序号
    optional string msgcontent = 9; // 消息内容
    optional int32 direct = 10; // 来源
    optional int32 dealcode = 11; // 处理状态
    optional int32 msgretcode = 12; // 消息回复码
    optional string dealtext = 13; // 处理文本
}

message certificatetypeconfig{ 
    optional int32 enumdicitemid = 1; // 证件类型枚举贡id
    optional int32 isperson = 2; // 是否个人-1:个人2:企业3:两者
    optional string regexpress = 3; // 正则表达式
    optional int32 cardlength = 4; // 长度
    optional string msgerr = 5; // 提示的错误信息
}

message clienttypeconfig{ 
    optional int32 clienttypeid = 1; //  
    optional int32 groupnum = 2; // 客户端类型分组编号(同一分组的类型，不能同时登录)
    optional string modifytime = 3; // 修改时间
    optional int32 modifierid = 4; // 修改人
    optional int32 canlogin = 5; // 是否允许登录-0:不允许1:允许
    optional string clienttypename = 6; // 类型名称
}

message configtree{ 
    optional int32 treeid = 1; // 树id(seq_configtree)
    optional int32 treetype = 2; // 树类型-1:经纪分润树2:自营分润树100:经纪工作流树101:仓库工作流树
    optional string treename = 3; // 树名称
    optional string remark = 4; // 备注
    optional int32 creatorid = 5; // 创建人
    optional string createtime = 6; // 创建时间
}

message configtreenode{ 
    optional int32 nodeid = 1; // 节点id(seq_configtreenode)
    optional int32 treeid = 2; // 所属树id
    optional int32 nodetype = 3; // 节点类型-1:根2:树干3:树叶
    optional int32 areatype = 4; // 机构角色[树干]
    optional int32 areaid = 5; // 机构id[树干]
    optional int32 groupid = 6; // 分组id[树叶]
    optional int32 parentnodeid = 7; // 父节点id
    optional string remark = 8; // 备注
    optional string createtime = 9; // 创建时间
}

message creditwrregister{ 
    optional int64 cwrregisterid = 1; // 信用仓单注册id(222+unix秒时间戳(10位)+xxxxxx)
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 cwruserid = 3; // 持有人id
    optional int64 wrfactortypeid = 4; // 仓单要素类型id
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 goodsunitid = 10; // 商品单位id
    optional int32 isestimate = 11; // 是否估值-0:不估值1:估值
    optional double estimateamount = 12; // 信用仓单估值
    optional int32 esitmatehandletype = 13; // 估值处理方式-1:直接扣款2:加到出金阈值
    optional int32 accountid = 14; // 处理资金账号
    optional int32 regqty = 15; // 注册数量
    optional int32 storageqty = 16; // 已入库数量
    optional int32 remainqty = 17; // 剩余未入库数量
    optional string storagedeadline = 18; // 入库最后期限
    optional int32 cwrstatus = 19; // 信用仓单状态-1:待审核2:审核通过3:审核拒绝4:入库完成5:已注销
    optional string regtime = 20; // 注册时间
    optional string modifytime = 21; // 修改时间
    optional int32 modifierid = 22; // 修改人
}

message creditwrstoragedetail{ 
    optional int64 cwrstoragedetailid = 1; // 信用仓单入库明细id(224+unix秒时间戳(10位)+xxxxxx)
    optional int64 cwrregisterid = 2; // 信用仓单注册id
    optional int32 storageqty = 3; // 入库数量
    optional string storagetime = 4; // 入库时间
    optional int32 operatorid = 5; // 操作人id
}

message creditwrstoragelog{ 
    optional int64 autoid = 1; // 自增id
    optional int64 cwrregisterid = 2; // 信用仓单注册id(222+unix秒时间戳(10位)+xxxxxx)
    optional int64 cwrstoragedetailid = 3; // 信用仓单入库明细id(224+unix秒时间戳(10位)+xxxxxx)
    optional int64 cwrtradedetailid = 4; // 信用仓单交易明细id(223+unix秒时间戳(10位)+xxxxxx)
    optional int32 storageqty = 5; // 入库数量
    optional string storagetime = 6; // 入库时间
    optional int32 operatorid = 7; // 操作人id
}

message creditwrtradedetail{ 
    optional int64 cwrtradedetailid = 1; // 信用仓单交易明细id(223+unix秒时间戳(10位)+xxxxxx)
    optional int64 cwrregisterid = 2; // 信用仓单注册id
    optional int32 tradeqty = 3; // 成交数量
    optional int32 storageqty = 4; // 已入库数量
    optional int32 tradetype = 5; // 成交类型-1:仓单贸易
    optional int64 relatedid = 6; // 关联单号
    optional int32 buyuserid = 7; // 买方用户id
    optional int32 selluserid = 8; // 卖方用户id
    optional int32 cwrtradedetailstatus = 9; // 明细状态-1:未完成2:已完成(全部入库时标记为)
    optional string tradetime = 10; // 成交时间
    optional int64 buyaccountid = 11; // 买方帐户id
    optional int64 sellaccountid = 12; // 卖方帐户id
}

message customertypeareadetail{ 
    optional int32 customertype = 1; // 机构客户类别
    optional int32 userid = 2; // 机构userid
    optional int32 arearoleid = 3; // 角色类型-8:做市会员
}

message cutpositiondetail{ 
    optional int64 cutorderid = 1; // 斩仓委托单号id(103+unix秒时间戳(10位)+xxxxxx)
    optional string cuttime = 2; // 斩仓时间
    optional int64 accountid = 3; // 资金账户id
    optional int32 goodsid = 4; // 商品id
    optional int32 buyorsell = 5; // 交易方向0:买1:卖
    optional int32 cutqty = 6; // 斩仓数量
    optional int32 cuttradeqty = 7; // 斩仓实际成交数量
    optional int32 protolen = 8; // 协议字节数
    optional string protostring = 9; // 协议字符串
    optional string protobytes = 10; // 协议字节串
    optional int32 sentflag = 11; // 发送标识0:未发送1:已发送
    optional int32 rspdflag = 12; // 响应标志(位图):0未响应,1已响应，2已超时,4已失效
}

message deliveryapplyorder{ 
    optional int64 deliveryapplyorderid = 1; // 交割申报委托单号(123+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 accountid = 3; // 申报人账号id
    optional int32 buyorsell = 4; // 方向-0:买1:卖
    optional int32 xgoodsid = 5; // 交易合约id
    optional double xdeliveryprice = 6; // 交易合约交割价
    optional int32 xdeliveryqty = 7; // 交易合约数量
    optional int32 ppricemode = 8; // 辅助合约价格方式-1:商品价2:固定值
    optional int32 pgoodsid = 9; // 辅助合约id(固定值时可不选商品)
    optional double pdeliveryprice = 10; //  
    optional int32 pdeliveryqty = 11; // 辅助合约数量
    optional int32 p2pricemode = 12; // 辅助合约2价格方式-1:商品价2:固定值
    optional int32 p2goodsid = 13; // 辅助合约2id(固定值时可不选商品)
    optional double p2deliveryprice = 14; //  
    optional int32 p2deliveryqty = 15; // 辅助合约2数量
    optional int32 deliverygoodsid = 16; // 交割商品id
    optional int32 deliveryqty = 17; // 交割数量
    optional int32 applyorderstatus = 18; //  
    optional int32 operatetype = 19; // 操作类型
    optional int32 ordersrc = 20; // 单据来源
    optional int32 operatorid = 21; // 操作员账号id(userid)
    optional int64 counterorderid = 22; // 对手交割申请订单id
    optional int32 brandid = 23; // 品牌id(商品价差表升贴水参数表id)
    optional int32 qualityid = 24; // 品质id(商品价差表升贴水参数表id)
    optional int32 specid = 25; // 规格id(商品价差表升贴水参数表id)
    optional int32 warehouseid = 26; // 仓库id(商品价差表升贴水参数表id)
    optional int32 deliverymonthid = 27; // 月份id(商品价差表升贴水参数表id)
    optional int32 isstandard = 28; // 是否标准交割商品-0:不是1:是
    optional double pricemove = 29; // 升贴水-非标准交割商品可填升贴水
    optional string ordertime = 30; // 申报时间
    optional string clientticket = 31; // 客户端流水号
    optional string uuid = 32; // 发起端唯一id
    optional string clientordertime = 33; // 客户端委托时间
    optional int32 clienttype = 34; //  
    optional string auditremark = 35; // 备注
    optional int32 retcode = 36; // 错误代码
    optional int32 sessionid = 37; // 客户端sessionid
    optional double freezeamount = 38; // 冻结货款
    optional int32 xdeliverytradeqty = 39; // x成交数量
    optional int32 xdeliverycancelqty = 40; // x撤销数量
    optional int32 validtype = 41; // 时间有效类型-1当日有效3指定日期有效
    optional string validtime = 42; // 有效期限
    optional double deliverycharge = 43; // 交割手续费[根据方向]
    optional int32 feealgorithm = 44; // 手续费收取方式1：比率2：固定[根据方向]
    optional double memberchargevalue = 45; // 会员手续费设置值[根据方向]
    optional double exchchargevalue = 46; // 交易所手续费设置值[根据方向]
    optional int32 marginalgorithm = 47; // 交收保证金方式-1:比率2.固定
    optional double marginvalue = 48; // 交收保证金值
    optional double freezemargin = 49; // 冻结保证金
    optional int32 takemode = 50; // 提货方式-1:无2:自提3:配送
    optional string receiveraddress = 51; // 提货地址
    optional int32 matchflag = 52; // 配对标识-1:手动配对2:自动配对
}

message deliverycompensationfee{ 
    optional string tradedate = 1; // 交易日
    optional int64 accountid = 2; // 账号id
    optional int32 goodsid = 3; // 商品id
    optional int32 direction = 4; // 方向
    optional int64 provideraccountid = 5; // 交割服务商账号id
    optional int32 curpositionqty = 6; // 账号当前持仓总数量
    optional double curholderamount = 7; // 账号当前持仓金额
    optional int32 declaredqty = 8; // 账号已申报未成交持仓手数
    optional int32 undeclaredqty = 9; // 账号未申报持仓手数
    optional double compensationfee = 10; //  
    optional string updatetime = 11; // 更新时间
    optional int64 serialnumber = 12; // 账号处理流水号(126+unix秒时间戳(10位)+2位(marketserviceid)
    optional int32 handlestatus = 13; // 账号处理状态
    optional int64 serialnumber2 = 14; // 交割服务商处理流水号(127+unix秒时间戳(10位)+2位(marketserviceid)
    optional int32 handlestatus2 = 15; // 交割服务商处理状态
}

message deliverydetail{ 
    optional int64 deliveryid = 1; // 交割单号(121+unix秒时间戳(10位)+xxxxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 deliveryorderid = 4; // 申报单号
    optional int64 accountid = 5; // 账号id
    optional int64 matchaccountid = 6; // 对手账号id
    optional int32 xgoodsid = 7; // 交易合约id
    optional double xdeliveryprice = 8; // 交易合约交割价
    optional int32 xdeliverycloseqty = 9; // 交易合约平仓数量
    optional int32 closeflag = 10; //  
    optional int32 ppricemode = 11; // 辅助合约价格方式-1:商品价2:固定值
    optional int32 pgoodsid = 12; // 辅助合约id(固定值时可不选商品)
    optional double pdeliveryprice = 13; // 辅助合约交割价
    optional int32 pdeliverycloseqty = 14; // 辅助合约平仓数量
    optional int32 p1closeflag = 15; //  
    optional int32 p2pricemode = 16; // 辅助合约2价格方式-1:商品价2:固定值
    optional int32 p2goodsid = 17; // 辅助合约2id(固定值时可不选商品)
    optional double p2deliveryprice = 18; // 辅助合约2交割价
    optional int32 p2deliverycloseqty = 19; // 辅助合约2平仓数量
    optional int32 p2closeflag = 20; //  
    optional int32 deliverygoodsid = 21; // 交割商品id
    optional int32 deliveryqty = 22; // 交割数量
    optional string deliverytime = 23; // 交割时间
    optional double deliveryrtradeqty = 24; // 实际成交数量
    optional double deliveryamount = 25; // 货款金额(x总货款+p总货款)
    optional double deliverypricemove = 26; // 升贴水总额
    optional double deliverytotalamount = 27; // (货款金额+升贴水总额)*(实际成交数量/交割数量)
    optional double deliveryprice = 28; // 交割总金额/实际成交数量
    optional double deliverycharge = 29; // 交割手续费[根据方向]
    optional int32 feealgorithm = 30; // 手续费收取方式1：比率2：固定[根据方向]
    optional double memberchargevalue = 31; // 会员手续费设置值[根据方向]
    optional double exchchargevalue = 32; // 交易所手续费设置值[根据方向]
    optional double xgoodsremainamount = 33; // x剩余总货款
    optional double p1goodsremainamount = 34; // p1剩余总货款
    optional double p2goodsremainamount = 35; // p2剩余总货款
    optional double remaintotalamount = 36; // 实际剩余总货款=(x、p剩余总货款+升贴水总额)*(实际成交数量/交割数量)
    optional int64 wrfactortypeid = 37; // 仓单要素类型id
    optional int32 brandid = 38; // 品牌id(商品价差表升贴水参数表id)
    optional int32 qualityid = 39; // 品质id(商品价差表升贴水参数表id)
    optional int32 specid = 40; // 规格id(商品价差表升贴水参数表id)
    optional int32 warehouseid = 41; // 仓库id(商品价差表升贴水参数表id)
    optional int32 deliverymonthid = 42; // 月份id(商品价差表升贴水参数表id)
    optional int64 relatedwrid = 43; // 关联仓单id
    optional int32 deliverystatus = 44; // 状态-1:待成交2:已成交3:成交失败4:履约完成
    optional int32 handlestatus = 45; //  
    optional int32 mainorderflag = 46; // 是否主单-0:不是主单1:是主单
    optional int32 retcode = 47; // 错误代码
    optional int64 buydeliveryapplyorderid = 48; // 买交割申报委托单号
    optional int64 selldeliveryapplyorderid = 49; // 卖交割申报委托单号
    optional int32 marginalgorithm = 50; // 交收保证金方式-1:比率2.固定
    optional double marginvalue = 51; // 交收保证金值
    optional double freezemargin = 52; // 冻结保证金
    optional int32 takemode = 53; // 提货方式-1:无2:自提3:配送
    optional string receiveraddress = 54; // 提货地址
    optional int32 marginalgorithm2 = 55; // 履约保证金方式-1:比率2.固定
    optional double marginvalue2 = 56; // 履约保证金值
    optional double freezemargin2 = 57; // 履约冻结保证金
}

message deliveryfactorconfig{ 
    optional int64 autoid = 1; // autoid(seq_deliveryfactorconfig)
    optional int32 goodsid = 2; // 交易商品id
    optional int32 deliverygoodsid = 3; // 交割商品id
    optional int32 brandid = 4; // 品牌id(商品价差表升贴水参数表id)
    optional int32 qualityid = 5; // 品质id(商品价差表升贴水参数表id)
    optional int32 specid = 6; // 规格id(商品价差表升贴水参数表id)
    optional int32 warehouseid = 7; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 8; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 isstandard = 9; // 是否标准品-0:不是1:是
}

message deliverygoods{ 
    optional int64 deliverygoodsid = 1; // 交割商品id(seq_deliverygoods)
    optional string deliverygoodscode = 2; // 交割商品代码
    optional string deliverygoodsname = 3; // 交割商品名称
    optional int32 goodsunitid = 4; // 交割商品单位id
    optional int32 deliverygoodstype = 5; // 交割商品类型:1-整装2-散货
    optional int32 standardqty = 6; // 标准数量(库位数量)[标准品特有]
    optional double standardqtyrange = 7; // 标准数量偏差范围[标准品特有]
    optional int32 auditflag = 8; // 交割是否需要审核-0:不需要1:需要审核默认为0
    optional int32 isvalid = 9; // 是否有效-0:无效1:有效
    optional int32 issplit = 10; //  
    optional int32 agreeunit = 11; // 合约单位[散货时默认为1，整装时默认为标准数量]
    optional int32 qtydecimalplace = 12; // 成交量小数位
}

message deliverygoodspricemove{ 
    optional int64 autoid = 1; // 自增id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 pricemovetype = 3; // 升贴水类型-1:品牌2:品质3:规格4:仓库5:月份
    optional string pricemovedesc = 4; // 升贴水描述(类型为仓库时填写仓库名称)
    optional int32 warehouseid = 5; // 仓库id(类型为仓库时填写)
}

message deliveryorder{ 
    optional int64 deliveryorderid = 1; // 申报单号(120+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 deliveryticket = 3; // 申报流水号(按申报次数唯一)(123+unix秒时间戳(10位)+xxxxxx)
    optional int64 accountid = 4; // 申报人账号id
    optional int32 xgoodsid = 5; // 交易合约id
    optional double xdeliveryprice = 6; // 交易合约交割价
    optional int32 xdeliveryqty = 7; // 交易合约数量
    optional int32 ppricemode = 8; // 辅助合约价格方式-1:商品价2:固定值
    optional int32 pgoodsid = 9; // 辅助合约id(固定值时可不选商品)
    optional double pdeliveryprice = 10; //  
    optional int32 pdeliveryqty = 11; // 辅助合约数量
    optional int32 p2pricemode = 12; // 辅助合约2价格方式-1:商品价2:固定值
    optional int32 p2goodsid = 13; // 辅助合约2id(固定值时可不选商品)
    optional double p2deliveryprice = 14; //  
    optional int32 p2deliveryqty = 15; // 辅助合约2数量
    optional int32 deliverygoodsid = 16; // 交割商品id
    optional int32 deliveryqty = 17; // 交割数量
    optional int32 deliveryorderstatus = 18; // 交割申报状态-1:待审核2:审核通过3:审核拒绝4:已撤销5:失败
    optional int32 handlestatus = 19; //  
    optional int64 matchaccountid = 20; // 对手账号id(订单仓单持有账号)
    optional int64 wrfactortypeid = 21; // 仓单要素类型id
    optional int32 brandid = 22; // 品牌id(商品价差表升贴水参数表id)
    optional int32 qualityid = 23; // 品质id(商品价差表升贴水参数表id)
    optional int32 specid = 24; // 规格id(商品价差表升贴水参数表id)
    optional int32 warehouseid = 25; // 仓库id(商品价差表升贴水参数表id)
    optional int32 deliverymonthid = 26; // 月份id(商品价差表升贴水参数表id)
    optional string ordertime = 27; // 申报时间
    optional int32 operatorid = 28; // 申报人(userid)
    optional int32 deliveryorderfrom = 29; // 申报来源-1客户端2管理端
    optional int32 auditmode = 30; // 审核方式-0:自动审核1:人工审核
    optional string audittime = 31; // 审核时间
    optional int32 auditid = 32; // 审核人
    optional string clientticket = 33; // 客户端流水号
    optional string uuid = 34; // 发起端唯一id
    optional string clientordertime = 35; // 客户端委托时间
    optional int32 clienttype = 36; //  
    optional string auditremark = 37; // 备注
    optional int32 retcode = 38; // 错误代码
    optional double freezeamount = 39; // 冻结货款
    optional int64 buydeliveryapplyorderid = 40; // 买交割申报委托单号
    optional int64 selldeliveryapplyorderid = 41; // 卖交割申报委托单号
    optional double buydeliverycharge = 42; // 买交割手续费
    optional int32 buyfeealgorithm = 43; // 买手续费收取方式1：比率2：固定
    optional double buymemberchargevalue = 44; // 买会员手续费设置值
    optional double buyexchchargevalue = 45; // 买交易所手续费设置值
    optional double selldeliverycharge = 46; // 卖交割手续费
    optional int32 sellbuyfeealgorithm = 47; // 卖手续费收取方式1：比率2：固定
    optional double sellmemberchargevalue = 48; // 卖会员手续费设置值
    optional double sellexchchargevalue = 49; // 卖交易所手续费设置值
    optional int32 marginalgorithm = 50; // 卖方交收保证金方式-1:比率2.固定[卖方]
    optional double marginvalue = 51; // 卖方交收保证金值
    optional double freezemargin = 52; // 卖方冻结保证金
    optional int32 takemode = 53; // 提货方式-1:无2:自提3:配送
    optional string receiveraddress = 54; // 提货地址
    optional int32 bmarginalgorithm = 55; // 买方交收保证金方式-1:比率2.固定
    optional double bmarginvalue = 56; // 买方交收保证金值
    optional double bfreezemargin = 57; // 买方冻结保证金
}

message deliveryordergoodshandle{ 
    optional int64 deliveryorderid = 1; // 申报单号(120+unix秒时间戳(10位)+xxxxxx)
    optional int32 goodsid = 2; // 交易合约id
    optional int32 deliveryqty = 3; // 交易合约数量
    optional int32 buyerfreezeqty = 4; // 交易合约买方冻结数量
    optional int32 sellerfreezeqty = 5; // 交易合约卖方冻结数量
    optional int32 buyerhandlestatus = 6; // 商品买方处理状态-1:待冻结2:冻结中3:冻结成功4:冻结失败
    optional int32 sellerhandlestatus = 7; // 商品卖方处理状态-1:待冻结2:冻结中3:冻结成功4:冻结失败
}

message deliverystandardgoods{ 
    optional int32 goodsid = 1; // 交易商品id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 brandid = 3; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 specid = 4; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 6; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 7; // 月份id(1交割品种升贴水参数表autoid)
}

message deliveryswapfee_log{ 
    optional int64 accountid = 1; // 资金账号
    optional int32 goodsid = 2; // 商品id
    optional string tradedate = 3; // 交易日
    optional int32 isrecord = 4; // 是否已记录
    optional double swapfee = 5; // 调期费
}

message divideconfigdetailnew{ 
    optional int64 divideconfigid = 1; // divideconfigid(autoid)
    optional int32 groupid = 2; // 分润组id
    optional int32 divideindex = 3; // 分润顺序
    optional int32 dividefeetype = 4; //  
    optional int32 nodetype = 5; // 节点类型1:分组2:机构
    optional int32 areatype = 6; // 分润机构角色[机构]
    optional int32 areaid = 7; // 分润机构id[机构]
    optional int32 dividetype = 8; // 分配算法-1:比率2:固定3:余下全部
    optional double dividevalue = 9; // 分润值
}

message divideconfignew{ 
    optional int64 divideconfigid = 1; // divideconfigid(autoid)
    optional string divideconfigname = 2; // 配置名称
    optional int32 dividefeetype = 3; //  
    optional int32 dividetreeid = 4; // 引用分润树
    optional string remark = 5; // 备注
    optional int32 creatorid = 6; // 创建人
    optional string createtime = 7; // 创建时间
    optional int32 isdefault = 8; //  
}

message divideconfignewrelation{ 
    optional int64 divideconfigid = 1; // divideconfigid(autoid)
    optional int32 marketid = 2; // 市场id交易手续费:市场id；交收手续费：仓库id；出入金手续费：渠道id
    optional int32 goodsid = 3; // 商品id-0表示到市场
    optional int32 dividefeetype = 4; //  
    optional string createtime = 5; // 创建时间
}

message dividefeeconfig{ 
    optional int32 tradefeeid = 1; // 费用id-原始费用id
    optional int32 usertype = 2; // 账户类型-2:机构5:投资者
    optional int32 feepart = 3; // 费用部分-1:交易所部分2:会员部分
    optional int32 dividefeeid = 4; // 分润费用id
    optional int32 divideusedfeeid = 5; // 分润使用费用id
}

message dividefeedescription{ 
    optional int32 dividefeeid = 1; // 分润费用id
    optional string dividefeename = 2; // 分润费用
    optional string remark = 3; // 描述
}

message dividegroupconfignew{ 
    optional int64 divideconfigid = 1; // divideconfigid(autoid)
    optional int32 groupid = 2; // 经纪会员分润组id
    optional int32 dividefeetype = 3; //  
    optional string dividedesc = 4; // 分润描述
    optional int32 isdefault = 5; //  
    optional string remark = 6; // 备注
    optional int32 creatorid = 7; // 创建人
    optional string createtime = 8; // 创建时间
}

message division{ 
    optional int64 autoid = 1; // 自增id
    optional string divisioncode = 2; // 行政代码
    optional string shortcode = 3; // 地区简码
    optional string parentcode = 4; // 上级行政代码
    optional string divisionlevel = 5; // 行政级别
    optional string divisionname = 6; // 行政名称
    optional string pathname = 7; // 路径名称
    optional string separablename = 8; // 可拆分的全称
    optional string postcode = 9; // 邮政编码
    optional string modifytime = 10; // 修改时间
    optional int32 modifierid = 11; // 修改人
}

message draft_deliverystandardgoods{ 
    optional int32 goodsid = 1; // 交易商品id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 brandid = 3; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 specid = 4; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 6; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 7; // 月份id(1交割品种升贴水参数表autoid)
}

message draft_goods_new{ 
    optional int64 autoid = 1; // autoid
    optional int32 goodsid = 2; // 商品id
    optional string goodscode = 3; // 商品代码
    optional string goodsname = 4; // 商品名称
    optional int32 marketid = 5; // 所属市场id
    optional int32 goodsgroupid = 6; // 所属商品组id
    optional int32 goodsstatus = 7; // 商品状态-1:待审核2:未上市3:上市4:已注销5:核拒绝6:退市7:待退市
    optional int32 currencyid = 8; // 报价货币id
    optional int32 goodunitid = 9; // 报价单位id
    optional double agreeunit = 10; // 合约单位
    optional int32 decimalplace = 11; // 报价小数位
    optional string listingdate = 12; // 交易开始日期
    optional string lasttradedate = 13; // 最后交易日期(状态：待退市)
    optional string delistingdate = 14; // 商品退市时间(状态：退市)
    optional int32 deliveryflag = 15; // 交割标志-0:不可交割1:可交割
    optional int32 hasquoter = 16; // 是否有报价商-0:无报价商1:有报价商
    optional int32 hqprotecttime = 17; // 行情保护时间(秒)
    optional int32 quoteshowtype = 18; // 行情报价类型:1:成交价2:买卖中间价3:含买价4:含卖价
    optional int32 quoteshowtypeinterval = 19; // 行情报价间隔时间(秒)(成交价时为0)
    optional int32 modifystatus = 20; // 变更状态-1:未变更2:变更中3:待审核4:已审核
    optional int32 goodstradetype = 21; // 商品交易权限类型-1:可建可平3:不可建可平
    optional int32 creatorid = 22; // 创建人
    optional string createtime = 23; // 创建时间
    optional int64 auditaccountid = 24; // 审核操作员账号
    optional string audittime = 25; // 审核时间
    optional string modifytime = 26; // 修改时间
    optional int32 modifierid = 27; // 修改人
    optional int64 cancelaccountid = 28; // 注销操作员账号
    optional string canceltime = 29; // 注销时间
    optional string remark = 30; // 备注
    optional string oldcontent = 31; // 旧json内容
    optional string newcontent = 32; // 新json内容
    optional int32 delistingmode = 33; // 退市方式-1:退市平仓2:退市交收3:不处理(仅期权)
    optional int32 forceclosemode = 34; // 定期强平方式-1:无2:每日3:每周4:每月[收益权]
    optional int32 forceclosevalue = 35; // 定期强平参数[收益权]
    optional int32 cutmode = 36; // 斩仓方式-1:不斩仓2:自动斩仓3:半自动斩仓
    optional int32 quoteminunit = 37; // 行情最小变动单位[整数，报价小数位一起使用]
    optional int32 isbuylimited = 38; // 是否限制建仓量-0:不限制1:限制
    optional int32 outerdealmode = 39; // 外部成交方式[通道交易]-1:净头寸2:开平3:平今
    optional int32 innerdealmode = 40; // 内部成交方式[通道交易]-1:净头寸2:开平3:平今
    optional int32 closepricemode = 41; // 强平价格方式-1:市价2:最新价3:涨跌停
    optional double closepriceparam = 42; // 强平最新价倍数-方式为2时，指定最新价倍数
    optional int32 qtydecimalplace = 43; // 成交量小数位
    optional int32 goodscurrencyid = 44; // 合约货币id
    optional int32 goodsquotetype = 45; // 合约报价类型:1-直接报价2-间接报价
    optional int32 quotegear = 46; // 行情档位(1-10)
    optional string outgoodscode = 47; // 商品代码(外部)
}

message draft_goodsdeliveryfactor{ 
    optional int32 goodsid = 1; // 交割合约id
    optional int32 pricemovetype = 2; // 升贴水类型-1:品牌2:品质3:规格4:仓库5:月份
    optional int32 pricemoveid = 3; // 升贴水参数id(1交割品种升贴水参数表autoid)
    optional string pricemovedesc = 4; // 升贴水参数描述(1交割品种升贴水参数表更新时需同步更新)
}

message draft_goodsdeliverypricemove{ 
    optional int64 autoid = 1; // 自增id
    optional int32 goodsid = 2; // 交割合约id
    optional int32 pricemoveid = 3; // 升贴水参数id(1交割品种升贴水参数表autoid)
    optional int32 pricemovetype = 4; // 升贴水类型-1:品牌2:品质3:规格4:仓库5:月份
    optional string pricemovedesc = 5; // 升贴水参数描述(1交割品种升贴水参数表更新时需同步更新)
    optional double pricemovevalue = 6; // 价差
}

message draft_goodsdeliveryrelation{ 
    optional int32 goodsid = 1; // 交割合约id
    optional int32 pgoodsid = 2; // 辅助合约id
    optional int32 deliverygoodsid = 3; // 交割商品
    optional int32 mindeliveryqty = 4; // 最小交割手数(k)
    optional int32 xdeliveryratio = 5; // 交割合约系数
    optional int32 pdeliveryratio = 6; // 辅助合约系数
    optional int32 ppricemode = 7; // 辅助合约价格方式-1:商品价2:固定值
    optional double pdeliveryprice = 8; // 辅助合约价格(价格方式为商品时填写0，为固定值时填写固定值)
    optional int32 p2goodsid = 9; // 辅助合约2id
    optional int32 p2deliveryratio = 10; // 辅助2合约系数
    optional int32 p2pricemode = 11; // 辅助合约2价格方式-1:商品价2:固定值
    optional double p2deliveryprice = 12; // 辅助合约2价格(价格方式为商品时填写0，为固定值时填写固定值)
    optional string begindate = 13; // 起始日期(yyyymmdd)
    optional string enddate = 14; // 结束日期(yyyymmdd)
    optional int64 performancetemplateid = 15; // 履约模板id
    optional int32 performancemode = 16; // 履约方式-1:立即执行2:履约模板执行
    optional int32 deliverymode = 17; // 交割方式-1:点选式2:申报式
    optional int32 rratio = 18; // 兑换系数(r)
    optional int32 deliverypricerule = 19; // 交收价规则-1:申报时价格2:成交时价格
    optional int32 hasstandard = 20; // 是否有标准品–0:无1:有默认1
    optional int32 caninvestor = 21; // 是否允许买卖双方互摘-0:不允许1:允许默认1
    optional int32 hasxhold = 22; // 圈内会员是否需要x商品持仓-0:不需要1:需要默认1
    optional int32 hassellerwr = 23; // 卖方是否需要仓单-0:不需要1:需要默认1
    optional int32 deliveryfeemode = 24; // 调期费收取方式-1:按标准品2:按圈内会员
    optional int32 providermarginalgorithm = 25; // 卖方交收保证金方式(圈内会员)-1:比率2.固定
    optional double providermarginvalue = 26; // 卖方交收保证金值(圈内会员)
    optional int32 investormarginalgorithm = 27; // 卖方交收保证金方式(投资者)-1:比率2.固定
    optional double investormarginvalue = 28; // 卖方交收保证金值(投资者)
    optional int32 binvestormarginalgorithm = 29; // 买方交收保证金方式(投资者)-1:比率2.固定
    optional double bprovidermarginvalue = 30; // 买方交收保证金值(圈内会员)
    optional int32 bprovidermarginalgorithm = 31; // 买方交收保证金方式(圈内会员)-1:比率2.固定
    optional double binvestormarginvalue = 32; // 买方交收保证金值(投资者)
    optional int32 canselectable = 33; // 仓单要素是否允许自选-0:不允许1;允许
    optional int32 performancemode2 = 34; // 卖履约方式-1:立即执行2:履约模板执行
    optional int32 performancetemplateid2 = 35; // 卖履约计划模板id(方式为1时填-1,为2时选择模板)
    optional int32 provideruserid = 36; // 圈内会员id[调期费收取方式=2时设置]
    optional int32 deliverypricerule2 = 37; // 交收价规则[点选式]-1:行情价2:建仓价
}

message draft_goodsmarginconfig{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 customertypeid = 2; // 投资者客户类别id(枚举项表)
    optional int32 marginalgorithm = 3; // 保证金计算方式-1.固定2.比率
    optional double marketmarginvalue = 4; // 即市保证金值
    optional double reckonmarginvalue = 5; // 结算保证金值
    optional double lockmarginvalue = 6; // 锁仓保证金
    optional int32 isdefault = 7; // 是否默认-0:非默认1：默认
    optional int32 marketid = 8; // 市场id
    optional double realmarginvalue = 9; // 实付比率[做市收益权市场“是否交易授信”=1]
    optional int32 realmarginalgorithm = 10; // 实付保证金计算方式-1:比率2.固定
}

message draft_goodsoptionproperty{ 
    optional int64 goodsid = 1; // 商品id(自增id)
    optional int32 optiontype = 2; // 期权类型-1:认购(看涨)2:认沽(看跌)3:认购+认沽
    optional int32 pricefator = 3; // 价格取整系数(按小数位位数计算)
    optional int32 stepvalue = 4; // 档位间矩(按小数位位数计算)
    optional int32 cuppricegear = 5; // 看涨向上档位-使用行情买五档，因此看涨向上档位+看涨向下档位<=4
    optional int32 cdownpricegear = 6; // 看涨向下价格档位-使用行情买五档，因此看涨向上档位+看涨向下档位<=4
    optional int32 puppricegear = 7; // 看跌向上价格档位-行情卖五档，看跌向上档位+看跌向下档位<=4
    optional int32 pdownpricegear = 8; // 看跌向下价格档位-行情卖五档，看跌向上档位+看跌向下档位<=4
    optional int32 expiretype = 9; // 行权日类型-1:滚动行权2:固定日行权
    optional int32 expirecycle = 10; // 行权周期(天)-1:滚动行权时填写
    optional string expiredate = 11; // 行权日(yyyymmdd)-2:固定日行权时填写
    optional int32 islimited = 12; // 是否限制可售数量-0:不限制1:限制
    optional int32 paymode = 13; // 赔付上限方式-1:不限2:权利金倍数[为2时，委托、成交按赔付上限冻结]
    optional int32 payvalue = 14; // 赔付权利金倍数[方式为2时可设，可为0]
    optional int32 premiumautomode = 15; // 权利金自动方式-1:比率2.固定
    optional double premiumautovalue = 16; // 权利金自动值
    optional int32 shippingmode = 17; // [期权、挂牌期权]发货方式-1:发货商品(中远)2:融货方(烟台)
    optional int32 middleuserid = 18; // 融货方id-shippingmode=2时设置
    optional int64 performancetemplateid = 19; // 履约计划模板id
    optional int64 middleaccountid = 20; // 融货方资金账号
    optional int32 exercisetype = 21; // 行权类型-1:欧式期权2:美式期权
    optional int32 premiumdecimalplace = 22; // 权利金小数位[场外期权]
    optional double premiumspreadvalue = 23; // 权利金点差值[场外期权]
    optional int32 premiumspreadalgorithm = 24; // 权利金点差方式[场外期权]1:比率2:固定
    optional string targetcode = 25; // 标的物代码
}

message draft_goodstradefee{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 tradefeeid = 2; //  
    optional int32 feealgorithm = 3; // 费用算法-1：比率2：固定
    optional double exchangevalue = 4; // 交易所费用值
    optional double memberdefaultvalue = 5; // 会员费用默认值
    optional double memberminvalue = 6; // 会员费用最小值
    optional double membermaxvalue = 7; // 会员费用最大值
    optional int32 marketid = 8; // 市场id
}

message draft_goodstraderule{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 ruleid = 2; //  
    optional double paramvalue = 3; // 参数值
    optional int32 marketid = 4; // 市场id
}

message draft_taaccountconfig{ 
    optional int64 accountid = 1; // 资金账号id(外部账号)
    optional int32 userid = 2; // 用户id
    optional string newcontent = 3; // 新json内容
}

message draft_useraccount_new{ 
    optional int64 autoid = 1; // autoid
    optional int32 userid = 2; // 用户id
    optional int32 usertype = 3; // 账户类型-1:交易所2:机构3:会员子机构4:经纪人5:投资者
    optional string accountname = 4; // 账户名称(机构名称)
    optional int32 parentuserid = 5; // 所属机构id
    optional int32 broker = 6; // 所属经纪人id
    optional string subarealevelpath = 7; // 子机构层级路径(逗号分隔,首尾加逗号)
    optional int32 refereeuserid = 8; // 推荐人id
    optional int32 memberuserid = 9; // 所属会员id
    optional int32 accountstatus = 10; // 账户状态-1:待激活2:待审核3:待复核4:正常5:审核拒绝6:已注销
    optional int64 reckonaccountid = 11; // 默认结算资金账号id(机构分润使用)/投资者-外部关联的子账户
    optional int32 modifystatus = 12; // 变更状态1未变更2变更中3变更待审核4变更待复核(投资者)
    optional string createtime = 13; // 创建时间
    optional int32 creatorid = 14; // 创建人
    optional string audittime = 15; // 审核时间
    optional int32 audituserid = 16; // 审核人
    optional string auditremark = 17; // 审核备注
    optional string canceltime = 18; // 销户时间
    optional int32 canceluserid = 19; // 销户人
    optional string modifytime = 20; // 修改时间
    optional int32 modifierid = 21; // 修改人
    optional string modifyremark = 22; // 变更备注
    optional string oldcontent = 23; // 旧json内容
    optional string newcontent = 24; // 新json内容
}

message draft_userinfo{ 
    optional int32 userid = 1; // 用户id
    optional int32 userinfotype = 2; // 用户信息类型-1:个人2:企业
    optional string customername = 3; // 客户名称(企业名称)
    optional int32 userstatus = 4; // 用户状态-1：正常2：注销
    optional int32 usertype = 5; // 账户类型-1:交易所2:机构3:会员子机构4:经纪人5:投资者
    optional int32 openmode = 6; //  
    optional int32 cardtypeid = 7; // 证件类型id
    optional string cardnum = 8; // 证件号码(加密存储)
    optional string halfbodyphotourl = 9; // 半身照地址
    optional string cardfrontphotourl = 10; // 证件正面图片地址
    optional string cardbackphotourl = 11; // 证件背面图片地址
    optional int32 biznature = 12; //  
    optional string bizscope = 13; // 企业经营范围(企业)
    optional string legalpersonname = 14; // 法人姓名(企业)
    optional string contactname = 15; // 联系人
    optional int32 sex = 16; // 用户性别0:女1:男
    optional string telphone = 17; // 联系电话(加密存储)
    optional string mobile = 18; // 手机号码(加密存储)
    optional string fax = 19; // 传真(加密存储)
    optional string email = 20; // 邮件(加密存储)
    optional string qq = 21; // qq(加密存储
    optional string wechat = 22; // 微信(加密存储)
    optional int32 countryid = 23; // 国家
    optional int32 provinceid = 24; // 省
    optional int32 cityid = 25; // 市
    optional int32 districtid = 26; // 地区
    optional string company = 27; // 公司(个人)
    optional string address = 28; // 地址
    optional string postalcode = 29; // 邮政编码
    optional string createtime = 30; // 创建时间
    optional int32 creatorid = 31; // 创建人
    optional string modifiertime = 32; // 修改时间
    optional int32 modifierid = 33; // 修改人
    optional string remark = 34; // 备注
    optional string wskhinfo = 35; // 开户申请信息(json)
    optional string signpdfurl = 36; // 签约pdf文件
    optional string legalcardfrontphotourl = 37; // 法人身份证正面照地址
    optional string legalcardbackphotourl = 38; // 法人身份证背面照地址
    optional string otherurl = 39; // 其它图片地址[使用分号分隔]
    optional int32 hasencrypt = 40; // 数据是否已加密-0:未加密1:已加密
    optional string bankname = 41; // 银行名称
    optional string bankaccount = 42; // 银行帐号(加密存储)
    optional string bankcardfrontphotourl = 43; // 银行卡正面照地址
    optional int32 needinvoice = 44; // 是否需要发票-0:不需要1:需要
    optional string bankid = 45; // 银行编码
    optional string attachment1 = 46; // 附件1
    optional string attachment2 = 47; // 附件2
}

message eb_contractconfig{ 
    optional int32 provideruserid = 1; // 交收服务商id
    optional string customercontract = 2; // 客户协议
    optional string createtime = 3; // 创建时间
    optional int32 creatorid = 4; // 创建人
}

message eb_contractinfo{ 
    optional int32 provideruserid = 1; // 交收服务商id
    optional int32 investoruserid = 2; // 投资者用户id
    optional string contractname = 3; // 协议文件名
    optional string createtime = 4; // 创建时间
}

message enumdic{ 
    optional int64 autoid = 1; // 自增id
    optional int32 enumgroupid = 2; // 所属枚举分组id
    optional string enumdiccode = 3; // 枚举代码
    optional string enumdicname = 4; // 枚举名称
    optional int32 itemstatus = 5; // 枚举项状态-1.启用2.不启用
    optional int32 ismappingtobank = 6; // 是否映射到银行服务-0:不映射1:映射
    optional string remark = 7; // 备注
    optional int32 showflag = 8; // 是否显示-0:不显示1:显示
    optional int32 modifyflag = 9; // 修改标志-0:不允许修改1:允许修改
    optional int32 itemmaintaintype = 10; //  
}

message enumdicitem{ 
    optional int64 autoid = 1; // 自增id
    optional int32 enumdicid = 2; // 所属枚举id
    optional string enumdiccode = 3; // 所属枚举代码
    optional string enumdicname = 4; // 枚举项名称
    optional int32 enumitemname = 5; // 枚举项值
    optional int32 enumitemstatus = 6; // 枚举项状态-1.启用2.不启用
    optional string bankmappedvalue = 7; // 银行服务对应值
    optional string remark = 8; // 备注
    optional string enumitemvalue = 9; // 通用值-[币种通用简写]
    optional string param1 = 10; // 参数1[币种:币种小数位]
}

message enumgroup{ 
    optional int32 enumgroupid = 1; // 枚举分组id
    optional string enumgroupname = 2; // 枚举分组名称
    optional string remark = 3; // 备注
}

message erms_contractinfo{ 
    optional int64 contractid = 1; // 合同id(seq_erms_contractinfo)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional string contractno = 3; // 合同编号
    optional int32 contracttype = 4; // 合同类型-1:采购合同2:销售合同
    optional int32 userid = 5; // 用户id
    optional int64 accountid = 6; // 资金账户id
    optional string customername = 7; // 供货商客户名称
    optional string signdate = 8; // 签订日期
    optional string contractattachment = 9; // 合同附件
    optional string productname = 10; // 产品名称
    optional int32 wrfactoryid = 11; // 仓单要素id
    optional int32 deliverygoodsid = 12; // 现货品种id
    optional double contractamount = 13; // 合同金额
    optional int32 contractqty = 14; // 合同数量
    optional string remark = 15; // 备注
    optional int32 contractstatus = 16; // 合同状态-0:未生效1:已生效
    optional int32 handlestatus = 17; // 处理状态
    optional int32 creatorid = 18; // 创建人
    optional string createtime = 19; // 创建时间
    optional int32 qualityid = 20; // 品质id(商品价差表升贴水参数表id)无此要素为-1
    optional int32 brandid = 21; // 品牌id(商品价差表升贴水参数表id)无此要素为-1
    optional int32 specid = 22; // 规格id(商品价差表升贴水参数表id)无此要素为-1
    optional int32 warehouseid = 23; // 仓库id(1交割品种升贴水参数表autoid)无此要素为-1
    optional int32 deliverymonthid = 24; // 月份id(1交割品种升贴水参数表autoid)无此要素为-1
}

message erms_dgconvertconfig{ 
    optional int32 convertfactorid = 1; // 折算要素id
    optional int32 middlegoodsid = 2; // 中间品种id
    optional double convertratio = 3; // 折算系数
    optional int32 modifierid = 4; // 修改人
    optional string modifytime = 5; // 修改时间
}

message erms_dgconvertfactor{ 
    optional int64 convertfactorid = 1; // 折算要素id(seq_erms_dgconvertfactor)
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 brandid = 3; // 品牌id(商品价差表升贴水参数表id)无此要素为-1
    optional int32 qualityid = 4; // 品质id(商品价差表升贴水参数表id)无此要素为-1
    optional int32 specid = 5; // 规格id(商品价差表升贴水参数表id)无此要素为-1
    optional int32 warehouseid = 6; // 仓库id(1交割品种升贴水参数表autoid)无此要素为-1
    optional int32 deliverymonthid = 7; // 月份id(1交割品种升贴水参数表autoid)无此要素为-1
    optional double pricemove = 8; // 升贴水
    optional int32 modifierid = 9; // 修改人
    optional string modifytime = 10; // 修改时间
    optional string convertdesc = 11; // 折算描述-中间品名称1(折算系数1),中间品名称2(折算系数2)
}

message erms_exposureconfig{ 
    optional int32 userid = 1; // 机构用户id其他做市关系，都设置为1
    optional int32 exposuretype = 2; // 敞口类型-1:总敞口
    optional int32 middlegoodsid = 3; // 中间品种id
    optional int32 exposurethresholdup = 4; // 敞口阈值
    optional int32 exposurethresholddown = 5; // 敞口阈值下限
    optional string modifytime = 6; // 修改时间
    optional int32 modifierid = 7; // 修改人
}

message erms_goodsconvert{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 middlegoodsid = 2; // 中间品种id
    optional double convertratio = 3; // 折算系数
    optional int32 modifierid = 4; // 修改人
    optional string modifytime = 5; // 修改时间
}

message erms_goodsgroupconvert{ 
    optional int32 goodsgroupid = 1; // 商品组id
    optional int32 middlegoodsid = 2; // 中间品种id
    optional double convertratio = 3; // 折算系数
    optional int32 modifierid = 4; // 修改人
    optional string modifytime = 5; // 修改时间
}

message erms_middlegoods{ 
    optional int64 middlegoodsid = 1; // 中间品种id(seq_erms_middlegoods)
    optional string middlegoodsname = 2; // 中间品种名称
    optional string middlegoodscode = 3; // 中间品代码
    optional int32 goodsunitid = 4; // 单位id
    optional int32 relatedgoodsid = 5; // 关联交易商品id
    optional double evaluateratio = 6; // 估价系数
    optional int32 isvalid = 7; // 是否有效-0:无效1:有效
    optional int32 qtydecimalplace = 8; // 数量小数位
    optional int32 creatorid = 9; // 创建人
    optional string createtime = 10; // 创建时间
    optional int32 modifierid = 11; // 修改人
    optional string modifytime = 12; // 修改时间
}

message errorcode{ 
    optional int32 errorid = 1; // 异常id
    optional string errorcode = 2; // 异常代码
    optional string modulecode = 3; // 所属模块
    optional string operatecode = 4; // 所属操作
    optional string description = 5; // 异常描述
}

message exchangeacc{ 
    optional int64 autoid = 1; // 自增id
    optional int32 accid = 2; // 用户信息id
    optional int32 acctype = 3; // 账务类别-1:资产类2:负债类3:权益类4:其它类
    optional int32 accsubject = 4; // 总科目-1:银行存款2:代理清算资金3:收入
    optional int32 detailsubject = 5; //  
    optional string accname = 6; // 账户名称
    optional double balance = 7; // 账户余额
    optional double changeamount = 8; // 今日变动金额-待开市时清零
}

message extenalexchangerate{ 
    optional int64 accountid = 1; // 资金账号id(外部母账号)
    optional int32 channelid = 2; // 对冲渠道id
    optional int32 oricurrencyid = 3; // 源币种id-商品币种
    optional int32 descurrencyid = 4; // 目标币种id-基币币种
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional double exchangerate = 6; // 汇率
    optional string updatetime = 7; // 更新时间
    optional string remark = 8; // 备注
}

message extenalfee{ 
    optional int64 accountid = 1; // 资金账号id(外部母账号)
    optional int32 channelid = 2; // 对冲渠道id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 goodsgroupid = 4; // 商品组(品种)id
    optional int32 goodsid = 5; // 商品id
    optional int32 feealgorithm = 6; // 费用算法-1:比率2.固定
    optional double openfeevalue = 7; // 开仓收取值
    optional double closefeevalue = 8; // 平昨收取值(平仓)
    optional double closetodayfeevalue = 9; // 平今收取值
    optional string updatetime = 10; // 更新时间
    optional string remark = 11; // 备注
}

message extenalmargin{ 
    optional int64 accountid = 1; // 资金账号id(外部母账号)
    optional int32 channelid = 2; // 对冲渠道id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 goodsgroupid = 4; // 商品组(品种)id
    optional int32 goodsid = 5; // 商品id
    optional int32 collectmethod = 6; // 收取方式-1:绝对收取
    optional int32 marginalgorithm = 7; // 保证金算法-1:比率2.固定
    optional int32 currencyid = 8; // 货币id[固定]-作废
    optional double longmarginvalue = 9; // 多头保证金收取值
    optional double shormargintvalue = 10; // 空头保证金收取值
    optional string updatetime = 11; // 更新时间
    optional string remark = 12; // 备注
}

message externalexchange{ 
    optional int64 autoid = 1; // autoid-seq_externalexchange
    optional string exexchangecode = 2; // 外部交易所代码
    optional string exexchangename = 3; // 外部交易所名称(简称)
    optional string updatetime = 4; // 更新时间
    optional int32 quotegear = 5; // 行情档位(1-10)
    optional int32 showbrokerflag = 6; // 是否显示买卖经纪盘-0:不显示1:显示
    optional string exchangefullname = 7; // 外部交易所全称
}

message funcmenulist{ 
    optional string resourcecode = 1; //  
    optional string resourcename = 2; // 资源名
    optional int32 resourcelevel = 3; // 级别1-一级2-二级3-三级4-四级
    optional int32 menutype = 4; // 1-管理端2-交易端3-会员平台
    optional string parentcode = 5; // 上级资源代码
    optional string url = 6; // url
    optional int32 sort = 7; //  
    optional string iconame = 8; // 菜单图标
    optional string remark = 9; // remark
}

message fundadjustmentapply{ 
    optional int64 autoid = 1; // 申请id
    optional int32 accountid = 2; // 资金帐号id
    optional int32 userid = 3; // 用户id
    optional int32 operatetype = 4; // 操作类型
    optional double amount = 5; // 资金
    optional int32 applystatus = 6; // 申请状态-1:待审核2:审核中3:审核成功4:审核拒绝5:审核失败6:审核超时
    optional string applytime = 7; // 申请时间
    optional int32 auditoruserid = 8; // 审核人
    optional string audittime = 9; // 审核时间
    optional string auditremark = 10; // 审核备注
    optional string applyremark = 11; // 申请备注
}

message goods{ 
    optional int64 goodsid = 1; // 商品id(自增idseq_goods)
    optional string goodscode = 2; // 商品代码(内部)
    optional string goodsname = 3; // 商品名称
    optional int32 marketid = 4; // 所属市场id
    optional int32 goodsgroupid = 5; // 所属商品组id
    optional int32 goodsstatus = 6; // 商品状态-1:待审核2:未上市3:上市4:已注销5:审核拒绝6:退市7:待退市
    optional int32 currencyid = 7; // 报价货币id
    optional int32 goodunitid = 8; // 报价单位id
    optional double agreeunit = 9; // 合约单位
    optional int32 decimalplace = 10; // 报价小数位
    optional string listingdate = 11; // 交易开始日期
    optional string lasttradedate = 12; // 最后交易日期(状态：待退市)
    optional string delistingdate = 13; // 商品退市时间(状态：退市)--已作废
    optional int32 deliveryflag = 14; // 交割标志-0:不可交割1:可交割
    optional int32 hasquoter = 15; // 是否有报价商-0:无报价商1:有报价商
    optional int32 hqprotecttime = 16; // 行情保护时间(秒)
    optional int32 quoteshowtype = 17; // 行情报价类型:1:成交价2:买卖中间价3:含买价4:含卖价
    optional int32 quoteshowtypeinterval = 18; // 行情报价间隔时间(秒)(成交价时为0)
    optional int32 modifystatus = 19; // 变更状态-1:未变更2:变更中3:待审核4:已审核
    optional int32 goodstradetype = 20; // 商品交易权限类型-1:可建可平3:不可建可平
    optional int32 creatorid = 21; // 创建人
    optional string createtime = 22; // 创建时间
    optional int64 auditaccountid = 23; // 审核操作员账号
    optional string audittime = 24; // 审核时间
    optional string modifytime = 25; // 修改时间
    optional int32 modifierid = 26; // 修改人
    optional int64 cancelaccountid = 27; // 注销操作员账号
    optional string canceltime = 28; // 注销时间
    optional string remark = 29; // 备注
    optional int32 delistingmode = 30; // 退市方式-1:退市平仓2:退市交收3:不处理(仅期权币币兑换)
    optional int32 forceclosemode = 31; // 定期强平方式-1:无2:每日3:每周4:每月[收益权]
    optional int32 forceclosevalue = 32; // 定期强平参数[收益权]
    optional int32 cutmode = 33; // 斩仓方式-1:不斩仓2:自动斩仓3:半自动斩仓
    optional int32 quoteminunit = 34; // 行情最小变动单位[整数，报价小数位一起使用]
    optional int32 isbuylimited = 35; // 是否限制建仓量-0:不限制1:限制
    optional int32 innerdealmode = 36; // 内部成交方式[通道交易]-1:净头寸2:开平3:平今
    optional int32 outerdealmode = 37; // 外部成交方式[通道交易]-1:净头寸2:开平3:平今
    optional int32 closepricemode = 38; // 强平价格方式-1:市价2:最新价3:涨跌停
    optional double closepriceparam = 39; // 强平最新价浮动比例-方式为2时使用(<1)买上浮(1+x)*最新价卖下浮(1-x)*最新价
    optional int32 qtydecimalplace = 40; // 成交量小数位
    optional int32 goodscurrencyid = 41; // 合约货币id
    optional int32 goodsquotetype = 42; // 合约报价类型:1-直接报价2-间接报价
    optional int32 quotegear = 43; // 行情档位(1-10)
    optional string outgoodscode = 44; // 商品代码(外部)
}

message goodscloseplan{ 
    optional int64 autoid = 1; // 自增id
    optional int32 goodsid = 2; // 商品id
    optional string closedate = 3; // 停牌日期(yyyymmdd)
    optional string starttime = 4; // 起始时间
    optional string endtime = 5; // 结束时间
    optional string remark = 6; // 备注
    optional string modifytime = 7; // 修改时间
    optional int32 modifierid = 8; // 修改人
}

message goodsclosetemplate{ 
    optional int32 tempid = 1; // 模板id
    optional string tempname = 2; // 模板名称
    optional string starttime = 3; // 起始时间(hh:mm)
    optional string endtime = 4; // 结束时间(hh:mm)
    optional string remark = 5; // 备注
}

message goodsdelistdetail{ 
    optional int64 orderid = 1; // 委托单id
    optional int32 goodsid = 2; // 商品id
    optional string uuid = 3; // 管理端唯一uuid(对应委托单uuid)
    optional int64 accountid = 4; // 资金账号
    optional int32 marketid = 5; // 市场id
    optional int32 handlestatus = 6; // 处理状态1:退市处理中2:处理成功3:处理失败
    optional int32 qty = 7; // 数量
    optional string createtime = 8; // 创建时间
}

message goodsdelisthandle{ 
    optional int32 goodsid = 1; // 商品id
    optional string uuid = 2; // 管理端唯一uuid(对应委托单uuid)
    optional int32 marketid = 3; // 市场id
    optional int32 handlestatus = 4; // 处理状态1:退市处理中2:处理成功3:处理失败
    optional double reckonprice = 5; // 结算价
    optional int32 sessionid = 6; // sessionid
    optional string createtime = 7; // 创建时间
    optional int32 accounttype = 8; // 账户类型-1:非做市会员2:做市会员
}

message goodsdeliveryfactor{ 
    optional int32 goodsid = 1; // 交易合约id
    optional int32 pricemovetype = 2; // 升贴水类型-1:品牌2:品质3:规格4:仓库5:月份
    optional int32 pricemoveid = 3; // 升贴水参数id(1交割品种升贴水参数表autoid)
    optional string pricemovedesc = 4; // 升贴水参数描述(1交割品种升贴水参数表更新时需同步更新)
}

message goodsdeliverypricemove{ 
    optional int64 autoid = 1; // 自增id
    optional int32 goodsid = 2; // 交易合约id
    optional int32 pricemoveid = 3; // 升贴水参数id(1交割品种升贴水参数表autoid)
    optional int32 pricemovetype = 4; // 升贴水类型-1:品牌2:品质3:规格4:仓库5:月份
    optional string pricemovedesc = 5; // 升贴水参数描述(1交割品种升贴水参数表更新时需同步更新)
    optional double pricemovevalue = 6; // 价差
}

message goodsdeliveryrelation{ 
    optional int32 goodsid = 1; // 交易合约id
    optional int32 pgoodsid = 2; // 辅助合约id
    optional int32 deliverygoodsid = 3; // 交割商品
    optional int32 deliverymode = 4; // 交割方式-1:点选式2:申报式3:无仓单申报式
    optional int32 mindeliveryqty = 5; // 最小交割系数(k)
    optional int32 xdeliveryratio = 6; // 交易合约系数(m)
    optional int32 pdeliveryratio = 7; // 辅助合约系数(n)
    optional int32 ppricemode = 8; // 辅助合约价格方式-1:商品价2:固定值
    optional double pdeliveryprice = 9; // 辅助合约价格(价格方式为商品时填写0，为固定值时填写固定值)
    optional int32 p2goodsid = 10; // 辅助合约2id
    optional int32 p2deliveryratio = 11; // 辅助2合约系数(p)
    optional int32 p2pricemode = 12; // 辅助合约2价格方式-1:商品价2:固定值
    optional double p2deliveryprice = 13; // 辅助合约2价格(价格方式为商品时填写0，为固定值时填写固定值)
    optional string begindate = 14; // 起始日期(yyyymmdd)
    optional string enddate = 15; // 结束日期(yyyymmdd)
    optional int32 performancemode = 16; // 履约方式-1:立即执行2:履约模板执行【买】
    optional int64 performancetemplateid = 17; // 履约计划模板id(方式为1时填-1,为2时选择模板)【买】
    optional int32 rratio = 18; // 兑换系数(r)
    optional int32 deliverypricerule = 19; // 交收价规则[申报式]-1:申报时价格2:成交时价格
    optional int32 hasstandard = 20; // 是否有标准品–0:无1:有默认1
    optional int32 caninvestor = 21; // 是否允许买卖双方互摘-0:不允许1:允许默认1
    optional int32 hasxhold = 22; // 圈内会员是否需要x商品持仓-0:不需要1:需要默认1
    optional int32 hassellerwr = 23; // 卖方是否需要仓单-0:不需要1:需要默认1
    optional int32 deliveryfeemode = 24; // 调期费收取方式-1:按标准品2:按圈内会员
    optional int32 providermarginalgorithm = 25; // 卖方交收保证金方式(圈内会员)-1:比率2.固定
    optional double providermarginvalue = 26; // 卖方交收保证金值(圈内会员)
    optional int32 investormarginalgorithm = 27; // 卖方交收保证金方式(投资者)-1:比率2.固定
    optional double investormarginvalue = 28; // 卖方交收保证金值(投资者)
    optional int32 bprovidermarginalgorithm = 29; // 买方交收保证金方式(圈内会员)-1:比率2.固定
    optional double bprovidermarginvalue = 30; // 买方交收保证金值(圈内会员)
    optional int32 binvestormarginalgorithm = 31; // 买方交收保证金方式(投资者)-1:比率2.固定
    optional double binvestormarginvalue = 32; // 买方交收保证金值(投资者)
    optional int32 canselectable = 33; // 仓单要素是否允许自选-0:不允许1;允许
    optional int32 performancemode2 = 34; // 卖履约方式-1:立即执行2:履约模板执行
    optional int32 performancetemplateid2 = 35; // 卖履约计划模板id(方式为1时填-1,为2时选择模板)
    optional int32 provideruserid = 36; // 圈内会员id[调期费收取方式=2时设置]
    optional int32 deliverypricerule2 = 37; // 交收价规则[点选式]-1:行情价2:建仓价
}

message goodsgroup{ 
    optional int32 goodsgroupid = 1; // 商品组id(自增id)
    optional string goodsgroupname = 2; // 商品组名称
    optional int32 goodsgroupstatus = 3; // 商品组状态-1:正常2:注销
    optional int32 marketid = 4; // 所属市场id
    optional string createtime = 5; // 创建时间
    optional int32 creatorid = 6; // 创建人
    optional string modifytime = 7; // 修改时间
    optional int32 modifierid = 8; // 修改人
    optional int32 quotesourcegroupid = 9; // 所属行情源分组id[参考行情市场用通道交易]
    optional string outergroupcode = 10; // 外部商品组代码[通道交易]
    optional int32 canshort = 11; // 是否允许做空[通道交易]-0:不能做空1:可以做空
    optional int32 exexchangeid = 12; // 外部交易所id[通道交易]
    optional int32 currencyid = 13; // 报价货币id
    optional int32 goodunitid = 14; // 报价单位id
    optional double agreeunit = 15; // 合约单位
    optional int32 decimalplace = 16; // 报价小数位
    optional int32 quoteminunit = 17; // 行情最小变动单位[整数，报价小数位一起使用]
    optional int32 innerdealmode = 18; // 内部成交方式[通道交易]-1:净头寸2:开平3:平今
    optional int32 outerdealmode = 19; // 外部成交方式[通道交易]-1:净头寸2:开平3:平今
    optional int32 syncgoodsqty = 20; // 同步合约数[通道交易-投资管理用]-0表示不限
    optional int32 closepricemode = 21; // 强平价格方式-1:市价2:最新价3:涨跌停
    optional double closepriceparam = 22; // 强平最新价浮动比例-方式为2时使用
    optional int32 qtydecimalplace = 23; // 成交量小数位
    optional int32 exercisetype = 24; // 行权类型[场外期权]-1:欧式期权2:美式期权
    optional int32 premiumdecimalplace = 25; // 权利金小数位[场外期权]
    optional int32 premiumspreadalgorithm = 26; // 权利金点差方式[场外期权]1:比率2:固定
    optional double premiumspreadvalue = 27; // 权利金点差值[场外期权]
    optional int32 isbuylimited = 28; // 是否限制建仓量-0:不限制1:限制
    optional int32 quotegear = 29; // 行情档位(1-10)
    optional int32 quoterid = 30; // 报价商id[场外期权]
}

message goodsgrouptradefee{ 
    optional int32 goodsgroupid = 1; // 商品组id
    optional int32 tradefeeid = 2; //  
    optional int32 feealgorithm = 3; // 费用算法-1：比率2：固定
    optional double exchangevalue = 4; // 交易所费用值
    optional double memberdefaultvalue = 5; // 会员费用默认值
    optional double memberminvalue = 6; // 会员费用最小值
    optional double membermaxvalue = 7; // 会员费用最大值
    optional int32 marketid = 8; // 市场id
}

message goodsgrouptraderule{ 
    optional int32 goodsgroupid = 1; // 商品组id
    optional int32 ruleid = 2; //  
    optional double paramvalue = 3; // 参数值
    optional int32 marketid = 4; // 市场id
}

message goodsmarginconfig{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 customertypeid = 2; // 投资者客户类别(枚举项的值)
    optional int32 marginalgorithm = 3; // 保证金计算方式-1:比率2.固定
    optional double marketmarginvalue = 4; // 即市保证金值
    optional double reckonmarginvalue = 5; // 结算保证金值
    optional double lockmarginvalue = 6; // 锁仓保证金
    optional int32 isdefault = 7; // 是否默认-0:非默认1：默认
    optional int32 marketid = 8; // 市场id
    optional double realmarginvalue = 9; // 实付保证金值[做市收益权市场“是否交易授信”=1]
    optional int32 realmarginalgorithm = 10; // 实付保证金计算方式-1:比率2.固定
}

message goodsoptionproperty{ 
    optional int32 goodsid = 1; // 商品id(自增id)
    optional int32 optiontype = 2; // 期权类型-1:认购(看涨)2:认沽(看跌)3:认购+认沽
    optional int32 pricefator = 3; // 价格取整系数(按小数位位数计算)
    optional int32 stepvalue = 4; // 档位间矩(按小数位位数计算)
    optional int32 cuppricegear = 5; // 看涨向上档位-使用行情买五档，因此看涨向上档位+看涨向下档位<=4
    optional int32 cdownpricegear = 6; // 看涨向下价格档位-使用行情买五档，因此看涨向上档位+看涨向下档位<=4
    optional int32 puppricegear = 7; // 看跌向上价格档位-行情卖五档，看跌向上档位+看跌向下档位<=4
    optional int32 pdownpricegear = 8; // 看跌向下价格档位-行情卖五档，看跌向上档位+看跌向下档位<=4
    optional int32 expiretype = 9; // 行权日类型-1:滚动行权2:固定日行权
    optional int32 expirecycle = 10; // 行权周期(天)-1:滚动行权时填写
    optional string expiredate = 11; // 行权日(yyyymmdd)-2:固定日行权时填写
    optional int32 islimited = 12; // 是否限制可售数量-0:不限制1:限制
    optional int32 paymode = 13; // 赔付上限方式-1:不限2:权利金倍数[为2时，委托、成交按赔付上限冻结]
    optional int32 payvalue = 14; // 赔付权利金倍数[方式为2时可设，可为0]
    optional int32 premiumautomode = 15; // 权利金自动方式-1:比率2.固定
    optional double premiumautovalue = 16; // 权利金自动值[与商品报价币种一致]
    optional int32 shippingmode = 17; // [期权、挂牌期权]发货方式-1:发货商品(中远)2:融货方(烟台)
    optional int32 middleuserid = 18; // 融货方id-shippingmode=2时设置
    optional int32 middleaccountid = 19; // 融货方资金账号
    optional int32 performancetemplateid = 20; // 履约计划模板id
    optional int32 exercisetype = 21; // 行权类型-1:欧式期权2:美式期权
    optional int32 premiumdecimalplace = 22; // 权利金小数位[场外期权]
    optional int32 premiumspreadalgorithm = 23; // 权利金点差方式[场外期权]1:比率2:固定
    optional double premiumspreadvalue = 24; // 权利金点差值[场外期权]
    optional string targetcode = 25; // 标的物代码
}

message goodsoptionquoteconfig{ 
    optional int32 goodsid = 1; // 商品id(自增id)
    optional int32 quoterid = 2; // 报价商id
    optional string fromexhqcode = 3; // 行情源交易所代码
    optional string fromgoodshqcode = 4; // 行情源商品代码
    optional double priceweight = 5; // 价格权重
    optional double priceratio = 6; // 价格系数
    optional double pricemove = 7; // 升贴水
}

message goodsquoteproperty{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 quoterid = 2; // 报价商id
    optional string fromexhqcode = 3; // 行情源交易所代码
    optional string fromgoodshqcode = 4; // 行情源商品代码
    optional int32 hqpriceunitid = 5; // 行情源商品报价单位id
    optional int32 hqcurrencyid = 6; // 行情源商品币种id
    optional int32 fromfield = 7; // 行情取价方式-1:最新价2:买价3:卖价
    optional double hqconvertratio = 8; // 行情转换系数(商品行情价=行情源行情价*行情转换系数)
    optional int32 buyptsub = 9; // 买点差(混合、做市商品需要)
    optional int32 sellptsub = 10; // 卖点差(混合、做市商品需要)
    optional int32 filterptsub = 11; // 滤价点差
    optional int32 pricemovealgorithm = 12; // 升贴水收取方式-1:比率2:固定[价格生成方式-升贴水]
    optional double pricemovevalue = 13; // 升贴水值[价格生成方式-升贴水]
    optional int32 quotegeneratemode = 14; // 行情生成方式-0:非拟合1:拟合
    optional int32 pricegenmode = 15; // 价格生成方式-1:升贴水2:波动率
    optional double volatilityratio = 16; // 波动率系数[价格生成方式-波动率]
    optional string goodscode = 17; // 波动商品代码
    optional string synctimepoint = 18; // 同步时间点(hh:mm,逗号分隔,例:12:30,14:30)
    optional double prereckonprice = 19; // 昨收价-单独维护(行情源商品)
    optional double localprereckonprice = 20; // 昨结价(交易商品)
    optional double localprecloseprice = 21; // 昨收价(交易商品)
    optional int32 priceovermode = 22; // 报价溢出方式-1:不报价2:按涨跌停报价
}

message goodsquoter{ 
    optional int32 quoterid = 1; // 报价商id
    optional int32 goodsid = 2; // 商品id
    optional int32 quotetype = 3; // 行情源类型-1:手工报价2:外部行情源
    optional int32 quoteeffectivesecond = 4; // 报价行情有效时间(秒)
    optional int32 quoteminvalue = 5; // 报价随机量下限
    optional int32 quotemaxvalue = 6; // 报价随机量上限
    optional int32 modifierid = 7; // 修改人
    optional string modifytime = 8; // 修改时间
    optional int32 quotemode = 9; // 所有权商品报价方式-1:手动2:自动
    optional int32 quotesrcconfigid = 10; // 行情源配置id[行情源类型=2:外部行情源]
    optional int32 defaultmakerid = 11; // 默认做市商id(userid)
    optional int64 dmquoteaccountid = 12; // 默认做市商资金账户id(报价货币)
    optional int64 dmgoodsaccountid = 13; // 默认做市商资金账户id(合约货币)【币币】
    optional int32 requoteqty = 14; // 随机重发量
}

message goodssortbypreposition{ 
    optional string tradedate = 1; // 交易日
    optional string goodscode = 2; // 合约代码-易盛接口:合约代码=品种代码+合约代码
    optional string goodsgroupcode = 3; // 品种代码
    optional int32 sortindex = 4; // 排序
    optional int32 prepositionqty = 5; // 昨持仓量
    optional string updatetime = 6; // 更新时间
}

message goodstradefee{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 tradefeeid = 2; //  
    optional int32 feealgorithm = 3; // 费用算法-1：比率2：固定
    optional double exchangevalue = 4; // 交易所费用值
    optional double memberdefaultvalue = 5; // 会员费用默认值
    optional double memberminvalue = 6; // 会员费用最小值
    optional double membermaxvalue = 7; // 会员费用最大值
    optional int32 marketid = 8; // 市场id
}

message goodstraderule{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 ruleid = 2; //  
    optional double paramvalue = 3; // 参数值
    optional int32 marketid = 4; // 市场id
}

message groupinfo{ 
    optional int64 autoid = 1; // 自增id(seq_groupinfo)
    optional int32 grouptype = 2; // 分组类型-2:商城价格分组
    optional string groupname = 3; // 用户分组名称
    optional string createtime = 4; // 创建时间
    optional int32 creatorid = 5; // 创建人
}

message hedge_channelconfig{ 
    optional int32 channelid = 1; // 对冲渠道id
    optional string channelname = 2; // 对冲渠道名称
    optional int32 cancanceltype = 3; // 撤单类型-1:可部分撤2:只能全撤3:不可撤
    optional int32 isvalid = 4; // 是否有效-0:无效1:有效
}

message hedge_innerclosedetail{ 
    optional int64 closeid = 1; // 平仓明细id(111+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 tradeid = 2; // 成交单号
    optional int64 opentradeid = 3; // 关联建仓成交单号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int32 accountid = 7; // 账号id
    optional int32 buyorsell = 8; // 方向-0:买1:卖
    optional double openprice = 9; // 建仓价格
    optional double holderprice = 10; // 持仓价格
    optional int32 closeqty = 11; // 平仓数量
    optional double closeprice = 12; // 平仓价格
    optional string closetime = 13; // 平仓时间
    optional string opentradedate = 14; // 建仓成交单交易日
    optional int64 parentaccountid = 15; // 所属母账户
}

message hedge_innerholderdetail{ 
    optional int64 tradeid = 1; // 成交单号(108+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int32 goodsid = 5; // 商品id
    optional int64 accountid = 6; // 账号id
    optional int32 openqty = 7; // 建仓数量
    optional int32 holderqty = 8; // 持仓数量
    optional int32 freezeqty = 9; // 冻结数量-按单平使用
    optional double openprice = 10; // 建仓价格
    optional double holderprice = 11; // 持仓价格
    optional double tradeamount = 12; // 成交金额[账户]
    optional double holderamount = 13; // 持仓金额[商品币种]
    optional double releaseamount = 14; // 释放持仓金额[商品币种]
    optional int32 holderdays = 15; // 剩余冻结天数
    optional string tradetime = 16; // 交易时间
    optional int64 parentaccountid = 17; // 所属母账户
}

message hedge_innerordercancel{ 
    optional int64 cancelorderid = 1; // 撤单id(111+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 relatedorderid = 2; // 原委托单号id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 accountid = 4; // 账户id
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int32 buyorsell = 7; // 买卖-0:买1:卖
    optional int32 channeloperatetype = 8; // 操作类型-1:正常撤单2:结算撤单3:外部撤单
    optional int32 cancelqty = 9; // 撤单数量
    optional int32 channelinnerhandlestatus = 10; // 处理状态-1:待处理2:处理成功3:处理失败
    optional int32 channelordersrc = 11; // 委托来源-1:客户端2:风控服务3:管理端4:交易服务5:下单接口平台
    optional string actiontime = 12; // 委托时间
    optional int32 sessionid = 13; // 会话id
    optional string clientticket = 14; // 客户端流水号
    optional int32 clienttype = 15; //  
    optional int32 retcode = 16; // 错误代码
    optional string remark = 17; // 备注
    optional int32 cancelstatus = 18; // 撤单状态-1:接收报文2:发送报文成功3:撤单成功4:撤单失败
    optional int64 parentaccountid = 19; // 所属母账户
}

message hedge_innerorderdetail{ 
    optional int64 orderid = 1; // 委托单号(107+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 channelbuildtype = 3; // 开平标志-0:无1:建仓2:平仓
    optional int32 closetype = 4; // 平仓方式-0:无1:平今2:平昨
    optional int32 hedgeflag = 5; // 投机套保标志-0:无1:投机2:套保3:套利
    optional int32 marketid = 6; // 市场id
    optional int32 goodsid = 7; // 商品id
    optional int64 accountid = 8; // 账户id
    optional int32 buyorsell = 9; // 买卖-0:买1:卖
    optional int32 pricemode = 10; // 取价方式-1:市价2:限价
    optional double orderprice = 11; // 委托价格(账户)
    optional int32 openorderqty = 12; // 委托数量
    optional int32 opentradeqty = 13; // 成交数量
    optional int32 opencancelqty = 14; // 撤单数量
    optional int32 openfailqty = 15; // 失败数量
    optional int32 opensuccessqty = 16; // 建仓委托成功数量
    optional int32 closeorderqty = 17; // 委托数量
    optional int32 closetradeqty = 18; // 成交数量
    optional int32 closecancelqty = 19; // 撤单数量
    optional int32 closefailqty = 20; // 失败数量
    optional int32 closesuccessqty = 21; // 委托成功数量
    optional double openfreezemargin = 22; // 冻结保证金(冻结交易金额)
    optional double openunfreezemargin = 23; // 解冻保证金
    optional double openfreezecharge = 24; // 建仓冻结手续费(账户)
    optional double openunfreezecharge = 25; // 建仓解冻手续费(账户)
    optional int32 validtype = 26; // 有效类型-1当日有效
    optional string validtime = 27; // 有效期限
    optional int32 channeloperatetype = 28; // 操作类型-1:正常委托2:斩仓委托3:强平委托
    optional string ordertime = 29; // 委托时间
    optional int32 channelordersrc = 30; // 委托来源-1:客户端2:风控服务3:管理端4:下单接口平台5:交易服务
    optional int32 channelinnerorderstatus = 31; //  
    optional int64 operatorid = 32; // 登录账号(loginid)
    optional string updatetime = 33; // 更新时间
    optional string clientordertime = 34; // 客户端委托时间
    optional string clientticket = 35; // 客户端流水号
    optional string uuid = 36; // 发起端唯一id
    optional int32 clienttype = 37; //  
    optional int32 retcode = 38; // 错误代码
    optional int32 marginalgorithm = 39; // 保证金收取方式1：比率2：固定
    optional double marginvalue = 40; // 即市保证金设置值
    optional int32 openfeealgorithm = 41; // 建仓手续费收取方式1：比率2：固定
    optional double openchargevalue = 42; // 建仓手续费设置值
    optional int32 closefeealgorithm = 43; // 平仓手续费收取方式1：比率2：固定
    optional double closechargevalue = 44; // 平仓手续费设置值
    optional int32 accountcurrencyid = 45; // 账户币种id
    optional int32 goodscurrencyid = 46; // 商品币种id
    optional int32 margincurrencyid = 47; // 保证金币种id比率时等于账户币种
    optional double marginrate = 48; // 保证金汇率-比率时等于1
    optional double curexchangerate = 49; // 当前汇率
    optional double goodsorderprice = 50; // 委托价格(商品)
    optional double openfreezemargin2 = 51; // 建仓冻结保证金(保证金/商品)
    optional double openfreezecharge2 = 52; // 建仓冻结手续费(商品)
    optional double openunfreezemargin2 = 53; // 建仓解冻保证金(保证金/商品)
    optional double openunfreezecharge2 = 54; // 建仓解冻手续费(商品)
    optional int64 parentaccountid = 55; // 所属母账户
    optional int32 sessionid = 56; // 会话id
}

message hedge_innertradedetail{ 
    optional int64 tradeid = 1; // 成交单号(108+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional int64 orderid = 3; // 委托单号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int64 accountid = 5; // 账号id
    optional int32 goodsid = 6; // 商品id
    optional int32 marketid = 7; // 市场id
    optional string tradetime = 8; // 成交时间
    optional double tradeprice = 9; // 成交价格
    optional int32 tradeqty = 10; // 成交数量
    optional double tradeamount = 11; // 成交金额(账户)
    optional double closepl = 12; // 平仓盈亏(账户)
    optional double opencharge = 13; // 建仓手续费(账户)
    optional double closecharge = 14; // 平仓手续费(账户)
    optional int32 tradetype = 15; // 成交类别-1:正常委托成交2:风控斩仓成交3:修正持仓成交4:管理端斩仓成交
    optional int32 channelbuildtype = 16; // 委托单据类型0:无1:建仓2:平仓
    optional int32 closetype = 17; // 平仓方式-0:无1:平今2:平昨
    optional int32 hedgeflag = 18; // 投机套保标志-0:无1:投机2:套保3:套利
    optional int32 openqty = 19; // 开仓数量(先建后平操作需要记录)
    optional int32 closeqty = 20; // 平仓数量(先建后平操作需要记录)
    optional int32 status = 21; // 处理状态-1:待处理2:已处理3:处理失败
    optional int32 isreckoned = 22; // 是否结算-0:未结算1:已结算
    optional int32 openfeealgorithm = 23; // 建仓手续费收取方式1：比率2：固定
    optional double openchargevalue = 24; // 建仓手续费设置值
    optional int32 closefeealgorithm = 25; // 平仓手续费收取方式1：比率2：固定
    optional double closechargevalue = 26; // 平仓手续费设置值
    optional int32 accountcurrencyid = 27; // 账户币种id
    optional int32 goodscurrencyid = 28; // 商品币种id
    optional double curexchangerate = 29; // 当前汇率
    optional double opencharge2 = 30; // 建仓手续费(商品)
    optional double closecharge2 = 31; // 平仓手续费(商品)
    optional double closepl2 = 32; // 平仓盈亏(商品)
    optional double closepl3 = 33; // 平仓盈亏(账户)(逐笔)
    optional double closepl4 = 34; // 平仓盈亏(商品)(逐笔)
    optional int32 extenalopenfeealgorithm = 35; // 建仓手续费收取方式(外部配置)1：比率2：固定
    optional double extenalopenchargevalue = 36; // 建仓手续费设置值
    optional int32 extenalclosefeealgorithm = 37; // 平仓手续费收取方式1：比率2：固定
    optional double extenalclosechargevalue = 38; // 平仓手续费设置值
    optional double extenalopencharge = 39; // 建仓手续费(商品)(外部)
    optional double extenalclosecharge = 40; // 平仓手续费(商品)(外部)
    optional int64 parentaccountid = 41; // 所属母账户
    optional int64 relatedouttradeid = 42; // 关联外部成交单id
}

message hedge_marketopenlog{ 
    optional string tradedate = 1; // 交易日(yyyymmdd)
    optional int64 accountid = 2; // 资金账号[外部母账户]
    optional int32 marketid = 3; // 市场id
    optional int32 status = 4; //  
    optional string updatetime = 5; // 更新时间
    optional int32 handlestatus = 6; // 处理状态-1:登陆mhp成功2:登陆mhp失败3:登出mhp
}

message hedge_matchresult{ 
    optional int64 outtradeid = 1; // 外部成交单id(114+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional int64 accountid = 3; // 账号id
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int32 channelbuildtype = 7; // 开平标志-0:无1:建仓2:平仓
    optional double tradeprice = 8; // 成交价格
    optional int32 tradeqty = 9; // 成交数量
    optional int32 tradeid = 10; // 成交单号
    optional int32 handlestatus = 11; // 处理状态
    optional double premium = 12; // 权利金
    optional int64 holdtradeid = 13; // 持仓单号[场外期权]
    optional int64 relatedorderid = 14; // 关联内部委托单号[场外期权]
    optional int64 matchaccountid = 15; // 对手账号id
    optional int32 optiontype = 16; // 期权类型-1:认购(看涨)2:认沽(看跌)
}

message hedge_middlegoods{ 
    optional int32 middlegoodsid = 1; // 中间商品id
    optional string middlegoodscode = 2; // 中间商品代码
    optional string middlegoodsname = 3; // 中间商品名称
    optional int32 middlegoodsunitid = 4; // 中间商品单位id
    optional string createtime = 5; // 创建时间
    optional int32 creatorid = 6; // 创建人id
}

message hedge_middlegoodsmapping{ 
    optional int64 mappingid = 1; // autoid
    optional int32 middlegoodsid = 2; // 中间商品id
    optional int32 middlegoodsratio = 3; // 中间商品系数
    optional int32 goodsid = 4; // 商品id
    optional int32 goodsratio = 5; // 商品系数
}

message hedge_outholderdetail{ 
    optional string outholderid = 1; // 外部持仓单id
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int32 goodsid = 5; // 商品id
    optional int64 accountid = 6; // 账号id
    optional int32 openqty = 7; // 建仓数量
    optional int32 holderqty = 8; // 持仓数量
    optional int32 freezeqty = 9; // 冻结数量
    optional double openprice = 10; // 建仓价格
    optional double holderprice = 11; // 持仓价格
    optional double tradeamount = 12; // 成交金额
    optional double holderamount = 13; // 持仓金额
    optional double releaseamount = 14; // 释放持仓金额
    optional int32 holderdays = 15; // 剩余冻结天数
    optional string tradetime = 16; // 交易时间
    optional int32 optiontype = 17; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 18; // 权利金
    optional string hedgeaccountcode = 19; // 对冲账号
    optional int32 tradeproperty = 20; // 交易属性
    optional double pl = 21; // 浮动盈亏
    optional int64 outtradeid = 22; // 外部成交单id
    optional string expiretime = 23; // 期权到期时间
    optional int64 relatedorderid = 24; // 关联外部成交单号
}

message hedge_outimportorder{ 
    optional string orderid = 1; // 单据id
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 marketid = 3; // 市场id
    optional int32 goodsid = 4; // 商品id
    optional int32 buyorsell = 5; // 方向-0:买1:卖
    optional int64 accountid = 6; // 账号id
    optional string hedgeaccountcode = 7; // 对冲账号
    optional int32 buildtype = 8; // 委托单据类型-1:建仓2:平仓
    optional int32 tradeqty = 9; // 成交数量
    optional double tradeprice = 10; // 成交价格
    optional double tradeamount = 11; // 成交金额[账户币种]
    optional int32 holderdays = 12; // 剩余冻结天数
    optional int32 handlestatus = 13; // 处理状态
    optional int32 creatorid = 14; // 创建人
    optional string createtime = 15; // 创建时间
}

message hedge_outmainconfig{ 
    optional int64 accountid = 1; // 资金账号id(母账号)
    optional int64 channelid = 2; // 对冲渠道id
    optional int64 marketid = 3; // 内部市场id(母账号的操作
    optional string hedgeaccountcode = 4; // 对冲账号id
    optional string hedgeaccountpwd = 5; // 对冲账号密码
    optional string channeladdress = 6; // 对冲渠道服务地址(多个地址用逗号分隔)--192.168.30.10:3000,192.168.30.10:3001
    optional string brokerid = 7; // 经纪公司代码
    optional string exchangeratecurrencygroup = 8; // 汇率币种组[易盛]
    optional string accountcurrency = 9; // 资金账户基币[易盛]
    optional string accountcurrecnygroup = 10; // 资金账户币种组[易盛]
    optional string authcode = 11; // 授权码[易盛]
    optional int32 status = 12; // 渠道账号状态1-可买入可卖出2-可卖出不可买入
    optional int32 limitnumber = 13; // 挂单笔数限额
    optional string appid = 14; // appid
    optional string userproductinfo = 15; // 客户端产品信息
    optional int32 connectflag = 16; // 是否联接外部交易-0:不连接1:连接
}

message hedge_outordercancel{ 
    optional int64 outcancelorderid = 1; // 撤单id(115+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 relatedoutorderid = 2; // 关联外部委托单号
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 accountid = 4; // 资金账号[外部母账户]
    optional string hedgeaccountcode = 5; // 对冲账号
    optional int32 marketid = 6; // 市场id
    optional int32 hedgegoodsid = 7; // 对冲合约id
    optional string canceltime = 8; // 撤销时间
    optional int32 cancelqty = 9; // 撤销数量
    optional int32 channeloutcancelstatus = 10; // 处理状态-1:接收报文2:发送报文成功3:撤单成功4:撤单失败
    optional int64 mhpinnercancelorderid = 11; // 接口平台撤单单号id
    optional int64 relatedmhpinnerorderid = 12; // 关联接口平台委托单id
    optional int32 mhprspcode = 13; // 渠道返回码
    optional string mhprsptext = 14; // 渠道返回信息
    optional int64 relatedinnercancelorderid = 15; // 撤单id(111+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
}

message hedge_outorderdetail{ 
    optional int64 outorderid = 1; // 外部委托单id(113+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string hedgeaccountcode = 2; // 对冲账号
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 accountid = 4; // 资金账号[外部母账户]
    optional int64 relatedorderid = 5; // 关联内部委托单号
    optional int32 marketid = 6; // 市场id
    optional int32 hedgegoodsid = 7; // 对冲合约id
    optional int32 orderpricetype = 8; // 报单价格条件-1:市价2:限价
    optional int32 buyorsell = 9; // 买卖方向-0:买1:卖
    optional int32 channelbuildtype = 10; // 开平标志-0:无1:建仓2:平仓
    optional int32 closetype = 11; // 平仓方式-0:无1:平今2:平昨
    optional double orderprice = 12; // 委托价格
    optional int32 orderqty = 13; // 委托数量
    optional int32 tradeqty = 14; // 成交数量
    optional int32 cancelqty = 15; // 撤销数量
    optional int32 validtype = 16; // 有效期类型-1::当日有效
    optional int32 hedgeflag = 17; // 投机套保标志-0:无1:投机2:套保3:套利
    optional int32 channeloutorderstatus = 18; //  
    optional string ordertime = 19; // 委托时间
    optional string updatetime = 20; // 更新时间
    optional int64 mhpinnerorderid = 21; // 接口平台委托单id
    optional int32 mhprspcode = 22; // 渠道返回码
    optional string mhprsptext = 23; // 渠道返回信息
    optional int32 optiontype = 24; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 25; // 权利金
    optional int64 realoutorderid = 26; // 实际外部平台委托单id
    optional int64 relatedcreateorderid = 27; // 关联外部建仓委托单id[平仓委托]
}

message hedge_outtaaccount{ 
    optional int64 accountid = 1; // 资金账号[外部母账户]
    optional string hedgeaccountcode = 2; // 对冲账号
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional double prebalance = 4; // 期初余额
    optional double balance = 5; // 期末余额
    optional double usedmargin = 6; // 占用保证金
    optional double freezemargin = 7; // 冻结保证金
    optional double freezecharge = 8; // 手续费冻结
    optional double otherfreezemargin = 9; // 其他冻结保证金(交割买方冻结申购冻结全款买入商城买入)
    optional double inamount = 10; // 今日入金金额(包括三方入金)
    optional double outamount = 11; // 今日出金金额(包括三方出金)
    optional double paycharge = 12; // 今日手续费支出
    optional double closepl = 13; // 今日平仓盈亏
    optional double positionprofit = 14; // 结算盈亏
}

message hedge_outtradedetail{ 
    optional int64 outtradeid = 1; // 外部成交单id(114+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 relatedoutorderid = 3; // 关联外部委托单id
    optional int64 accountid = 4; // 资金账号[外部母账户]
    optional string hedgeaccountcode = 5; // 对冲账号
    optional int32 marketid = 6; // 市场id
    optional int32 hedgegoodsid = 7; // 对冲合约id
    optional int32 buyorsell = 8; // 买卖方向-0:买1:卖
    optional int32 channelbuildtype = 9; // 开平标志-0:无1:建仓2:平仓
    optional int32 closetype = 10; // 平仓方式-0:无1:平今2:平昨
    optional int32 hedgeflag = 11; // 投机套保标志-0:无1:投机2:套保3:套利
    optional double tradeprice = 12; // 成交价格
    optional int32 tradeqty = 13; // 成交数量
    optional string tradetime = 14; // 成交时间
    optional int64 relatedmhpinnerorderid = 15; // 接口平台委托单id
    optional int64 mhpinnertradeid = 16; // 接口平台成交单id
    optional int32 hasinnerorder = 17; // 是否有内部单关联-0:无1:有
    optional int32 isvalid = 18; // 是否有效-0:无效1:有效
    optional int32 optiontype = 19; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 20; // 权利金
}

message hedge_outtradeposition{ 
    optional int64 accountid = 1; // 资金账号[外部母账户]
    optional int32 hedgegoodsid = 2; // 对冲合约id
    optional string hedgeaccountcode = 3; // 对冲账号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int32 ydbuyposition = 6; // 期初买头寸
    optional int32 curbuyposition = 7; // 期末买头寸
    optional int32 curydbuyposition = 8; // 期末上日买头寸
    optional int32 curtdbuyposition = 9; // 期末今日买头寸
    optional int32 freydbuyposition = 10; // 冻结上日买头寸
    optional int32 fretdbuyposition = 11; // 冻结今日买头寸
    optional int32 ydsellposition = 12; // 期初卖头寸
    optional int32 cursellposition = 13; // 期末卖头寸
    optional int32 curydsellposition = 14; // 期末上日卖头寸
    optional int32 curtdsellposition = 15; // 期末今日卖头寸
    optional int32 freydsellposition = 16; // 冻结上日卖头寸
    optional int32 fretdsellposition = 17; // 冻结今日卖头寸
}

message hedgeaccount{ 
    optional string code = 1; // 账号代码
    optional int32 apitype = 2; // 接口类型-1:对冲接口2:交易接口
    optional string name = 3; // 账号名称
    optional string createdate = 4; // 创建时间
    optional int32 accountstatus = 5; // 是否有效-0:无效1:有效
    optional string loginpwd = 6; // 登录密码(md5)
    optional int32 issendquotation = 7; // 是否发送行情-0:不发送1:发送
    optional string masterkey = 8; // 主key
    optional string lastoperatedate = 9; // 最后操作时间
    optional int32 quoteruserid = 10; // 报价商用户id
}

message hedgeaccountapi{ 
    optional string code = 1; // 账号代码
    optional int32 apimsgtype = 2; // 接口业务类型id
}

message hedgeapidescription{ 
    optional int32 apimsgtype = 1; // 接口业务类型id
    optional int32 apitype = 2; // 接口类型-1:交易接口2:查询接口
    optional string apiname = 3; // 接口名称
    optional string remark = 4; // 备注
    optional int32 isvalid = 5; // 是否有效-0:无效1:有效
}

message hedgeauthorizedip{ 
    optional string ip = 1; // ip地址
    optional string code = 2; // 账号代码
    optional int32 apitype = 3; // 接口类型-1:对冲接口2:交易接口
}

message hedgewhitelist{ 
    optional string code = 1; // 账号代码
    optional string accountid = 2; // 资金账号
    optional int32 apitype = 3; // 接口类型-1:对冲接口2:交易接口
    optional string userid = 4; // 用户id
}

message his_bank_taskmsg{ 
    optional string histradedate = 1; // 历史交易日(yyyymmdd)
    optional int64 extoperateid = 2; // 流水号
    optional string bankticket = 3; // 清算中心银行流水号
    optional string exchticket = 4; // 银行服务流水号
    optional int32 funccode = 5; // 功能码
    optional int32 requestid = 6; // 请求id
    optional int32 accessid = 7; // 会话id
    optional int64 accountid = 8; // 资金账号
    optional string msgserial = 9; // 消息序号
    optional string msgcontent = 10; // 消息内容
    optional int32 direct = 11; // 来源
    optional int32 dealcode = 12; // 处理状态
    optional int32 msgretcode = 13; // 消息回复码
    optional string dealtext = 14; // 处理文本
}

message his_config{ 
    optional int64 autoid = 1; // autoid
    optional string tablename = 2; // 原表名
    optional string tablecode = 3; // 原表代码
    optional string histablecode = 4; // 历史表代码
    optional string hispkstr = 5; // 历史表主键字符
    optional string remark = 6; // 略注
    optional int32 hasmirror = 7; // 是否有镜像表-0:无1:有
    optional string mirtablecode = 8; // 镜像表代码
}

message his_reporttblog{ 
    optional string tradedate = 1; // 交易日
    optional int32 exestep = 2; // 存储过程第几个函数
    optional string exetime = 3; // 更新时间
    optional string remark = 4; // 备注
}

message imp_bank_code{ 
    optional int32 bankid = 1; // 银行id
    optional string bankcode = 2; // 银行代码
    optional string bankname = 3; // 银行名称
}

message imp_bank_outinmoney_flow{ 
    optional int64 autoid = 1; // id(seq_imp_bank_outinmoney_flow)
    optional int64 orderno = 2; // 请求号
    optional int64 relatedorderno = 3; // 关联请求号
    optional int32 userid = 4; // 用户id
    optional string bankid = 5; // 银行id
    optional string accounttype = 6; // 收款账户类型
    optional string accountname = 7; // 账户名
    optional string accountno = 8; // 账号
    optional string certno = 9; // 身份证号码
    optional string bankname = 10; // 银行名称
    optional string banktype = 11; // 收款人账户联行号
    optional double amount = 12; // 金额
    optional string purpose = 13; // 用途
    optional string bankcontext = 14; // 会话参数
    optional int32 intefacetype = 15; // 接口类型1充值申请2提现申请3充值通知4提现通知
    optional int32 intefacestatus = 16; //  
    optional string responsecode = 17; // 接口返回码
    optional string responsemsg = 18; // 接口返回描述
    optional string createtime = 19; // 创建时间
    optional string updatetime = 20; // 修改时间
    optional string notifytime = 21; // 通知发送时间
    optional string remark = 22; // 备注
    optional int64 accountid = 23; // 资金账号
    optional int32 currencyid = 24; // 币种id
    optional double charge = 25; // 手续费
    optional double soucreamount = 26; // 原始出入金金额
    optional int32 soucrecurrencyid = 27; // 原始出入金币种
}

message imp_brokerinfo{ 
    optional int64 brokerid = 1; // 经纪商id
    optional string brokername = 2; // 经纪商名称
    optional string brokerenname = 3; // 经纪商英文名
    optional string updatetime = 4; // 更新时间
}

message imp_brokerno{ 
    optional int64 brokerid = 1; // 经纪商id
    optional int32 brokerno = 2; // 经纪商席位号
    optional string updatetime = 3; // 更新时间
}

message imp_goods{ 
    optional int32 goodsid = 1; // 商品id
    optional string goodscode = 2; // 商品代码
    optional int32 lotsize = 3; // 最小交易数量
    optional int32 modifierid = 4; // 修改人
    optional string modifytime = 5; // 修改时间
    optional int32 goodstype = 6; //  
}

message investorcontractinfo{ 
    optional int32 investoruserid = 1; // 投资者用户id
    optional int32 contracttype = 2; // 签约类型-1:交易类协议
    optional string contractname = 3; // 协议文件名
    optional string createtime = 4; // 创建时间
}

message investormenugroup{ 
    optional int64 loginid = 1; // 登陆账号
    optional int32 roleid = 2; // 角色权限id
    optional int32 userid = 3; // 用户id
    optional int32 createuserid = 4; // 创建人
    optional string createtime = 5; // 创建时间
}

message investortransfer{ 
    optional int64 autoid = 1; // autoid
    optional int32 transfertype = 2; // 转移类型-1:单个转移2:批量转移
    optional int32 investoruserid = 3; // 转出投资者[单个转移]
    optional int32 memberuserid = 4; // 转出会员[批量转移]
    optional int32 areauserid = 5; // 转出机构[批量转移]
    optional int32 brokeruserid = 6; // 转出经纪人[批量转移]
    optional int32 newmemberuserid = 7; // 转入会员
    optional int32 newareauserid = 8; // 转入机构
    optional int32 newbrokeruserid = 9; // 转入经纪人
    optional int32 transferstatus = 10; // 转移状态-1:未执行2:执行成功3:执行失败
    optional string retcode = 11; // 错误码
    optional string remark = 12; // 备注
    optional string operatorid = 13; // 操作人
    optional string createtime = 14; // 创建时间
    optional string updatetime = 15; // 更新时间
}

message ipbacklist{ 
    optional string ip = 1; // ip
    optional int32 iptype = 2; // ip类型-1:管理端
}

message logdicinfo{ 
    optional int64 autoid = 1; // 自增id
    optional string columnname = 2; // 列名
    optional string fieldname = 3; // 字段名
    optional string dicname = 4; // 字典名
}

message loginaccount{ 
    optional int64 loginid = 1; // 登陆账号
    optional int32 userid = 2; // 用户id
    optional int32 loginfailnum = 3; // 连续登录失败次数(登录成功时清零)
    optional string password = 4; // 登陆密码
    optional int32 loginusertype = 5; // 登录账号类型-1:投资者2:机构交易员
    optional int32 loginstatus = 6; // 登录账号状态1:正常2:冻结3:无效
    optional string lastlogintime = 7; // 最新登录时间
    optional int32 lastloginmode = 8; //  
    optional string lastloginip = 9; // 最新登录地址
    optional int32 loginport = 10; // 最新登录端口
    optional string lastloginremark = 11; // 最新登录描述
    optional string modifytime = 12; // 修改时间
    optional int32 modifierid = 13; // 修改人
    optional int32 pwdwrongcount = 14; // 密码错误次数
    optional string unfreezetime = 15; // 账户解冻时间
    optional int32 haslogined = 16; // 是否已登录-0:未登录1:已登录
    optional int32 hasupdatedpwd = 17; // 是否已更改密码-0:未修改1:已修改
}

message logintaaccount{ 
    optional int64 loginid = 1; // 登录账号id
    optional int64 accountid = 2; // 资金账号id
    optional string modifytime = 3; // 修改时间
    optional int32 modifierid = 4; // 修改人
}

message managerarea{ 
    optional int32 managerid = 1; // 管理员id
    optional int32 userid = 2; // 机构用户id
    optional int32 roleid = 3; // 角色id
    optional string modifytime = 4; // 修改时间
    optional int32 modifierid = 5; // 修改人
}

message managertaaccount{ 
    optional int32 managerid = 1; // 管理员id
    optional int64 accountid = 2; // 资金账号id
    optional string modifytime = 3; // 修改时间
    optional int32 modifierid = 4; // 修改人
    optional int32 userid = 5; // 机构用户id
}

message market{ 
    optional int32 marketid = 1; //  
    optional string marketname = 2; // 市场名称
    optional int32 exchareaid = 3; // 所属交易所，可以没有
    optional int32 markettype = 4; // 市场类型-1:非交易服务2:交易服务
    optional int32 trademode = 5; //  
    optional int32 tradeproperty = 6; //  
    optional int32 openmethod = 7; // 开盘模式-0自动1手动
    optional int32 reckonpricealgorithm = 8; //  
    optional int32 reckonpriceparam = 9; // 结算价参数
    optional int32 marketstatus = 10; // 生效状态(validstatus枚举):1:待生效2:正常3:注销
    optional int32 marketserviceid = 11; // 市场服务id
    optional int32 marginformula = 12; //  
    optional int64 performancetempid = 13; // 履约计划模板id
    optional int32 clearinterval = 14; // 待开市间隔(交易市场开盘前多久发市场待开市信号(单位分钟))
    optional int32 matchermode = 15; // 指定对手模式[仓单贸易模式专用]-1:任意对手
    optional int32 reckonorder = 16; // 结算顺序
    optional int32 canpreexercise = 17; // [期权]是否可预申报-0:否1:是
    optional int32 cangoodsexercise = 18; // [期权]是否可现货行权-0:否1:是
    optional int32 goodstype = 19; // 商品类型-1:交易商品2:仓单商品
    optional int32 roleprioritytype = 20; // 角色优先类型-1:无2:报价商优先3:非报价商优先[16:挂牌点选]
    optional int32 isrecordsource = 21; // 是否记录成交源-0:不记录1:记录[所有权]
    optional int32 marginformula2 = 22; //  
    optional int32 haswr = 23; // [竞拍]是否需要仓单-0:不需要1:需要-作废
    optional int32 premiumquotemode = 24; // 权利金报价方式-1:自动2:手动
    optional int32 cangoodsexercisetype = 25; // 可现货行权期权类型-1:认购2认沽3:认购认沽[cangoodsexercise=1时可设置]
    optional int32 canacceptquote = 26; // 确认行权是否接收行情-0:不接受1:接受[可确认权的挂牌期权市场可配置]
    optional int32 canmutistage = 27; // 是否可多段运行–0:不可1:可[挂牌期权]
    optional int32 isdeductmargin = 28; // 竞拍违约是否扣除保证金[竞拍-降价式]-0:不扣1:扣除
    optional int32 canmanualquotestrike = 29; // 是否可手动报行权价-0:否1:是[期权]
    optional int32 tradetype = 30; // 下单方式[通道交易]-1:直接转单2:净头寸下单
    optional int32 pendingflag = 31; // 待开市时间标识[通道交易-对冲]-0:当日1:上日
    optional string pendingtime = 32; // 待开市时间[通道交易-对冲](hh:mm)
    optional string reckontime = 33; // 结算时间[通道交易-对冲](hh:mm)
    optional int32 hastradecredit = 34; // 是否交易授信[做市收益权]-0:不授信1:授信
    optional string contracttmp = 35; // 合同模板[荷兰式][竞价式][仓单贸易]
    optional int32 hasrebate = 36; // 是否返利[竞价式]0:不返，1:返利--根据系统参数088显示或隐藏
    optional double rebateratio = 37; // 返利比率[竞价式]
    optional int32 otcuserid = 38; // 场外期权做市商[场外期权]
    optional string outersynctime = 39; // 外部同步时间点(h24:mi:ss)[场外期权]
    optional int32 auctionwrtype = 40; // 竞拍仓单类型-1:无仓单2:有仓单3;有无仓单均可
    optional int32 isreleasemargin = 41; // 成交参与保证金是否释放[竞价式]-0:不释放1释放
    optional int32 selllistingauditflag = 42; // 卖挂牌是否需要审核(仓单贸易)-0:不需要1:需要
}

message marketcalendar{ 
    optional int32 marketid = 1; // 市场id
    optional string holidaydate = 2; // 节假日期(yyyymmdd)
}

message marketcalendaryear{ 
    optional int32 marketid = 1; // 市场id
    optional string year = 2; // 年份(yyyy)
    optional int32 isallyear = 3; // 是否全年无休-0:不是1:是
}

message marketdgoodstradeconfig{ 
    optional int32 marketid = 1; // 市场id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 buymarginalgorithm = 3; // 买方保证金方式-1：比率2：固定
    optional double buymarginvalue = 4; // 买方保证金设置值
    optional int32 buyfirstmarginalgorithm = 5; // 买方首付保证金方式-1：比率2：固定
    optional double buyfirstmarginvalue = 6; // 买方首付保证金设置值
    optional int32 buychargealgorithm = 7; // 买方手续费收取方式1：比率2：固定
    optional double buychargealgorithmvalue = 8; // 买方手续费设置值(交易所部分)
    optional double buychargealgorithmvalue2 = 9; // 买方手续费设置值(会员部分)
    optional int32 sellmarginalgorithm = 10; // 卖方保证金方式-1：比率2：固定
    optional double sellmarginvalue = 11; // 卖方保证金设置值
    optional int32 sellchargealgorithm = 12; // 卖方手续费收取方式1：比率2：固定
    optional double sellchargealgorithmvalue = 13; // 卖方手续费设置值(交易所部分)
    optional double sellchargealgorithmvalue2 = 14; // 卖方手续费设置值(会员部分)
    optional int32 failedchargealgorithm = 15; // 流拍手续费收取方式1：比率2：固定
    optional double failedchargevalue = 16; // 流拍手续费设置值
    optional double failedchargevalue2 = 17; // 流拍卖方手续费设置值
    optional int32 modifierid = 18; // 修改人
    optional string updatetime = 19; // 更新时间
}

message marketreckonstatus{ 
    optional string tradedate = 1; // 交易日
    optional int32 marketid = 2; // 市场id
    optional int32 reckonflag = 3; // 结算标志-1:未结算2:结算成功3:结算失败
    optional string updatetime = 4; // 更新时间
}

message marketrun{ 
    optional int32 marketid = 1; // 市场id
    optional string tradedate = 2; // 当前交易日(服务)资金结算完成即变更，供交易服务使用
    optional string tradedate2 = 3; //  
    optional string nexttradedate = 4; // 下一交易日
    optional int32 runstatus = 5; //  
    optional int32 reckonflag = 6; //  
    optional int32 manualflag = 7; // 手动开市标志-0:否1:是(市场为手动时，是否触发了手动开市标志)
    optional int32 clearquoteflag = 8; // 行情清盘标志-1:未发送2:已发送3:已回复
    optional string updatetime = 9; // 更新时间
    optional string pretradedate = 10; // 上一交易日
    optional int32 sectionid = 11; // 时间段号[多时段时用]
    optional string afternexttradedate = 12; // 下下交易日
    optional string machinedate = 13; // 机器时间
    optional string lastreckondate = 14; // 最新交易日(结算成功)
}

message marketrunlog{ 
    optional int32 marketid = 1; // 市场id
    optional string tradedate = 2; // 交易日
    optional string opentime = 3; // 开市时间(市场为系统时写签到时间)
    optional string closetime = 4; // 闭市时间(市场为系统时写签退时间)
    optional int32 reckonstatus = 5; // 结算情况-1:自动结算2:手工结算
    optional string reckontime = 6; // 结算时间
    optional int32 lastsendstatus = 7; // 最后发送状态
    optional int32 lastsendsectionid = 8; // 最后发送时间段id
}

message marketrunstatuslog{ 
    optional int64 logid = 1; // autoid(seq_marketrunstatuslog)
    optional string tradedate = 2; // 当前交易日(yyyymmdd)
    optional int32 marketid = 3; // 市场id
    optional int32 runstatus = 4; //  
    optional string updatetime = 5; // 更新时间
    optional string remark = 6; // 备注
}

message marketrunstepdetail{ 
    optional int64 autoid = 1; // 自增id
    optional int32 marketid = 2; //  
    optional int32 tradeweekday = 3; //  
    optional int32 sectionid = 4; // 从1开始往下编
    optional int32 runstep = 5; // 运行阶段-1:集合竞价、2:连续竞价(交割)3:--4:确认行权交收时段(补充交收
    optional int32 startweekday = 6; // 开市时间
    optional string starttime = 7; // 起始时间(hh:mm)
    optional int32 endweekday = 8; // 休市时间
    optional string endtime = 9; // 结束时间(hh:mm)
    optional int32 startflag = 10; // 开始日标识-(-1:上日0:当日1:次日)
    optional int32 endflag = 11; // 结束日标识-(-1:上日0:当日1:次日)
}

message markettradeconfig{ 
    optional int32 marketid = 1; // 市场id
    optional int32 buymarginalgorithm = 2; // 买方保证金方式-1：比率2：固定
    optional double buymarginvalue = 3; // 买方保证金设置值
    optional int32 sellmarginalgorithm = 4; // 卖方保证金方式-1：比率2：固定
    optional double sellmarginvalue = 5; // 卖方保证金设置值
    optional int32 buychargealgorithm = 6; // 买方手续费收取方式1：比率2：固定
    optional double buychargealgorithmvalue = 7; // 买方手续费设置值(交易所部分)
    optional double buychargealgorithmvalue2 = 8; // 买方手续费设置值(会员部分)
    optional int32 sellchargealgorithm = 9; // 卖方手续费收取方式1：比率2：固定
    optional double sellchargealgorithmvalue = 10; // 卖方手续费设置值(交易所部分)
    optional double sellchargealgorithmvalue2 = 11; // 卖方手续费设置值(会员部分)
    optional int32 modifierid = 12; // 修改人
    optional string updatetime = 13; // 更新时间
    optional int32 failedchargealgorithm = 14; // 流拍手续费收取方式1：比率2：固定
    optional double failedchargevalue = 15; // 流拍手续费设置值
    optional double failedchargevalue2 = 16; // 流拍卖方手续费设置值
    optional int32 buyfirstmarginalgorithm = 17; // 买方首付保证金方式-1：比率2：固定
    optional double buyfirstmarginvalue = 18; // 买方首付保证金设置值
}

message membergroup{ 
    optional int32 groupid = 1; // 分组id(seq_membergroup)
    optional int32 grouptype = 2; //  
    optional string groupname = 3; // 分组名称
    optional string remark = 4; // 分组备注
    optional int32 creatorid = 5; // 创建人
    optional string createtime = 6; // 创建时间
}

message membergroupdetail{ 
    optional int32 groupid = 1; // 分组id
    optional int32 userid = 2; // 经纪会员用户id
    optional int32 operatorid = 3; // 操作人
    optional string updatetime = 4; // 更新时间
}

message membergroupdetaillog{ 
    optional int64 autoid = 1; // autoid(seq_membergroupdetaillog)
    optional int32 userid = 2; // 会员用户id
    optional int32 oldgroupid = 3; // 原分组id
    optional int32 newgroupid = 4; // 变更后分组id
    optional int32 operatorid = 5; // 操作人
    optional string updatetime = 6; // 更新时间
}

message memberrecv{ 
    optional int32 msgid = 1; // 消息id
    optional int32 memberid = 2; // 会员用户id
}

message mmrelation1{ 
    optional int32 quoterid = 1; // 报价商id其他做市关系，都设置为1
    optional int32 memberuserid = 2; // 经纪/自营会员id
    optional int32 matchuserid = 3; // 接单做市会员id
    optional string modifytime = 4; // 修改时间
    optional int32 modifierid = 5; // 修改人id
}

message mmrelation2{ 
    optional int32 memberuserid = 1; // 做市会员id
    optional int32 matchuserid = 2; // 接单做市会员id
    optional int32 matchseq = 3; // 接单顺序
    optional string modifytime = 4; // 修改时间
    optional int32 modifierid = 5; // 修改人id
}

message ms_accountgoodsqty{ 
    optional int32 userid = 1; // 用户id
    optional int32 goodsid = 2; // 交易商品id
    optional int64 accountid = 3; // 资金账号id(默认做市账号)
    optional int32 marketid = 4; // 市场id
    optional int32 availableqty = 5; // 总量(扩展服务更新)
    optional int32 tradeqty = 6; // 已售数量(期权服务更新)
    optional int32 freezeqty = 7; // 冻结数量(期权服务更新)
    optional string updatetime = 8; // 更新时间
    optional int32 isavailabe = 9; // 是否可接单-0:不可(会员状态不可接单时)1:可(期权服务更新)
}

message ms_accountgoodstradelog{ 
    optional int64 logid = 1; // 账号商品盈亏流水(500+unix秒时间戳(10位)++xxxxxx)
    optional int64 relateid = 2; // 关联单号
    optional int32 marketingstrategyid = 3; // 扩展策略id
    optional int32 datasrc = 4; // 数据来源-1:无2:交易成交通知3:订单仓单互转成交通知4:结算信号通知
    optional int64 accountid = 5; // 资金账号id
    optional int32 goodsid = 6; // 交易商品id
    optional int32 marketid = 7; // 市场id
    optional string tradedate = 8; // 交易日(yyyymmdd)
    optional string srcvalue = 9; // 源数据值
    optional string descvalue = 10; // 目的数据值
    optional string tradetime = 11; // 成交时间
    optional string updatetime = 12; // 更新时间
    optional int32 status = 13; // 状态-1:成功2:失败
    optional string descvalue2 = 14; // 目的数据值2
}

message ms_accountpl{ 
    optional int64 accountid = 1; // 资金账号id
    optional double pl = 2; // 盈亏(定期结算时清零)
    optional string updatetime = 3; // 更新时间
}

message ms_accountscore{ 
    optional int64 accountid = 1; // 资金账号id
    optional double score = 2; // 剩余积分
    optional string updatetime = 3; // 更新时间
}

message ms_accountscorelog{ 
    optional int64 autoid = 1; // autoid
    optional int64 accountid = 2; // 资金账号id
    optional int32 changetype = 3; // 变更类型-1:结算增加2:提货减少3:盈亏减少
    optional double changevalue = 4; // 变化值
    optional double beforevalue = 5; // 变化前
    optional double aftervalue = 6; // 变化后
    optional int64 relatedid = 7; // 关联单号
    optional string updatetime = 8; // 更新时间
    optional int32 specuserid = 9; // 特许经销商用户id
    optional int32 relatedtype = 10; // 关联类型-1:盈亏2:兑换券
}

message ms_bizmsglog{ 
    optional int64 exchticket = 1; // 业务消息日志id(506+unix秒时间戳(10位)+xxxxxx)
    optional int64 bizorderid = 2; // 业务单号
    optional int32 operatestatus = 3; // 操作状态-0:操作成功1:操作失败
    optional int32 operateaccountid = 4; // 操作人代码
    optional string updatetime = 5; // 更新时间
    optional int32 marketingstrategyid = 6; // 策略id
    optional double marketingstrategytypeid = 7; // 策略类型id
    optional int32 businesssteps = 8; // 业务步骤
    optional string retcode = 9; // 返回码
    optional string extoperatorid = 10; // 外部流水号
    optional string tradedate = 11; // 交易日(yyyymmdd)
    optional string dealdate = 12; // 处理日期
    optional int32 suboperatorid = 13; // 子业务流水号
}

message ms_divideorderdetaillog{ 
    optional string tradedate = 1; // 交易日
    optional int64 tradeid = 2; // 成交单号
    optional int32 buyorsell = 3; // 买卖方向-0:买1:卖
    optional int32 tradefeetype = 4; //  
    optional int32 areaid = 5; // 分润机构id
    optional int32 areatype = 6; //  
    optional int32 goodsid = 7; // 商品id/现货类用市场id
    optional int32 areaaccountid = 8; // 机构角色结算资金账号
    optional int64 accountid = 9; // 源账户id
    optional double feeamount = 10; // 费用金额(交易所部分总费用或会员部分总费用)
    optional int32 dividetype = 11; // 分润算法1：比率2：固定3：余下全部
    optional double dividevalue = 12; // 分润值
    optional double divideamount = 13; // 机构分润金额
    optional double afterdivideamount = 14; // 变更后机构分润金额
    optional string creatdate = 15; // 创建时间
}

message ms_extendrole{ 
    optional int32 roletypeid = 1; // 扩展角色类型-1:特许经销商(中远)2:金融服务商(中江)3:核心企业(百色)
    optional int32 areauserid = 2; // 机构用户id
    optional double transfercostratio = 3; // 券转积分成本比率
    optional int32 transferratio = 4; // 券转积分系数
    optional int32 transferdays = 5; // 券转积分有效天数
    optional double transferdivideratio = 6; // 下属经销商券转积分默认分润比率
}

message ms_hn_scoregive{ 
    optional int64 logid = 1; // 账号商品盈亏流水(500+unix秒时间戳(10位)++xxxxxx)
    optional int32 marketingstrategyid = 2; // 扩展策略id
    optional string tradedate = 3; // 交易日
    optional int32 userid = 4; // 用户id(投资者)
    optional int32 marketid = 5; // 市场id
    optional int64 relateid = 6; // 关联单号
    optional int64 accountid = 7; // 资金账号id
    optional double amount = 8; // 成交金额
    optional int32 scorevalue = 9; // 赠送积分
    optional int32 scoretypeid = 10; // 积分类型id
    optional int32 amountratio = 11; // 成交金额比例
    optional int32 scoreratio = 12; // 积分比例
    optional int32 scoredays = 13; // 积分类型有效天数
    optional string updatetime = 14; // 更新时间
    optional string remark = 15; // 备注
    optional int32 handlestatus = 16; // 处理状态-1:未处理2:处理中3:已处理4:处理失败
}

message ms_ldw_feetoscore{ 
    optional string tradedate = 1; // 交易日(yyyymmdd)
    optional int64 tradeid = 2; // 成交单id
    optional int32 buyorsell = 3; // 买卖方向-0:买1:卖
    optional int32 tradefeetype = 4; // 费用类型-101建仓(买)手续费102平仓(卖)手续费
    optional int32 goodsid = 5; // 交易商品id
    optional int32 marketid = 6; // 市场id
    optional int32 userid = 7; // 投资者用户id
    optional int64 accountid = 8; // 资金账号id
    optional int32 memberuserid = 9; // 经纪会员用户id
    optional int64 memberaccountid = 10; // 经纪会员资金账户id
    optional int32 scoreprovideruserid = 11; // 积分服务商用户id
    optional int64 scoreprovideraccountid = 12; // 积分服务商资金账户id
    optional int32 isreturnscore = 13; // 经纪会员是否返还积分
    optional double feeratio = 14; // 手续费转会员比率
    optional double investorreturnratio = 15; // 投资者返还积分比率
    optional int32 convertratio = 16; // 转积分系数(1元多少积分)
    optional double totalcharge = 17; // 总手续费
    optional double covertcharge = 18; // 转积分手续费(划转给积分服务商)
    optional double exchangecharge = 19; // 交易所手续费=总手续费-转积分手续费
    optional int32 totalscore = 20; // 转换后总积分
    optional int32 memberscore = 21; // 经纪会员积分
    optional int32 investorscore = 22; // 投资者积分
    optional int32 hanlestatus = 23; // 处理状态-
    optional string createtime = 24; // 创建时间
    optional int32 returnflag = 25; // 返还状态-0:未返还1:返还中2:已返还
    optional int32 scoretypeid = 26; // 积分类型id
}

message ms_msglog{ 
    optional int64 exchticket = 1; // scf业务消息日志id(507+unix秒时间戳(10位)+xxxxxx)
    optional int32 marketingstrategyid = 2; // 策略id
    optional int32 businesssteps = 3; // 业务步骤
    optional double marketingstrategytypeid = 4; // 策略类型id
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int32 funcode = 6; // 功能码
    optional int32 retcode = 7; // 返回码
    optional int32 messagestatus = 8; // 状态-1:待发送2:发送完成3:响应失败
    optional bytes logcontent = 9; // 日志内容
    optional string createtime = 10; // 创建时间
    optional string clientticket = 11; // 客户端id
    optional string sendtopic = 12; // 发送主题
}

message ms_strategyinfo{ 
    optional int32 marketingstrategyid = 1; // 扩展策略id
    optional string marketingstrategyname = 2; // 扩展策略名称
    optional int32 marketingstrategytypeid = 3; // 扩展策略类型
    optional int32 datasrc = 4; // 数据来源-1:无2:交易成交通知3:订单仓单互转成交通知4:结算信号通知
    optional string marketingstategyparam = 5; // 扩展策略参数
    optional int32 isvalid = 6; // 是否有效-0:无效1:有效
    optional int32 isstop = 7; // 临时停用状态-0:未停止1:已停止
    optional string startdate = 8; // 开始日期(yyyymmdd)
    optional string enddate = 9; // 结束日期(yyyymmdd)
    optional string remark = 10; // 备注
    optional string updatetime = 11; // 更新时间
    optional int32 isvisible = 12; // 是否可见-0:不可见1:可见
    optional int32 validtype = 13; // 有效类型-1:永久有效2:指定时间有效
}

message ms_strategytype{ 
    optional int32 marketingstrategytypeid = 1; // 扩展策略类型id
    optional string marketingstrategytypename = 2; // 扩展策略类型名称
    optional int32 datasrc = 3; //  
    optional string remark = 4; // 备注
    optional int32 strategytype = 5; // 策略类型-1:个性化策略2:通用策略
}

message ms_sz_deliveryconfig{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 disuserid = 2; // 总经销商
    optional int32 supuserid = 3; // 供货商
    optional double costprice = 4; // 商品成本价
    optional double exchangeratio = 5; // 交易所分润比率
    optional double brokerratio = 6; // 经销商分润比率
    optional double returnratio = 7; // 经销商返现比率
    optional double expressratio = 8; // 重量系数
}

message ms_sz_dividedetail{ 
    optional int32 invoicedivideid = 1; // 分润明细id(509+unix秒时间戳(10位)++xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 relatedtype = 3; // 关联单类型-1:交易分润2:交收分润3:购物分润
    optional int64 relatedorderid = 4; // 关联单号-[交易成交单、交收成交单]
    optional double totalamount = 5; // 交易/交收总金额
    optional double totalcostamount = 6; // 交易/交收总成本
    optional int32 qty = 7; // 总数量
    optional int32 sourceuserid = 8; // 分润源用户id
    optional int32 sourceaccountid = 9; // 分润源资金账号
    optional int32 targetuserid = 10; // 分润目标用户id
    optional int32 targetaccountid = 11; // 分润目标资金账号
    optional int32 dividetargettype = 12; // 分润角色类型-1:供货商2:交易所3:总经销商4:经销商5:投资者
    optional double divideconfigvalue = 13; // 分润配置比率
    optional double dividerealvalue = 14; // 分润金额占比
    optional double dividetotalamount = 15; // 分润总资金
    optional double divideamount = 16; // 角色分润金额
    optional int32 handlestatus = 17; // 处理状态-1:未处理2:处理中3:已处理4:处理失败
    optional string createtime = 18; // 创建时间
    optional int32 goodsid = 19; // 交易商品id
    optional int32 deliverygoodsid = 20; // 交割商品id
    optional int32 amounttype = 21; // 资金类型-1:货款分润(非投资者)2:交收返现(投资者)
}

message ms_sz_expressfeedetail{ 
    optional int64 expressfeedetailid = 1; // 配送费明细id(510+unix秒时间戳(10位)++xxxxxx)
    optional int64 deliveryid = 2; // 关联交割单号
    optional int32 deliveryweight = 3; // 交收重量
    optional double expressfee = 4; // 配送费
    optional int32 buyeruserid = 5; // 买方用户id
    optional int64 buyeraccountid = 6; // 买方资金账户id
    optional int32 selleruserid = 7; // 卖方用户id
    optional int64 selleraccountid = 8; // 卖方资金账户id
    optional string updatetime = 9; // 更新时间
    optional string tradedate = 10; // 交易日
    optional int32 handlestatus = 11; // 处理状态-1:未处理2:处理中3:处理成功4:处理失败
}

message ms_sz_scoregive{ 
    optional int32 userid = 1; // 用户id(投资者)
    optional int32 givetype = 2; // 赠送类型-1:开户送2:首次登录
    optional double givescore = 3; // 红包金额
    optional int32 handlestatus = 4; //  
    optional int32 refereeuserid = 5; // 推荐用户id[开户送]
    optional double refereescore = 6; // 推荐红包金额[开户送]
    optional string updatetime = 7; // 更新时间
    optional string tradedate = 8; // 交易日
    optional string remark = 9; // 备注
}

message ms_zj_deliveryautoqty{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 provideruserid = 2; // 交收服务商id
    optional int32 buyqty = 3; // 当日买可配对数量
    optional int32 buytradeqty = 4; // 当日买成交数量
    optional int32 sellqty = 5; // 当日卖可配对数量
    optional int32 selltradeqty = 6; // 当日卖成交数量
}

message ms_zj_deliveryconfig{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 provideruserid = 2; // 交收服务商id
    optional int32 providermarginalgorithm = 3; // 卖方交收保证金方式(交收服务商)-1:比率2.固定
    optional double providermarginvalue = 4; // 卖方交收保证金值(交收服务商)
    optional int32 investormarginalgorithm = 5; // 卖方交收保证金方式(投资者)-1:比率2.固定
    optional double investormarginvalue = 6; // 卖方交收保证金值(投资者)
    optional int32 bprovidermarginalgorithm = 7; // 买方交收保证金方式(交收服务商)-1:比率2.固定
    optional double bprovidermarginvalue = 8; // 买方交收保证金值(交收服务商)
    optional int32 binvestormarginalgorithm = 9; // 买方交收保证金方式(投资者)-1:比率2.固定
    optional double binvestormarginvalue = 10; // 买方交收保证金值(投资者)
    optional int32 providermarginalgorithm2 = 11; // 卖方履约保证金方式(交收服务商)-1:比率2.固定
    optional double providermarginvalue2 = 12; // 卖方履约保证金值(交收服务商)
    optional int32 investormarginalgorithm2 = 13; // 卖方履约保证金方式(投资者)-1:比率2.固定
    optional double investormarginvalue2 = 14; // 卖方履约保证金值(投资者)
    optional int32 bprovidermarginalgorithm2 = 15; // 买方履约保证金方式(交收服务商)-1:比率2.固定
    optional double bprovidermarginvalue2 = 16; // 买方履约保证金值(交收服务商)
    optional int32 binvestormarginalgorithm2 = 17; // 买方履约保证金方式(投资者)-1:比率2.固定
    optional double binvestormarginvalue2 = 18; // 买方履约保证金值(投资者)
}

message ms_zj_deliveryfeeconfig{ 
    optional int64 accountid = 1; // 账户id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 smarginalgorithm = 3; // 卖方交收保证金方式-1:比率2.固定
    optional double smarginvalue = 4; // 卖方交收保证金值
    optional int32 bmarginalgorithm = 5; // 买方交收保证金方式-1:比率2.固定
    optional double bmarginvalue = 6; // 买方交收保证金值
    optional int32 smarginalgorithm2 = 7; // 卖方履约保证金方式-1:比率2.固定
    optional double smarginvalue2 = 8; // 卖方履约保证金值
    optional int32 bmarginalgorithm2 = 9; // 买方履约保证金方式-1:比率2.固定
    optional double bmarginvalue2 = 10; // 买方履约保证金值
}

message ms_zy_accountconfig{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 specuserid = 2; // 特许经销商用户id
    optional int32 righttype = 3; // 权限类型-1:可券转积分
}

message ms_zy_accountpl{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 specuserid = 2; // 特许经销商用户id
    optional double pl = 3; // 盈亏(定期结算时清零)
    optional string updatetime = 4; // 更新时间
}

message ms_zy_accountscore{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 specuserid = 2; // 特许经销商用户id
    optional double score = 3; // 剩余券
    optional double freezescore = 4; // 冻结券
    optional string updatetime = 5; // 更新时间
}

message ms_zy_brokergroup{ 
    optional int32 brokergroupid = 1; // 经销商分组id
    optional string brokergroupname = 2; // 经销商分组名称
    optional string remark = 3; // 备注
    optional string createtime = 4; // 创建时间
    optional double transferdivideratio = 5; // 分润比率-中远[券转积分分润比率]尚志[经销商分润比率]
}

message ms_zy_brokergroupdetail{ 
    optional int32 brokergroupid = 1; // 经销商分组id
    optional int32 brokeruserid = 2; // 经销商用户id
}

message ms_zy_brokergroupdivide{ 
    optional int32 brokergroupid = 1; // 经销商分组id
    optional int32 specuserid = 2; // 特许经销商id
    optional double transferdivideratio = 3; // 分润比率-中远[券转积分分润比率]
}

message ms_zy_deliverygoodsconfig{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 specuserid = 2; // 特许经销商id
    optional double costprice = 3; // 商品成本价
    optional double expressratio = 4; // 运费系数
}

message ms_zy_invoicedivide{ 
    optional int64 invoicedivideid = 1; // 分润明细id(505+unix秒时间戳(10位)++xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 invoiceorderdetailid = 3; // 发货单明细id(504+unix秒时间戳(10位)++xxxxxx)
    optional int64 invoiceorderid = 4; // 发货单id(502+unix秒时间戳(10位)++xxxxxx)(503+unix秒时间戳(10位)++xxxxxx)
    optional int32 shipgoodsid = 5; // 发货商品id
    optional int32 deliverygoodsid = 6; // 交割商品id
    optional double sellprice = 7; // 销售价
    optional double costprice = 8; // 成本价
    optional int32 qty = 9; // 数量
    optional int32 sourceaccountid = 10; // 分润源资金账号(经销商)
    optional int32 targetaccountid = 11; // 分润目标资金账号
    optional int32 dividetargettype = 12; // 分润角色类型-1:经销商2:大区经销商3:特许经销商4:积分服务商
    optional double divideconfigvalue = 13; // 分润配置比率
    optional double dividerealvalue = 14; // 分润金额占比
    optional double dividetotalamount = 15; // 分润总资金[(零售价-成本价*交割系数)
    optional double divideamount = 16; // 角色分润金额
    optional string createtime = 17; // 创建时间
    optional int32 hanlestatus = 18; // 处理状态-
    optional double roleamout = 19; // 角色应收(应付)金额
    optional int32 relatedtype = 20; // 关联单类型-1:发货明细2:券转积分明细
    optional int64 relatedorderid = 21; // 关联单号
}

message ms_zy_invoiceorder{ 
    optional int64 invoiceorderid = 1; // 发货单id(502+unix秒时间戳(10位)++xxxxxx)(503+unix秒时间戳(10位)++xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)发货状态变更为2、3时更新交易日
    optional int32 receiveruserid = 3; // 收货人id
    optional int32 receiveraccountid = 4; // 收货人资金账号
    optional int32 shipperuserid = 5; // 发货人id（经纪会员）
    optional int64 shipperaccountid = 6; // 发货人资金账号
    optional int32 applytype = 7; // 申请类型-1:强制配货2:自主申请
    optional int32 pickupmode = 8; // 提货模式-1:券提货2:亏损提货3:行权提货
    optional int32 shipqty = 9; // 发货总数量
    optional int32 totalweight = 10; // 总重量
    optional double consumescore = 11; // 总消耗券(含运费抵券)[应付货款]
    optional double expressfee = 12; // 运费抵券
    optional int32 shipperstatus = 13; //  
    optional int32 hanlestatus = 14; // 处理状态-1:未处理2:处理中3:处理成功4:处理失败5:申请处理中(确认行权)
    optional string receiveraddress = 15; // 发货地址
    optional string expressinfo = 16; // 快递信息(单号或其它信息
    optional int32 receiptstatus = 17; // 发票状态-1:未申请开票2:已申请开票3:发票已发
    optional int32 receipttype = 18; // 发票类型-1:个人2:企业
    optional string username = 19; // 户名(个人姓名或企业名称)
    optional string taxpayerid = 20; // 纳税人识别号
    optional string contactinfo = 21; // 联系方式
    optional string remark = 22; // 备注
    optional string createtime = 23; // 创建时间
    optional int64 relatedtradeid = 24; // 关联持仓单号
    optional double premium = 25; // 权利金
    optional double exerciseprice = 26; // 行权价
    optional int32 holderqty = 27; // 持仓数量
    optional double agreeunit = 28; // 持仓商品合约单位
    optional int32 specuserid = 29; // 特许经销商用户id
    optional string receiptcode = 30; // 发票代码
    optional double receiptamount = 31; // 发票金额
    optional string receiptdate = 32; // 开票日期
    optional string receiptbank = 33; // 发票开户行[发票类型:企业]
    optional string receiptaccount = 34; // 发票帐号[发票类型:企业]
    optional string address = 35; // 地址[发票类型:企业]
    optional string idnum = 36; // 身份证号码[发票类型:个人]
    optional string audittime = 37; // 审核时间
    optional string shiptime = 38; // 发货时间
}

message ms_zy_invoiceorderdetail{ 
    optional int64 invoiceorderdetailid = 1; // 发货单明细id(504+unix秒时间戳(10位)++xxxxxx)
    optional int64 invoiceorderid = 2; // 发货单id
    optional string tradedate = 3; // 交易日(yyyymmdd)发货状态变更为2、3时更新交易日
    optional int32 shipgoodsid = 4; // 发货商品id
    optional int32 shipqty = 5; // 发货数量
    optional double consumescore = 6; // 消耗券
    optional int32 weight = 7; // 重量(发货数量*发货系数)
    optional int32 hanlestatus = 8; // 处理状态-
    optional string createtime = 9; // 创建时间
    optional double expressfee = 10; // 运费
}

message ms_zy_mcdivideconfig{ 
    optional int32 mcuserid = 1; // 营销中心用户id
    optional double dividevalue = 2; // 分润比率
}

message ms_zy_reckon_dividecount{ 
    optional string tradedate = 1; // 交易日
    optional int64 accountid = 2; // 资金账号id
    optional double divideamount = 3; // 分润总金额
    optional int32 totalcount = 4; // 总笔数
    optional int32 dividetargettype = 5; // 分润角色类型-1:经销商2:大区经销商3:特许经销商4:积分服务商
    optional string createtime = 6; // 创建时间
}

message ms_zy_reckon_mcdividecount{ 
    optional string tradedate = 1; // 交易日
    optional int32 mcaccountid = 2; // 大区资金账号id
    optional int32 brokdeaccountid = 3; // 经销商资金账号id
    optional double divideamount = 4; // 分润总金额
    optional int32 totalcount = 5; // 总笔数
    optional string createtime = 6; // 创建时间
}

message ms_zy_reckon_sgcount{ 
    optional string tradedate = 1; // 交易日
    optional int32 shipperuserid = 2; // 发货人id
    optional int32 shipgoodsid = 3; // 发货商品id
    optional int32 shipqty = 4; // 发货总数量
    optional string createtime = 5; // 创建时间
}

message ms_zy_report_dividecount{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 dividetargettype = 2; // 分润角色类型-1:经销商2:大区经销商3:特许经销商
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional double divideamount = 5; // 分润总金额
    optional int32 totalcount = 6; // 总笔数
    optional string createtime = 7; // 创建时间
}

message ms_zy_report_mcdividecount{ 
    optional int64 mcaccountid = 1; // 大区资金账号id
    optional int64 brokdeaccountid = 2; // 经销商资金账号id
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional double divideamount = 5; // 分润总金额
    optional int32 totalcount = 6; // 总笔数
    optional string createtime = 7; // 创建时间
}

message ms_zy_report_sgcount{ 
    optional int32 shipperuserid = 1; // 发货人id
    optional int32 shipgoodsid = 2; // 发货商品id
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 shipqty = 5; // 发货总数量
    optional string createtime = 6; // 创建时间
}

message ms_zy_shipdivideconfig{ 
    optional int32 shipgoodsid = 1; // 发货商品id(自增id)
    optional int32 brokergroupid = 2; // 经销商分组id
    optional double brokevalue = 3; // 经纪会员分润比率(默认)
}

message ms_zy_shipgoods{ 
    optional int32 shipgoodsid = 1; // 发货商品id(自增id)
    optional string shipgoodsname = 2; // 发货商品名称
    optional int32 deliverygoodsid = 3; // 交割商品id
    optional int32 deliveryratio = 4; // 发货系数
    optional double retailprice = 5; // 零售价
    optional double pricemove = 6; // 升贴水
    optional double brokevalue = 7; // 经纪会员分润比率(默认)
    optional string createtime = 8; // 创建时间
    optional string qtyunit = 9; // 数量单位
    optional string remark = 10; // 备注
    optional double basicfee = 11; // 基础运费
    optional double basicstep = 12; // 每单费用
}

message ms_zy_tickettoscore{ 
    optional int64 detailid = 1; // 明细id(508+unix秒时间戳(10位)++xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 accountid = 3; // 资金账号id
    optional int32 transfertype = 4; // 转换类型-1:结算券转积分2:剩余券处理
    optional double ticketnum = 5; // 转换券
    optional int32 scorenum = 6; // 转换积分
    optional int32 detailstatus = 7; // 明细状态-1:处理中2:处理成功3:处理失败
    optional int32 handlestatus = 8; // 处理状态
    optional double scoreuserdivide = 9; // 积分服务商分润
    optional double brokerdivide = 10; // 经销商分润
    optional double mcdivide = 11; // 大区经销商分润
    optional double specdivide = 12; // 特许经销商分润
    optional int32 istransfer = 13; // 是否转积分-0:不转1:转积分
    optional int32 userid = 14; // 用户id
    optional int32 transferratio = 15; // 券转积分系数
    optional int32 transferdays = 16; // 券转积分有效天数
    optional double transfercostratio = 17; // 券转积分成本比率
    optional double transferbrokerratio = 18; // 经销商分润比率
    optional double transfermcratio = 19; // 大区经销商分润比率
    optional int32 scoreuserid = 20; // 积分服务商用户id
    optional int64 scoreaccountid = 21; // 积分服务商资金账号id
    optional int32 brokeruserid = 22; // 经销商用户id
    optional int64 brokeraccountid = 23; // 经销商资金账号id
    optional int32 mcuserid = 24; // 大区用户id
    optional int64 mcaccountid = 25; // 大区资金账号id
    optional int32 specuserid = 26; // 特许经销商用户id
    optional int64 specaccountid = 27; // 特许资金账号id
    optional int32 msgnumflag = 28; // 分润消息数量标记
}

message msgaccountrecord{ 
    optional int64 bizflowid = 1; // 业务流水id
    optional int32 recordtype = 2; // 记录类型-1:资金类2:头寸类
    optional int32 amounttype = 3; // 资金类型
    optional int64 accountid = 4; // 资金账户
    optional double amount = 5; // 金额
    optional int32 position = 6; // 头寸
    optional string tradedate = 7; // 交易日
    optional string createtime = 8; // 创建时间
}

message msgerror_trade{ 
    optional int64 autoid = 1; // autoid
    optional string tradedate = 2; // 交易日
    optional int32 funcode = 3; // 功能码
    optional int32 typeid = 4; // 类型id
    optional int64 accountid = 5; // 帐号id
    optional int64 orderid = 6; // 单据id
    optional bytes msgcontent = 7; // 消息内容
    optional string createtime = 8; // 创建时间
    optional int32 retcode = 9; // 返回码
    optional string remark = 10; // 备注
    optional int32 handlestatus = 11; // 处理状态-1:待处理2:已处理
}

message msgmanagementrecord{ 
    optional int64 autoid = 1; // autoid
    optional string tradedate = 2; // 交易日
    optional int64 bizflowid = 3; // 业务流水id
    optional int64 systemmanagerid = 4; // 管理员帐号
    optional int32 msgtype = 5; // 消息类型-
    optional int32 msgstatus = 6; // 消息状态-1:已发送2:已回应
    optional string msgcontent = 7; // 消息内容
    optional string createtime = 8; // 创建时间
}

message msgreceiver{ 
    optional int64 autoid = 1; // 自增id
    optional int32 managerid = 2; // 用户id
    optional int32 readstatus = 3; // 消息状态-1：未阅读2：已阅读3：已删除
}

message mytable{ 
    optional string tablename = 1; // 
    optional string columnname = 2; // 
    optional string columncomment = 3; // 
    optional string datatype = 4; // 
    optional string tableschema = 5; // 
}

message noticemsg{ 
    optional int64 autoid = 1; // 自增id
    optional int32 msgtype = 2; // 消息类型-1:公告通知2:系统消息
    optional string title = 3; // 标题
    optional string content = 4; // 内容
    optional string scheduletime = 5; // 计划发送时间
    optional string publisher = 6; // 消息发布者
    optional int32 sendtype = 7; // 推送方式-1：全体广播2：按会员广播3：个人推送4:按会员广播(仅会员)
    optional int32 userid = 8; // 会员/投资者id推送方式为个人时，填写投资者id
    optional int32 istop = 9; // 是否置顶-0:不置顶1:置顶
    optional int32 sentstatus = 10; // 推送状态-0:未推送1:已推送2:审核拒绝
    optional string endtime = 11; // 结束时间
    optional int32 creatorid = 12; // 建仓人
    optional string createtime = 13; // 创建时间
    optional int32 auditoruserid = 14; // 审核人
    optional string audittime = 15; // 审核日期
    optional string auditremark = 16; // 审核备注
}

message operationflow{ 
    optional int64 objid = 1; // 流程实例id(autoid)
    optional int32 oprprocessid = 2; // 流程模板id
    optional int32 curoprindex = 3; // 当前流程序号
    optional string curindexname = 4; // 步当前骤名称
    optional int32 status = 5; // 状态-1：待处理;2：正在处理;3：处理完毕
    optional int32 creatorid = 6; // 创建人
    optional string createtime = 7; // 创建时间
}

message operationflowlog{ 
    optional int64 autoid = 1; // 自增id
    optional int32 objid = 2; // 流程实例id
    optional int32 oprindex = 3; // 流程序号
    optional int32 status = 4; // 状态-1：待执行;2：已执行;
    optional int32 operateuser = 5; // 执行人
    optional string operatetime = 6; // 执行时间
}

message operationflowtemplate{ 
    optional int32 oprprocessid = 1; // 流程模板id(autoid)
    optional string oprprocessname = 2; // 模板名称
}

message operationflowtemplatedetail{ 
    optional int32 oprprocessid = 1; // 流程模板id
    optional int32 oprindex = 2; // 流程序号
    optional string indexname = 3; // 步骤名称
    optional string resourcecode = 4; //  
    optional string url = 5; // url
}

message option_quoteapply{ 
    optional int32 autoid = 1; // autoid
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 goodsid = 3; // 商品id
    optional int32 stepvalue = 4; // 价格档位
    optional int32 optiontype = 5; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional int32 quoterid = 6; // 报价商id
    optional double premium = 7; // 权利金
    optional double strikeprice = 8; // 行权价
    optional string quotetime = 9; // 报价时间
    optional int32 quotemode = 10; // 报价模式-1:人工报价2:自动报价
    optional int32 quoteeffectivesecond = 11; // 行情有效时间(秒)
    optional int32 applystatus = 12; // 申请状态-1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败
    optional int32 audituserid = 13; // 审核人
    optional string audittime = 14; // 审核时间
    optional string remark = 15; // 备注
    optional double last = 16; // 市场价
    optional double open = 17; // 开盘价
    optional int32 premiumtype = 18; // 报价方式-1:手动报权利金2:自动报权利金
    optional double premiumratio = 19; // 百分比
}

message option_quotedetail{ 
    optional string tradedate = 1; // 交易日(yyyymmdd)
    optional int32 goodsid = 2; // 商品id
    optional int32 stepvalue = 3; // 价格档位
    optional int32 optiontype = 4; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional int32 quoterid = 5; // 报价商id
    optional double premium = 6; // 权利金
    optional double strikeprice = 7; // 行权价
    optional string quotetime = 8; // 报价时间
    optional int32 quotemode = 9; // 报价模式-1:人工报价2:自动报价
    optional int32 quoteeffectivesecond = 10; // 行情有效时间(秒)
    optional double last = 11; // 最新价
}

message pas_dayholddetail{ 
    optional int64 tradeid = 1; // 成交单号(144+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string reckondate = 2; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 accountid = 4; // 账号id
    optional int32 userid = 5; // 用户id
    optional int32 goodsid = 6; // 商品id
    optional int64 wrfactortypeid = 7; // 仓单要素类型id
    optional int32 deliverygoodsid = 8; // 交割商品id
    optional int32 sellerid = 9; // 卖方用户id
    optional int64 selleraccountid = 10; // 卖方账号id
    optional int32 marketid = 11; // 市场id
    optional int32 holderqty = 12; // 持仓数量
    optional double holderprice = 13; // 商品持仓价格
    optional double privemove = 14; // 升贴水价格
    optional double holderamount = 15; // 持仓金额
    optional double freezemargin = 16; // 冻结摘牌定金
    optional string tradetime = 17; // 交易时间
    optional int32 tradeproperty = 18; // 交易属性(该模式为1)
    optional int32 deliverytype = 19; // 交收类型-1:现金交收(履约)2:融资交收
    optional int64 relatedid = 20; // 关联id(履约计划id或融资申请id)
    optional int32 hasapplydelivery = 21; // 是否申请交收-0:未申请1:已申请
    optional int32 state = 22; //  
    optional int64 listingid = 23; // 关联挂牌单号
    optional double breachexchangeratio = 24; // 交收违约交易所百分比
    optional double breachsellratio = 25; // 交收违约卖方获得百分比
    optional double exchangeamount = 26; // 交易所应收违约金
    optional double selleramount = 27; // 卖方应收违约金
}

message pas_holddetail{ 
    optional int64 tradeid = 1; // 成交单号(144+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 accountid = 3; // 账号id
    optional int32 userid = 4; // 用户id
    optional int32 goodsid = 5; // 商品id
    optional int64 wrfactortypeid = 6; // 仓单要素类型id
    optional int32 deliverygoodsid = 7; // 交割商品id
    optional int32 sellerid = 8; // 卖方用户id
    optional int64 selleraccountid = 9; // 卖方账号id
    optional int32 marketid = 10; // 市场id
    optional int32 holderqty = 11; // 持仓数量
    optional double holderprice = 12; // 商品持仓价格
    optional double privemove = 13; // 升贴水价格
    optional double holderamount = 14; // 持仓金额
    optional double freezemargin = 15; // 冻结摘牌定金
    optional string tradetime = 16; // 交易时间
    optional int32 tradeproperty = 17; // 交易属性(该模式为1)
    optional int32 deliverytype = 18; // 交收类型-1:现金交收(履约)2:融资交收
    optional int64 relatedid = 19; // 关联id(履约计划id或融资申请id)
    optional int32 hasapplydelivery = 20; // 是否申请交收-0:未申请1:已申请
    optional int32 state = 21; //  
    optional int64 listingid = 22; // 关联挂牌单号
}

message pas_marketparam{ 
    optional int32 marketid = 1; // 市场id
    optional int32 marginalgorithm = 2; // 摘牌定金设置方式1：比率2：固定
    optional double marginvalue = 3; // 摘牌定金设置值
    optional double breachexchangeratio = 4; // 交收违约交易所百分比
    optional double breachsellratio = 5; // 交收违约卖方百分比
    optional double scfpayratio = 6; // 融资交收付款比率
    optional double wrtradepayratio = 7; // 代理采购付款比率
    optional int32 middleuserid = 8; // 中间商用户id
}

message pas_orderapply{ 
    optional int64 applyid = 1; // 委托申请id(141+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 wruserid = 3; // 持有人id
    optional int64 accountid = 4; // 资金账号id
    optional int32 wrfactortypeid = 5; // 仓单要素类型id
    optional int32 goodsid = 6; // 商品id
    optional int32 marketid = 7; // 市场id
    optional double pricemove = 8; // 升贴水价格
    optional int32 qty = 9; // 数量
    optional string validtime = 10; // 选价期(hh:mm)
    optional int32 status = 11; // 状态-1:待审核2:审核通过3:审核拒绝4:审核失败5:已取消
    optional string applytime = 12; // 申请时间
    optional int32 auditorid = 13; // 审核人
    optional string audittime = 14; // 审核时间
    optional string auditremark = 15; // 审核备注
}

message pas_orderdetail{ 
    optional int64 orderid = 1; // 委托单号(143+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 applyid = 3; // 关联委托申请单id
    optional int64 sellorderid = 4; // 关联卖委托单id[买]
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int64 accountid = 7; // 账户id
    optional int32 wruserid = 8; // 持有人id
    optional int64 wrfactortypeid = 9; // 仓单要素类型id
    optional double pricemove = 10; // 升贴水价格
    optional int32 buyorsell = 11; // 买卖-0:买1:卖
    optional int32 validtype = 12; //  
    optional string validtime = 13; // 有效期限
    optional int32 pricemode = 14; // 取价方式-1:市价2:限价[买]
    optional double orderprice = 15; // 委托价格[买]
    optional int32 orderqty = 16; // 委托数量
    optional int32 tradeqty = 17; // 成交数量
    optional double freezemargin = 18; // 冻结保证金(买方摘牌定金)
    optional double unfreezemargin = 19; // 解冻保证金(买方)
    optional double freezecharge = 20; // 冻结手续费(买方)
    optional double unfreezecharge = 21; // 解冻手续费(买方)
    optional string ordertime = 22; // 委托时间
    optional int32 ordersrc = 23; // 委托来源-1:客户端2:管理端
    optional int32 orderstatus = 24; //  
    optional int32 handlestatus = 25; // 处理状态-
    optional int64 operatorid = 26; // 登录账号(loginid)
    optional string updatetime = 27; // 更新时间
    optional string clientordertime = 28; // 客户端委托时间
    optional string clientticket = 29; // 客户端流水号
    optional string uuid = 30; // 发起端唯一id
    optional int32 clienttype = 31; //  
    optional int32 retcode = 32; // 错误代码
    optional int32 tradeproperty = 33; // 交易属性
    optional int32 marginalgorithm = 34; // 摘牌定金设置方式1：比率2：固定[买]
    optional double marginvalue = 35; // 摘牌定金设置值[买]
}

message pas_tradedetail{ 
    optional int64 tradeid = 1; // 成交单号(144+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 relatedorderid = 4; // 关联委托单id
    optional int64 accountid = 5; // 账号id
    optional int32 memberuserid = 6; // 会员id个人投资者需要填写
    optional int64 matchaccountid = 7; // 对手账号id
    optional int32 goodsid = 8; // 商品id
    optional int32 marketid = 9; // 市场id
    optional int64 wrfactortypeid = 10; // 仓单要素类型id
    optional int32 wruserid = 11; // 持有人id
    optional string tradetime = 12; // 成交时间
    optional double tradeprice = 13; // 成交价格
    optional double pricemove = 14; // 升贴水价格
    optional int32 tradeqty = 15; // 成交数量
    optional double tradeamount = 16; // 成交金额=(成交价格+升贴水价格)*数量*合约单位
    optional double charge = 17; // 手续费
    optional int32 chargealgorithm = 18; // 手续费收取方式1：比率2：固定
    optional double chargevalue = 19; // 手续费设置值
    optional int32 handlestatus = 20; // 处理状态-1:待处理2:已处理3:处理失败
    optional int32 ismain = 21; // 是否主单-0:不是1:是[卖方为主单]
    optional int32 isreckoned = 22; // 是否已结算-0:未结算1:已结算
    optional int32 tradeproperty = 23; // 交易属性
}

message performancebreach{ 
    optional int64 planid = 1; // 履约计划id(130+unix秒时间戳(10位)+xxxxxx)
    optional int64 breachapplyid = 2; // 违约申请id(132+unix秒时间戳(10位)+xxxxxx)
    optional int32 breachtype = 3; // 违约方-1:买方2:卖方
    optional int32 breachstatus = 4; // 违约处理状态-1:未完成2:已处理3:已成功
    optional int64 buyaccountid = 5; // 买方账号
    optional int64 sellaccountid = 6; // 卖方账号
    optional double buyamount = 7; // 买方应付/应收金额
    optional double buyamounthandled = 8; // 买方已处理金额
    optional double sellamount = 9; // 卖方应付/应收金额
    optional double sellamounthandled = 10; // 卖方已处理金额
    optional double exchangeamount = 11; // 交易所应收金额
    optional double exchangeamounthandled = 12; // 交易所已处理金额
    optional string createtime = 13; // 创建时间
}

message performancebreachapply{ 
    optional int64 breachapplyid = 1; // 违约申请id(132+unix秒时间戳(10位)+xxxxxx)
    optional int64 planid = 2; // 履约计划id
    optional int32 breachtype = 3; // 违约方-1:买方2:卖方
    optional int32 breachstatus = 4; // 违约状态-1:待审核2:审核通过3:审核拒绝
    optional string breachapplytime = 5; // 违约申请时间
    optional int32 applicant = 6; // 违约申请人
    optional string applyremark = 7; // 申请备注
    optional string audittime = 8; // 审核时间
    optional int32 auditor = 9; // 审核人
    optional string auditremark = 10; // 审核备注
    optional int32 applytype = 11; // 申请方-1:买方2:卖方
}

message performancedelay{ 
    optional int64 autoid = 1; // 自增id
    optional int64 planid = 2; // 履约计划id(132+unix秒时间戳(10位)+xxxxxx)
    optional int64 stepid = 3; // 履约计划步骤id
    optional int32 delaydays = 4; // 申请延期天数
    optional int32 delaystatus = 5; // 延期状态-1:待审核2:审核通过3:审核拒绝4:已撤销5:系统撤销
    optional string applytime = 6; // 申请时间
    optional int32 applicant = 7; // 申请人
    optional string applyremark = 8; // 申请备注
    optional string audittime = 9; // 审核时间
    optional int32 auditor = 10; // 审核人
    optional string auditremark = 11; // 审核备注
}

message performancelog{ 
    optional int64 autoid = 1; // 自增id
    optional int64 planid = 2; // 履约计划id
    optional int64 stepid = 3; // 履约步骤id
    optional int32 logtype = 4; //  
    optional string logtime = 5; // 记录时间
    optional string tradedate = 6; // 交易日(yyyymmdd)
    optional string remark = 7; // 备注
}

message performancemsglog{ 
    optional int64 logticket = 1; // 日志id(133+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 funcode = 3; // 功能码
    optional int32 typeid = 4; // 类型id
    optional int32 retcode = 5; // 返回码
    optional int64 accountticket = 6; // 帐号id
    optional int64 orderticket = 7; // 单据id
    optional bytes logcontent = 8; // 日志内容
    optional int32 messagestatus = 9; // 状态-1:待发送2:发送完成
    optional string createtime = 10; // 创建时间
    optional string remark = 11; // 备注
    optional string clientticket = 12; // 客户端id
    optional int32 marketid = 13; // 市场id
}

message performanceplan{ 
    optional int64 performanceplanid = 1; // 履约计划id(130+yymmddhhmmss+xxxx)
    optional int32 performancetype = 2; //  
    optional int64 relatedorderid = 3; // 关联单号(履约类型的关联单号)
    optional double amount = 4; // 履约金额
    optional int32 paymenttype = 5; // 买方支付方式-1:冻结2:扣款
    optional int32 performancestatus = 6; //  
    optional int32 curstepid = 7; // 当前步骤id
    optional int64 buyaccountid = 8; // 买方账号
    optional int32 wrtransferuserid = 9; // 仓单受让用户
    optional double buypaidamount = 10; // 买方已冻/已扣金额
    optional int64 sellaccountid = 11; // 卖方账号
    optional double sellreceivedamount = 12; // 卖方已收金额
    optional double buytodayamount = 13; // 买方今日扣/冻金额(待开市时清零)
    optional double selltodayamount = 14; // 卖方今日收取金额(待开市时清零)
    optional string createtime = 15; // 创建时间
    optional int32 creatorid = 16; // 创建人
    optional string remark = 17; // 备注
    optional double buyerfreezeamount = 18; // 买方履约前冻结资金
    optional double buyerfreezeamountremain = 19; // 买方履约前冻结资金剩余
    optional double sellerfreezeamount = 20; // 卖方履约前冻结资金
    optional double sellerfreezeamountremain = 21; // 卖方履约前冻结资金剩余
    optional double overshortamount = 22; // 货款溢短资金额
    optional int32 hasovershort = 23; // 是否确认溢短-0:没有1:买方确认2:卖方确认
    optional string shipremark = 24; // 发货备注[物流单号]
    optional int32 middleuserid = 25; // 中间商用户id
    optional int64 middleaccountid = 26; // 中间商资金账号id
    optional int32 haswr = 27; // 是否有仓单-0:无仓单1:有仓单间
    optional string buyerinfo = 28; // 买方联系信息
    optional string sellerinfo = 29; // 卖方联系信息
    optional double overshortqty = 30; // 溢短数量
    optional int32 marketid = 31; // 市场id
    optional int32 expressfeeconfirmed = 32; // 是否确认运费-0:无1:买方确认2:卖方确认
    optional double expressfee = 33; // 运费
}

message performanceplantemplate{ 
    optional int32 autoid = 1; // autoid
    optional string templatename = 2; // 模板名称
    optional int32 paymenttype = 3; // 支付方式-1:冻结2:扣款
    optional string createtime = 4; // 创建时间
    optional int32 creatorid = 5; // 创建人
    optional int32 templatetype = 6; //  
    optional int32 takemode = 7; // 提货方式-1:无2:买方自提3:卖方发货
}

message performanceplanwr{ 
    optional int64 performanceplanid = 1; // 履约计划id
    optional int64 wrid = 2; // 仓单id
    optional int32 wrtradeqty = 3; // 仓单交易数量
    optional int32 wrfreezeqty = 4; // 履约前已冻数量
    optional int32 perfreezeqty = 5; // 履约时冻结数量
    optional int32 handlestatus = 6; // 处理状态-1:未划转2:已转移3:已解冻
}

message performancereceipt{ 
    optional int64 autoid = 1; // autoid(seq_performancereceipt)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 planid = 3; // 履约计划id
    optional int64 stepid = 4; // 履约计划步骤id
    optional int32 amounttypeid = 5; // 资金类型-1:货款2:违约处理
    optional int32 outuserid = 6; // 付款用户id
    optional int64 outaccountid = 7; // 付款账号id
    optional int32 inuserid = 8; // 收款用户id
    optional int64 inaccountid = 9; // 收款账号id
    optional double amount = 10; // 金额
    optional string createtime = 11; // 创建时间
}

message performancestep{ 
    optional int64 performancestepid = 1; // 履约步骤id(131+unix秒时间戳(10位)+xxxxxx)
    optional int64 planid = 2; // 所属履约计划id
    optional int32 stepindex = 3; // 步骤序号
    optional int32 stepdays = 4; // 天数
    optional int32 steptypeid = 5; //  
    optional double stepvalue = 6; // 步骤值
    optional double stepamount = 7; // 步骤金额
    optional double realamount = 8; // 实际完成金额
    optional int32 remaindays = 9; // 剩余天数
    optional int32 delaydays = 10; // 延期申请天数
    optional int32 isauto = 11; // 是否自动-0:不自动1:自动
    optional int32 islastreceivestep = 12; //  
    optional int32 stepstatus = 13; // 步骤状态-1:待开始2:进行中3:已完成4:延期(进行中)5:失败6:自动完成
    optional int32 handlestatus = 14; //  
    optional int32 steplanchtype = 15; // 步骤启动类型-1:系统自动2:手动
    optional int32 executeside = 16; // 步骤执行方-1:买方2:卖方
    optional string starttime = 17; // 开始日期
    optional string endtime = 18; // 结束日期
    optional string remark = 19; // 错误备注
    optional string stepremark = 20; // 步骤备注
}

message performancesteptemplate{ 
    optional int64 autoid = 1; // autoid
    optional int64 templateid = 2; // 履约计划模板id
    optional int32 stepindex = 3; // 步骤序号
    optional int32 stepdays = 4; // 距离上一步天数
    optional int32 steptypeid = 5; //  
    optional double stepvalue = 6; // 步骤值
    optional int32 isauto = 7; // 是否自动-0:不自动1:自动
    optional int32 islastreceivestep = 8; //  
    optional string remark = 9; // 备注
}

message performancesteptype{ 
    optional int32 steptypeid = 1; //  
    optional string steptypename = 2; // 步骤类型名称
    optional int32 canauto = 3; //  
}

message presale_daylistinginfo{ 
    optional string reckondate = 1; // 日照日期
    optional int64 listingid = 2; // 预售挂牌id(150+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 applyid = 3; // 预售申请id
    optional string tradedate = 4; // 交易日
    optional int64 selleraccountid = 5; // 卖方资金账号id
    optional int32 marketid = 6; // 市场id
    optional string goodsname = 7; // 商品名称
    optional string goodscode = 8; // 商品代码
    optional string unit = 9; // 单位
    optional int32 applyqty = 10; // 申请数量
    optional int32 steppricetype = 11; // 阶梯价类型-1:量增价减
    optional string goodsdesc = 12; // 商品描述
    optional string goodspicurl = 13; // 商品介绍图片
    optional int32 decimalplace = 14; // 价格小数位(最大4位)
    optional int32 sellmarginalgorithm = 15; // 卖方保证金收取方式-1：比率2：固定
    optional double sellmarginvalue = 16; // 卖方保证金设置值
    optional int32 buychargealgorithm = 17; // 买方手续费收取方式1：比率2：固定
    optional double buychargevalue = 18; // 买方手续费设置值
    optional int32 sellchargealgorithm = 19; // 卖方手续费收取方式1：比率2：固定
    optional double sellchargevalue = 20; // 卖方手续费设置值
    optional int64 performancetemplateid = 21; // 履约计划模板id
    optional int32 presalestatus = 22; // 预售状态-1:未开始2:预售中3:预售成功4:预售失败5:履约完成
    optional int32 handlestatus = 23; // 处理状态-
    optional string createtime = 24; // 创建时间
    optional string updatetime = 25; // 更新时间
    optional int32 tradeqty = 26; // 成交数量
    optional double totaltradeamount = 27; // 成交总金额
    optional double avgtradeprice = 28; // 成交均价
    optional double selltotalcharge = 29; // 卖方总手续费
    optional double buytotalcharge = 30; // 买方总手续费
    optional string startday = 31; // 开始日期
    optional string endday = 32; // 结束日期
    optional double sellerfreezemargin = 33; // 卖方冻结保证金
    optional double sellerfreezecharge = 34; // 卖方冻结手续费
    optional int32 buymarginalgorithm = 35; // 买方保证金方式-1：比率2：固定
    optional double buymarginvalue = 36; // 买方保证金设置值
}

message presale_listinginfo{ 
    optional int64 listingid = 1; // 预售挂牌id(150+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 applyid = 2; // 预售申请id
    optional string tradedate = 3; // 交易日
    optional int64 selleraccountid = 4; // 卖方资金账号id
    optional int32 marketid = 5; // 市场id
    optional string goodsname = 6; // 商品名称
    optional string goodscode = 7; // 商品代码
    optional string unit = 8; // 单位
    optional int32 applyqty = 9; // 申请数量
    optional int32 steppricetype = 10; // 阶梯价类型-1:量增价减
    optional string goodspicurl = 11; // 商品介绍图片
    optional int32 decimalplace = 12; // 价格小数位(最大4位)
    optional int32 sellmarginalgorithm = 13; // 卖方保证金收取方式-1：比率2：固定
    optional double sellmarginvalue = 14; // 卖方保证金设置值
    optional int32 buychargealgorithm = 15; // 买方手续费收取方式1：比率2：固定
    optional double buychargevalue = 16; // 买方手续费设置值
    optional int32 sellchargealgorithm = 17; // 卖方手续费收取方式1：比率2：固定
    optional double sellchargevalue = 18; // 卖方手续费设置值
    optional int32 performancemode = 19; // 履约方式-1:立即执行2:履约模板执行
    optional int64 performancetemplateid = 20; // 履约计划模板id(方式为1时填-1,为2时选择模板)
    optional int32 presalestatus = 21; //  
    optional int32 handlestatus = 22; // 处理状态-
    optional string createtime = 23; // 创建时间
    optional string updatetime = 24; // 更新时间
    optional string startday = 25; // 开始日期
    optional string endday = 26; // 结束日期
    optional double sellerfreezemargin = 27; // 卖方冻结保证金
    optional double sellerfreezecharge = 28; // 卖方冻结手续费
    optional int32 buymarginalgorithm = 29; // 买方保证金方式-1：比率2：固定
    optional double buymarginvalue = 30; // 买方保证金设置值
    optional int32 goodsid = 31; // 拍品id-自增seq_goods确保分润不重复
    optional string goodsdesc = 32; // 商品描述
    optional int32 mintradeqty = 33; // 最小摘牌量
}

message presale_orderapply{ 
    optional int64 applyid = 1; // 预售申请id(seq_presale_orderapply)
    optional string tradedate = 2; // 交易日
    optional int32 selleruserid = 3; // 卖方用户id
    optional int64 selleraccountid = 4; // 卖方资金账号id
    optional int32 marketid = 5; // 市场id
    optional string goodsname = 6; // 商品名称
    optional string goodscode = 7; // 商品代码系统自动生成[#p(2位)+applyid十六进制(6位)]
    optional string unit = 8; // 单位
    optional int32 applyqty = 9; // 申请数量
    optional int32 applystatus = 10; // 申请状态-0:未提交1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败6:已撤销
    optional int32 steppricetype = 11; // 阶梯价类型-1:量增价减
    optional string goodspicurl = 12; // 商品介绍图片
    optional int32 decimalplace = 13; // 价格小数位(最大4位)
    optional string requesttime = 14; // 申请时间
    optional string audittime = 15; // 审核时间
    optional int32 auditid = 16; // 审核人
    optional string remark = 17; // 审核备注
    optional string startday = 18; // 开始日期
    optional string endday = 19; // 结束日期
    optional string goodsdesc = 20; // 商品描述
}

message presale_orderapplyprice{ 
    optional int64 applyid = 1; // 预售申请id
    optional int32 stepindex = 2; // 档位序号
    optional int32 qty = 3; // 档位数量
    optional double price = 4; // 档位价格
    optional string createtime = 5; // 创建时间
    optional string goodscode = 6; // 商品代码系统自动生成[#p(2位)+applyid十六进制(6位)]
    optional int32 marketid = 7; // 市场id
}

message presale_orderdetail{ 
    optional int64 orderid = 1; // 预售委托id(151+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 listingid = 2; // 关联挂牌id
    optional int32 buyorsell = 3; // 买卖-0:买1:卖
    optional string tradedate = 4; // 交易日
    optional int64 accountid = 5; // 资金账号id
    optional int32 orderqty = 6; // 委托数量
    optional int32 tradeqty = 7; // 成交数量
    optional double price = 8; // 价格[摘牌单根据档位]
    optional double freezeamount = 9; // 冻结保证金
    optional double freezecharge = 10; // 冻结手续费
    optional int32 chargealgorithm = 11; // 手续费收取方式1：比率2：固定
    optional double chargevalue = 12; // 手续费设置值
    optional int32 orderstatus = 13; // 委托状态-1:委托中2:委托成功3:委托失败4:已撤销5:已成交6:部成部撤
    optional int32 handlestatus = 14; // 处理状态-
    optional string ordertime = 15; // 委托时间
    optional string clientordertime = 16; // 客户端委托时间
    optional string clientticket = 17; // 客户端流水号
    optional string uuid = 18; // 发起端唯一id
    optional int32 clienttype = 19; //  
    optional int32 retcode = 20; // 错误代码
    optional string updatetime = 21; // 更新时间
    optional string goodscode = 22; // 商品代码系统自动生成[#p(2位)+applyid十六进制(6位)]
    optional int32 marginalgorithm = 23; // 保证金方式-1：比率2：固定
    optional double marginvalue = 24; // 保证金设置值
    optional double unfreezemargin = 25; // 解冻保证金
    optional double unfreezecharge = 26; // 解冻手续费
    optional int32 requestid = 27; // 请求id
    optional int32 marketid = 28; // 市场id
}

message presale_tradedetail{ 
    optional int64 tradeid = 1; // 成交单号(152+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional int64 orderid = 3; // 委托单号
    optional int64 listingid = 4; // 关联挂牌id
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int64 accountid = 6; // 账号id
    optional int32 memberuserid = 7; // 会员id个人投资者需要填写
    optional int64 matchaccountid = 8; // 对手账号id
    optional string tradetime = 9; // 成交时间
    optional double tradeprice = 10; // 成交价格
    optional int32 tradeqty = 11; // 成交数量
    optional double tradeamount = 12; // 成交金额
    optional double charge = 13; // 手续费
    optional int32 handlestatus = 14; // 处理状态-1:待处理2:已处理3:处理失败
    optional int32 chargealgorithm = 15; // 手续费收取方式1：比率2：固定
    optional double chargevalue = 16; // 手续费设置值
    optional int32 ismain = 17; // 是否主单-0:不是1:是[卖方为主单]
    optional int32 isreckoned = 18; // 是否已结算-0:未结算1:已结算
    optional int64 performanceplanid = 19; // 履约计划id
    optional string goodscode = 20; // 商品代码系统自动生成[#p(2位)+applyid十六进制(6位)]
    optional int32 status = 21; // 履约状态-1:未履约2:履约中3:履约完成
    optional double freezeamount = 22; // 冻结保证金-买方按成交价计算卖方按申请时冻结按比率计算
    optional int32 marketid = 23; // 市场id
}

message presale_tradelog{ 
    optional int64 logticket = 1; // 日志id(106+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 funcode = 3; // 功能码
    optional int32 typeid = 4; // 类型id
    optional int32 retcode = 5; // 返回码
    optional int64 accountticket = 6; // 帐号id
    optional int64 orderticket = 7; // 单据id
    optional bytes logcontent = 8; // 日志内容
    optional int32 messagestatus = 9; // 状态-1:待发送2:发送完成
    optional string createtime = 10; // 创建时间
    optional string remark = 11; // 备注
    optional string clientticket = 12; // 客户端id
    optional int32 marketid = 13; // 市场id
}

message quoter{ 
    optional int32 quoterid = 1; // 报价商id(自增id)
    optional string quotername = 2; // 报价商名称
    optional int32 areauserid = 3; // 所属机构id
    optional int32 tradeproperty = 4; // 交易属性
    optional int32 defaultmakerid = 5; // 默认做市商id(userid)
    optional int32 quoterstatus = 6; // 报价商状态-1:正常2:注销
    optional int32 modifierid = 7; // 修改人
    optional string modifytime = 8; // 修改时间
    optional int32 matchmode = 9; // 对手模式:1-经纪会员自接2:按对手关系[收益权用]
}

message quotesourcegroup{ 
    optional int64 autoid = 1; // autoid-seq_quotesourcegroup
    optional string groupcode = 2; // 代码
    optional string groupname = 3; // 名称
    optional int32 summertimegroupid = 4; // 夏令时
}

message quotesourcegrouprunstep{ 
    optional int32 groupid = 1; // 分组id
    optional int32 tradeweekday = 2; //  
    optional int32 sectionid = 3; // 从1开始往下编[0为系统清盘、结算时间]
    optional int32 runstep = 4; // 运行阶段-2:连续交易
    optional int32 startweekday = 5; // 起始周几
    optional string starttime = 6; // 起始时间(hh:mm)
    optional int32 endweekday = 7; // 结束周几
    optional string endtime = 8; // 结束时间(hh:mm)
    optional int32 startflag = 9; // 开始日标识-(-1:上日0:当日1:次日)
    optional int32 endflag = 10; // 结束日标识-(-1:上日0:当日1:次日)
}

message quotesrcconfig{ 
    optional int64 autoid = 1; // autoid(seq_quotesrcconfig)
    optional string configname = 2; // 配置名称
    optional string fromexhqcode = 3; // 行情源交易所代码
    optional string fromgoodshqcode = 4; // 行情源商品代码
    optional int32 hqpriceunitid = 5; // 行情源商品报价单位id
    optional int32 hqcurrencyid = 6; // 行情源商品币种id
    optional int32 fromfield = 7; // 行情取价方式-1:最新价2:买价3:卖价
    optional double hqconvertratio = 8; // 行情转换系数(商品行情价=行情源行情价*行情转换系数)
    optional int32 buyptsub = 9; // 买点差(混合、做市商品需要)
    optional int32 sellptsub = 10; // 卖点差(混合、做市商品需要)
    optional int32 filterptsub = 11; // 滤价点差
    optional int32 pricemovealgorithm = 12; // 升贴水收取方式-1:比率2:固定[价格生成方式-升贴水]
    optional double pricemovevalue = 13; // 升贴水值[价格生成方式-升贴水]
    optional int32 quotegeneratemode = 14; // 行情生成方式-0:非拟合1:拟合
    optional int32 pricegenmode = 15; // 价格生成方式-1:升贴水2:波动率
    optional double volatilityratio = 16; // 波动率系数[价格生成方式-波动率]
    optional string goodscode = 17; // 波动商品代码
    optional string synctimepoint = 18; // 同步时间点(hh:mm,逗号分隔,例:12:30,14:30)
    optional double prereckonprice = 19; // 昨收价-单独维护
    optional double localprereckonprice = 20; // 昨结价(交易商品)
    optional double localprecloseprice = 21; // 昨收价(交易商品)
}

message quotesrcfittingconfig{ 
    optional int32 quotesrcconfigid = 1; // 行情源配置id
    optional string fromexhqcode = 2; // 行情源交易所代码
    optional string fromgoodshqcode = 3; // 行情源商品代码
    optional double priceweight = 4; // 价格权重
    optional double priceratio = 5; // 价格系数
    optional double pricemove = 6; // 升贴水
}

message reckon_agdividedetail{ 
    optional string tradedate = 1; // 交易日
    optional int64 accountid = 2; // 源账户id
    optional int32 goodsid = 3; // 商品id/现货用市场id/交割用仓库id/出入金手续费用渠道id
    optional int32 tradefeetype = 4; // 分润费用类型-101、102...-全部201、202...-会员部分301、302...-交易所部分
    optional int32 areaid = 5; // 分润机构id
    optional int32 areatype = 6; //  
    optional double feeamount = 7; // 费用金额(交易所部分总费用或会员部分总费用)
    optional int32 dividetype = 8; // 分润算法1：比率2：固定3：余下全部
    optional double dividevalue = 9; // 分润值
    optional double divideamount = 10; // 机构分润金额
    optional string creatdate = 11; // 创建时间
    optional int32 accountcurrencyid = 12; // 源账户币种id
    optional int32 parentuserid = 13; //  
    optional int32 memberuserid = 14; //  
    optional int32 relateduserid = 15; // 关联用户id
    optional int32 marketid = 16; // 市场id
    optional int32 totalcount = 17; // 总笔数
}

message reckon_agdividesource{ 
    optional string tradedate = 1; // 交易日
    optional int64 accountid = 2; // 源账户id
    optional int32 goodsid = 3; // 商品id/仓库id
    optional int32 tradefeetype = 4; //  
    optional int32 marketid = 5; // 市场id
    optional double feeamount = 6; // 费用金额
    optional double memberfeeamount = 7; // 会员费用（类型为手续费用)
    optional double exchagefeeamount = 8; // 交易所费用（类型为手续费用)
    optional int32 feealgorithm = 9; // 手续费收取方式1：比率2：固定
    optional double memberchargevalue = 10; // 会员手续费设置值
    optional double exchagechargevalue = 11; // 交易所手续费设置值
    optional int32 memberareaid = 12; // 所属会员(userid)
    optional int32 warehouseid = 13; // 交割单时需要填
    optional int32 dividestatus = 14; // 分成状态-1：未分成2：已分成
    optional string createtime = 15; // 创建时间
    optional int32 accountcurrencyid = 16; // 源账户币种id
    optional int32 parentuserid = 17; //  
    optional int32 memberuserid = 18; //  
    optional int32 relateduserid = 19; // 关联用户id
    optional int32 totalcount = 20; // 总笔数
}

message reckon_dayaccountpp{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional int64 accountid = 2; // 资金账户id
    optional double amount = 3; // 今日履约总金额(未完成履约的总金额)
    optional double buypaidamount = 4; // 今日已冻/已扣金额(作为买方)
    optional double sellreceivedamount = 5; // 今日已收金额(作为卖方)
    optional double buytodayamount = 6; // 今日扣/冻金额(作为买方)
    optional double selltodayamount = 7; // 今日收取金额(作为卖方)
}

message reckon_dayaccounttrade{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional int64 accountid = 2; // 资金账户id
    optional int32 goodsid = 3; // 商品id
    optional int32 marketid = 4; // 市场id
    optional int32 tradeqty = 5; // 今日成交量
    optional int32 openqty = 6; // 今日开仓数量
    optional int32 closeqty = 7; // 今日平仓数量
    optional double tradeamount = 8; // 今日成交金额
    optional double closepl = 9; // 平仓盈亏
    optional double opencharge = 10; // 今日建仓手续费
    optional double closecharge = 11; // 今日平仓手续费
}

message reckon_dayauctioncount{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int32 goodsid = 2; // 拍品id-自增seq_goods
    optional int64 wrfactortypeid = 3; // 仓单要素类型id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 todayqty = 10; // 今日成交量
    optional double todayamount = 11; // 今日成交额
    optional double todaycharge = 12; // 今日手续费
}

message reckon_daybrokeramount{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 userid = 2; // 经纪会员id
    optional int32 currencyid = 3; // 货币id
    optional double currentbalance = 4; // 期末余额
    optional double inamount = 5; // 今日入金金额
    optional double outamount = 6; // 今日出金金额
    optional double paycharge = 7; // 今日手续费支出
    optional double closepl = 8; // 今日平仓盈亏
    optional double reckonpl = 9; // 今日结算盈亏
}

message reckon_daybrokerposition{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 userid = 2; // 经纪会员id
    optional int32 goodsid = 3; // 商品id
    optional int32 buycurpositionqty = 4; // 买当前持仓总数量
    optional double buyinterest = 5; // 买递延费(仓储费)
    optional int32 buyopentotalqty = 6; // 买开仓总数量
    optional int32 buyclosetotalqty = 7; // 买平仓总数量
    optional int32 sellcurpositionqty = 8; // 卖当前持仓数量
    optional double sellinterest = 9; // 卖递延费
    optional int32 sellopentotalqty = 10; // 卖开仓总数量
    optional int32 sellclosetotalqty = 11; // 卖平仓总数量
}

message reckon_daydeliverycount{ 
    optional string reckondate = 1; // 日照日期
    optional int64 accountid = 2; // 账号id
    optional int32 buyorsell = 3; // 方向-0:买1:卖
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional double deliverytotalqty = 5; // 实际总交割数量
    optional double deliverytotalamount = 6; // 实际总交割金额
    optional double deliverytotalcharge = 7; // 总交割手续费[手续费统计双边]
}

message reckon_daydeliverygoodscount{ 
    optional string reckondate = 1; // 日照日期
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 totaldeliverycount = 3; // 今日交割总量
    optional double totaldeliveryamount = 4; // 今日交割总金额
    optional double totaldeliverycharge = 5; // 今日交割手续费
}

message reckon_daydividecount{ 
    optional string tradedate = 1; // 交易日
    optional int32 areaid = 2; // 分润机构id
    optional int32 areatype = 3; //  
    optional int32 accountcurrencyid = 4; // 源账户币种id
    optional int64 areaaccountid = 5; // 机构角色结算资金账号
    optional int32 totalcount = 6; // 总笔数
    optional double totalfee = 7; // 总手续费
    optional double divideamount = 8; // 分成金额
    optional int32 paystatus = 9; // 付款状态-1:待审核2:待付款3:已付款4:待复审
    optional int32 payerid = 10; // 付款人
    optional string paytime = 11; // 付款时间
    optional string remark = 12; // 描述
    optional int32 parentuserid = 13; // 父机构id(二级分润)
    optional int32 parentaccountid = 14; // 父机构结算资金账号(二级分润)
}

message reckon_daydividecountdetail{ 
    optional string tradedate = 1; // 交易日
    optional int32 goodsid = 2; // 商品id/市场id/仓库id/渠道id
    optional int32 areaid = 3; // 分润机构id
    optional int32 areatype = 4; //  
    optional int32 tradefeetype = 5; // 分润费用类型-101、102...-全部201、202...-会员部分301、302...-交易所部分
    optional int32 accountcurrencyid = 6; // 源账户币种id
    optional int64 areaaccountid = 7; // 机构角色结算资金账号
    optional int32 totalcount = 8; // 总笔数
    optional double totalfee = 9; // 总手续费
    optional double divideamount = 10; // 分成金额
    optional int32 marketid = 11; // 市场id
    optional int32 parentuserid = 12; // 父机构id(二级分润)
    optional int64 parentaccountid = 13; // 父机构结算资金账号(二级分润)
    optional int64 serialnumber = 14; // 流水号(175+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 sendstatus = 15; // 发送状态-1:待发送2:发送完成
}

message reckon_daygoodscount{ 
    optional string reckondate = 1; // 日照日期
    optional int32 goodsid = 2; // 商品id
    optional int32 marketid = 3; // 市场id
    optional int32 oribuyholdqty = 4; // 买期初持仓总量
    optional double oribuyholdamount = 5; // 买期初持仓总金额
    optional int32 curbuyholdqty = 6; // 买期末持仓总量
    optional double curbuyholdamount = 7; // 买期末持仓总金额
    optional int32 buyopenqty = 8; // 买今日开仓总量
    optional int32 buycloseqty = 9; // 买今日平仓总量
    optional int32 buyorderlot = 10; // 买总委托笔数
    optional int32 buyorderqty = 11; // 买总委托数量
    optional double buycharge = 12; // 买总手续费
    optional double buyinterest = 13; // 买总递延费
    optional int32 orisellholdqty = 14; // 卖期初持仓总量
    optional double orisellholdamount = 15; // 卖期初持仓总金额
    optional int32 cursellholdqty = 16; // 卖期末持仓总量
    optional double cursellhodamount = 17; // 卖期末持仓总金额
    optional int32 sellopenqty = 18; // 卖今日开仓总量
    optional int32 sellcloseqty = 19; // 卖今日平仓总量
    optional int32 sellorderlot = 20; // 卖总委托笔数
    optional int32 sellorderqty = 21; // 卖总委托数量
    optional double sellcharge = 22; // 卖总手续费
    optional double sellinterest = 23; // 卖总递延费
    optional int32 tradeqty = 24; // 总成交数量
    optional double tradeamount = 25; // 总成交金额
    optional int32 tradelot = 26; // 总成交笔数
    optional int32 holdaccountcount = 27; // 持仓账号个数
    optional int32 orderaccountcount = 28; // 委托账号个数
    optional int32 tradeaccountcount = 29; // 成交账号个数(排除被动单)
}

message reckon_dayholderdetail{ 
    optional int64 tradeid = 1; // 成交单号
    optional string reckondate = 2; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional int32 buyorsell = 3; // 方向-0:买1:卖
    optional int32 marketid = 4; // 市场id
    optional int32 goodsid = 5; // 商品id
    optional int64 accountid = 6; // 账号id
    optional int32 openqty = 7; // 建仓数量
    optional int32 holderqty = 8; // 持仓数量
    optional int32 freezeqty = 9; // 冻结数量
    optional double openprice = 10; // 建仓价格
    optional double holderprice = 11; // 持仓价格(所有权时等于建仓价)
    optional double holderamount = 12; // 持仓金额[商品币种]
    optional double tradeamount = 13; // 成交金额[账户币种]
    optional int32 holderdays = 14; // 剩余冻结天数
    optional double releaseamount = 15; // 释放持仓金额[商品币种]
    optional int32 tradeproperty = 16; // 交易属性
    optional string tradetime = 17; // 交易时间
    optional double reckonprice = 18; // 结算价格
    optional double reckonpl = 19; // 结算盈亏((结算价-持仓价)*持仓数量*合约单位*方向)*汇率
    optional int32 intreckonpl = 20; // 整型盈亏(用于交易结算试算平衡-收益权)
    optional double reckonamount = 21; // 结算金额(结算价*持仓数量*合约单位)*汇率
    optional double interest = 22; // 递延费(103104)
    optional double checkinterest = 23; // 校验递延费(负数)
    optional int32 feealgorithm = 24; // 递延费收取方式1：比率2：固定
    optional double memberfeevalue = 25; // 会员递延费设置值
    optional double exchagefeevalue = 26; // 交易所递延费设置值
    optional double usedmargin = 27; // 结算占用保证金
    optional int32 marginalgorithm = 28; // 保证金收取方式1：比率2：固定
    optional double marginvalue = 29; // 保证金配置值
    optional int32 isreckoned = 30; // 是否结算-0:未结算1:已结算
    optional int32 optiontype = 31; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 32; // 权利金
    optional int32 expiretype = 33; // 行权日类型-1:滚动行权2:固定日行权
    optional int32 expirecycle = 34; // 行权周期(天)-1:滚动行权时填写
    optional string expiredate = 35; // 行权日(yyyymmdd)-2:固定日行权时填写
    optional int32 ispreexercise = 36; // 是否预申报-0:否1:是
    optional double preexerciseprice = 37; // 预申报价格
    optional int32 isconfirmexercise = 38; // 是否确认行权-0:否1:是
    optional double interest2 = 39; // 过夜费-108、109
    optional int32 feealgorithm2 = 40; // 过夜费收取方式1：比率2：固定
    optional double memberfeevalue2 = 41; // 会员过夜费设置值
    optional double exchagefeevalue2 = 42; // 交易所过夜费设置值
    optional int32 accountcurrencyid = 43; // 账户币种id
    optional int32 goodscurrencyid = 44; // 商品币种id
    optional double curexchangerate = 45; // 当前汇率
    optional double reckonpl2 = 46; // 结算盈亏(逐笔)-((结算价-建仓价)*持仓数量*合约单位*方向)*汇率
    optional double holdercredit = 47; // 持仓授信金额-当前
    optional double releaseholdercredit = 48; // 释放持仓授信金额
    optional double interestcharge = 49; // 利息(110)
    optional int32 interestchargealgorithm = 50; // 利息收取方式1：比率2：固定
    optional double interestchargevalue = 51; // 交易所利息设置值
    optional double defercharge = 52; // 递延费2(111,112)
    optional int32 deferchargealgorithm = 53; // 递延费2收取方式1：比率2：固定
    optional double memberdeferchargevalue = 54; // 会员递延费2设置值
    optional double exchagedeferchargevalue = 55; // 交易所递延费2设置值
    optional string tradedate = 56; // 交易日(yyyymmdd)
}

message reckon_daymember{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 userid = 2; // 经纪会员id
    optional int32 investortotalnum = 3; // 交易商开户数量(不含子机构交易商)(待初审、待复审、审核通过)
    optional int32 investortotalnum2 = 4; // 交易商开户数量(含子机构交易商)(待初审、待复审、审核通过)
    optional int32 investortrialnum = 5; // 交易商开户待初审数量(不含子机构交易商)
    optional int32 investortrialnum2 = 6; // 交易商开户待初审数量(含子机构交易商)
    optional int32 investorretrialnum = 7; // 交易商开户待复审数量(不含子机构交易商)
    optional int32 investorretrialnum2 = 8; // 交易商开户待复审数量(含子机构交易商)
    optional int32 investorsignqty = 9; // 交易商签约数量(不含子机构交易商)
    optional int32 investorsignqty2 = 10; // 交易商签约数量(含子机构交易商)
    optional double investorinamount = 11; // 交易商入金金额(不含子机构交易商)
    optional double investorinamount2 = 12; // 交易商入金金额(含子机构交易商)
    optional double investoroutamount = 13; // 交易商出金金额(不含子机构交易商)
    optional double investoroutamount2 = 14; // 交易商出金金额(含子机构交易商)
    optional double investoramount = 15; // 交易商期末余额(不含子机构交易商)
    optional double investoramount2 = 16; // 交易商期末余额(含子机构交易商)
    optional double investorclosepl = 17; // 交易商平仓盈亏(不含子机构交易商)
    optional double investorclosepl2 = 18; // 交易商平仓盈亏(含子机构交易商)
    optional double investorreckonpl = 19; // 交易商结算盈亏(不含子机构交易商)
    optional double investorreckonpl2 = 20; // 交易商结算盈亏(含子机构交易商)
    optional double investorbuydeliveryamount = 21; // 交易商买交收金额(不含子机构交易商)
    optional double investorbuydeliveryamount2 = 22; // 交易商买交收金额(含子机构交易商)
    optional double investorselldeliveryamount = 23; // 交易商卖交收金额(不含子机构交易商)
    optional double investorselldeliveryamount2 = 24; // 交易商卖交收金额(含子机构交易商)
    optional int32 investorbuytradeqty = 25; // 交易商买交易数量(不含子机构交易商)
    optional int32 investorbuytradeqty2 = 26; // 交易商买交易数量(含子机构交易商)
    optional int32 investorselltradeqty = 27; // 交易商卖交易数量(不含子机构交易商)
    optional int32 investorselltradeqty2 = 28; // 交易商卖交易数量(含子机构交易商)
    optional int32 investorbuyholdqty = 29; // 交易商买持仓数量(不含子机构交易商)
    optional int32 investorbuyholdqty2 = 30; // 交易商买持仓数量(含子机构交易商)
    optional int32 investorsellholdqty = 31; // 交易商卖持仓数量(不含子机构交易商)
    optional int32 investorsellholdqty2 = 32; // 交易商卖持仓数量(含子机构交易商)
    optional double investortradefee = 33; // 交易商交易手续费(不含子机构交易商)-101102
    optional double investortradefee2 = 34; // 交易商交易手续费(含子机构交易商)-101102
    optional double investordeliveryfee = 35; // 交易商交收手续费(不含子机构交易商)-105106
    optional double investordeliveryfee2 = 36; // 交易商交收手续费(含子机构交易商)-105106
    optional double investorholdfee = 37; // 交易商递延/持仓过夜费/利息(不含子机构交易商)-103104108109110
    optional double investorholdfee2 = 38; // 交易商递延/持仓过夜费/利息(含子机构交易商)-103104108109110
}

message reckon_daymposition{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 marketid = 2; // 市场id
    optional int64 accountid = 3; // 账号id
    optional int32 goodsid = 4; // 商品id
    optional int32 buyfreezeqty = 5; // 今日买冻结数量
    optional int32 buyunfreezeqty = 6; // 今日买解冻数量
    optional int32 buyopenqty = 7; // 今日买开仓数量
    optional int32 buycloseqty = 8; // 今日买平仓数量
    optional int32 buyotherfreezeqty = 9; // 今日买其它冻结数量
    optional int32 buyotherunfreezeqty = 10; // 今日买其它解冻数量
    optional int32 sellfreezeqty = 11; // 今日卖冻结数量
    optional int32 sellunfreezeqty = 12; // 今日卖解冻数量
    optional int32 sellotherfreezeqty = 13; // 今日卖其它冻结数量
    optional int32 sellotherunfreezeqty = 14; // 今日卖其它解冻数量
    optional int32 sellopenqty = 15; // 今日卖开仓数量
    optional int32 sellcloseqty = 16; // 今日卖平仓数量
    optional string updatetime = 17; // 更新时间
    optional int64 serialnumber = 18; // 流水号(seq_daychange)
    optional int32 sendstatus = 19; // 发送状态-1:待发送2:发送完成
    optional double buyholdamount = 20; // 今日买持仓金额
    optional double sellholdamount = 21; // 今日卖持仓金额
}

message reckon_daymscoreposition{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 marketid = 2; // 市场id
    optional int32 userid = 3; // 用户id
    optional int32 scoretypeid = 4; // 积分类型id
    optional int32 todayincrease = 5; // 今日增加
    optional int32 todaydecrease = 6; // 今日减少
    optional int32 freezescore = 7; // 冻结积分
    optional int32 unfreezescore = 8; // 今日解冻
    optional string updatetime = 9; // 更新时间
    optional int64 serialnumber = 10; // 流水号(seq_daychange)
    optional int32 sendstatus = 11; // 发送状态-1:待发送2:发送完成
}

message reckon_daymtaaccount{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 marketid = 2; // 市场id
    optional int64 accountid = 3; // 资金账户id
    optional int32 currencyid = 4; // 货币id
    optional int32 userid = 5; // 用户id
    optional double freezemarginincrease = 6; // 今日冻结保证金增加
    optional double freezemargindecrease = 7; // 今日冻结保证金减少
    optional double otherfreezemarginincrease = 8; // 今日其他冻结保证金增加
    optional double otherfreezemargindecrease = 9; // 今日其他冻结保证金减少
    optional double freezechargeincrease = 10; // 今日手续费冻结增加
    optional double freezechargedecrease = 11; // 今日手续费冻结减少
    optional double creditincrease = 12; // 今日授信增加
    optional double creditdecrease = 13; // 今日授信减少
    optional double othercreditincrease = 14; // 今日其它授信增加
    optional double othercreditdecrease = 15; // 今日其它授信减少
    optional double outamountfreezeincrease = 16; // 今日出金冻结增加
    optional double outamountfreezedecrease = 17; // 今日出金冻结减少
    optional double inamount = 18; // 今日入金金额(包括三方入金)
    optional double outamount = 19; // 今日出金金额(包括三方出金)
    optional double paycharge = 20; // 今日手续费支出(所有手续费)
    optional double closepl = 21; // 今日平仓盈亏
    optional double transferinamount = 22; // 今日划入金额
    optional double transferoutamount = 23; // 今日划出金额
    optional double otherpay = 24; // 其他支出(全款买入商城买入卖家退货履约支出)
    optional double otherincome = 25; // 其他收入(全款卖出商城卖出买家退货履约收入)
    optional double thirdoutamount = 26; // 今日三方出金
    optional double thirdinamount = 27; // 今日三方入金
    optional double reckonpl = 28; // 今日结算盈亏
    optional double deliveryamountout = 29; // 今日交收货款支出
    optional double deliveryamountin = 30; // 今日交收货款收入
    optional double tradecharge = 31; // 今日交易手续费支出[101,102]
    optional double interestchargeout = 32; // 今日递延费支出[103,104]
    optional double interestchargein = 33; // 今日递延费收入[103,104]
    optional double holdchargeout = 34; // 今日持仓过夜费支出[108,109]
    optional double holdchargein = 35; // 今日持仓过夜费收入[108,109]
    optional double interestout = 36; // 今日利息支出[110]
    optional double deliverycharge = 37; // 今日交收手续费支出[105,106]
    optional double deliverycompensationfeeout = 38; // 今日交收补偿费支出-中江[107]
    optional double deliverycompensationfeein = 39; // 今日交收补偿费收入-中江[107]
    optional string updatetime = 40; // 更新时间
    optional int64 serialnumber = 41; // 流水号(seq_daychange)
    optional int32 sendstatus = 42; // 发送状态-1:待发送2:发送完成
    optional double closepl2 = 43; // 今日平仓盈亏(逐笔)
    optional double reckonpl2 = 44; // 今日结算盈亏(逐笔)-汇总取期末
    optional double paycharge2 = 45; // 今日手续费支出(外部配置)
    optional double defercharge = 46; // 今日递延费2支出[111,112]
}

message reckon_daymtwrposition{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 marketid = 2; // 市场id
    optional int64 accountid = 3; // 资金账号id
    optional int32 goodsid = 4; // 商品id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 wrfactortypeid = 11; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 wruserid = 12; // 持有人id
    optional int32 increaseqty = 13; // 今日增加数量
    optional int32 decreaseqty = 14; // 今日减少数量
    optional int32 freezeqty = 15; // 今日冻结数量
    optional int32 unfreezeqty = 16; // 今日解冻数量
    optional string updatetime = 17; // 更新时间
    optional int64 serialnumber = 18; // 流水号(seq_daychange)
    optional int32 sendstatus = 19; // 发送状态-1:待发送2:发送完成
}

message reckon_daymwrposition{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 marketid = 2; // 市场id
    optional int32 wruserid = 3; // 持有人id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int64 wrfactortypeid = 10; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 increaseqty = 11; // 今日增加数量
    optional int32 decreaseqty = 12; // 今日减少数量
    optional int32 freezeqty = 13; // 今日冻结数量
    optional int32 unfreezeqty = 14; // 今日解冻数量
    optional string updatetime = 15; // 更新时间
    optional int64 serialnumber = 16; // 流水号(seq_daychange)
    optional int32 sendstatus = 17; // 发送状态-1:待发送2:发送完成
    optional int64 accountid = 18; // 帐户id
    optional int32 transfertradewrqty = 19; // 今日转订单数量
}

message reckon_dayorderdetail{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional int64 orderid = 2; // 委托单号(100+yymmddhhmmss+xxxx)
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 buildtype = 4; // 委托单据类型-1:建仓2:平仓3:先平后建
    optional int64 preorderid = 5; // 关联预埋单号(止盈止损单时填写)
    optional int64 cancelorderid = 6; // 撤单单号(撤单时填写)
    optional int64 relatedid = 7; // 关联单号(交割单)
    optional int32 marketid = 8; // 市场id
    optional int32 goodsid = 9; // 商品id
    optional int64 accountid = 10; // 账户id
    optional int32 memberuserid = 11; // 所属会员userid
    optional int32 buyorsell = 12; // 买卖-0:买1:卖
    optional int32 pricemode = 13; // 取价方式-1:市价2:限价
    optional double orderprice = 14; // 委托价格
    optional double marketmaxsub = 15; // 市价最大偏移范围
    optional int32 orderqty = 16; // 委托数量
    optional int32 tradeqty = 17; // 成交数量
    optional int32 cancelqty = 18; // 撤单数量
    optional int32 openqty = 19; // 开仓数量(先建后平操作,需要记录)
    optional int32 closeqty = 20; // 平仓数量(先建后平操作需要记录)
    optional int32 opentradeqty = 21; // 开仓成交数量(先建后平操作,需要记录)
    optional int32 closetradeqty = 22; // 平仓成交数量(先建后平操作,需要记录)
    optional double freezemargin = 23; // 冻结保证金(冻结交易金额)
    optional double unfreezemargin = 24; // 解冻保证金
    optional double freezecharge = 25; // 冻结手续费
    optional double unfreezecharge = 26; // 解冻手续费
    optional double openfreezecharge = 27; // 开仓冻结手续费(先建后平操作,需要记录)
    optional double closefreezecharge = 28; // 平仓冻结手续费(先建后平操作,需要记录)
    optional double openunfreezecharge = 29; // 开仓解冻手续费(先建后平操作,需要记录)
    optional double closeunfreezecharge = 30; // 平仓解冻手续费(先建后平操作,需要记录)
    optional int32 validtype = 31; // 有效类型-1当日有效2本周有效3指定日期有效4一直有效5指定时间有效
    optional string validtime = 32; // 有效期限
    optional int32 volumetype = 33; //  
    optional int32 operatetype = 34; // 操作类型-1:正常下单2:斩仓（风控系统强制平仓）3:转单
    optional string ordertime = 35; // 委托时间
    optional int32 ordersrc = 36; // 委托来源-1:客户端2:风控服务3:管理端4:交割端5:交易服务
    optional int32 orderstatus = 37; //  
    optional int64 operatorid = 38; // 登录账号(loginid)
    optional string updatetime = 39; // 更新时间
    optional string clientordertime = 40; // 客户端委托时间
    optional string clientticket = 41; // 客户端流水号
    optional string uuid = 42; // 发起端唯一id
    optional int32 clienttype = 43; //  
    optional int32 retcode = 44; // 错误代码
    optional int32 tradeproperty = 45; // 交易属性
    optional int32 listingselecttype = 46; // 挂牌点选类型-1:挂牌2:摘牌3:先摘后挂
    optional int32 delistingtype = 47; // 摘牌类型-1:价格最优2:点选成交
    optional int32 marginalgorithm = 48; // 保证金收取方式1：比率2：固定
    optional double marginvalue = 49; // 即市保证金设置值
    optional int32 openfeealgorithm = 50; // 建仓手续费收取方式1：比率2：固定
    optional double openmemberchargevalue = 51; // 建仓会员手续费设置值
    optional double openexchagechargevalue = 52; // 建仓交易所手续费设置值
    optional int32 closefeealgorithm = 53; // 平仓手续费收取方式1：比率2：固定
    optional double closememberchargevalue = 54; // 平仓会员手续费设置值
    optional double closeexchagechargevalue = 55; // 平仓交易所手续费设置值
}

message reckon_dayplateformamount{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int64 taaccounttype = 2; // 外部/内部账号-1:外部账号2:内部账号
    optional double balance = 3; // 期初余额
    optional double orimortgagecredit = 4; // 期初授信金额
    optional double oriothercredit = 5; // 期初其它授信金额
    optional double currentbalance = 6; // 期末余额
    optional double mortgagecredit = 7; // 授信金额
    optional double inamount = 8; // 今日入金金额
    optional double outamount = 9; // 今日出金金额
    optional double creditincrease = 10; // 今日授信增加
    optional double creditdecrease = 11; // 今日授信减少
}

message reckon_dayplateformpp{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional double amount = 2; // 履约总金额(未完成的履约总金额)
    optional double buypaidamount = 3; // 买方已冻/已扣金额
    optional double sellreceivedamount = 4; // 卖方已收金额
    optional double buytodayamount = 5; // 买方今日扣/冻金额
    optional double selltodayamount = 6; // 卖方今日收取金额
}

message reckon_dayposition{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional string reckondate = 3; // 日照日期(yyyymmdd)
    optional int32 buypositionqty = 4; // 买期初持仓数量
    optional double buyholderamount = 5; // 买持仓期初总金额
    optional int32 buycurpositionqty = 6; // 买当前持仓总数量
    optional double buycurholderamount = 7; // 买当前持仓总金额
    optional int32 buyfrozenqty = 8; // 买持仓冻结
    optional int32 buyotherfrozenqty = 9; // 买持仓其他冻结(交割冻结)
    optional int32 buyopenreqqty = 10; // 买开仓申请数量
    optional double buyreckonpl = 11; // 买结算盈亏
    optional double buyinterest = 12; // 买递延费(仓储费)
    optional double buyusedmargin = 13; // 占用保证金
    optional int32 buyopentotalqty = 14; // 买开仓总数量
    optional int32 buyclosetotalqty = 15; // 买平仓总数量
    optional double buyclosetotalpl = 16; // 买平仓总盈亏
    optional int32 sellpositionqty = 17; // 卖期初持仓数量
    optional double sellholderamount = 18; // 卖持仓期初总金额
    optional int32 sellcurpositionqty = 19; // 卖当前持仓数量
    optional double sellcurholderamount = 20; // 卖当前持仓总金额
    optional int32 sellfrozenqty = 21; // 卖持仓冻结
    optional int32 sellotherfrozenqty = 22; // 卖持仓其他冻结(交割冻结)
    optional int32 sellopenreqqty = 23; // 卖开仓申请数量
    optional double sellreckonpl = 24; // 卖结算盈亏
    optional double sellinterest = 25; // 卖递延费
    optional double sellusedmargin = 26; // 卖占用保证金-作废
    optional int32 sellopentotalqty = 27; // 卖开仓总数量
    optional int32 sellclosetotalqty = 28; // 卖平仓总数量
    optional double sellclosetotalpl = 29; // 卖平仓总盈亏
    optional int32 tradeproperty = 30; // 交易属性
    optional int32 marginalgorithm = 31; // 保证金收取方式-1：比率2：固定
    optional double marginvalue = 32; // 保证金设置值(投资管理系统-多longmarginvalue)
    optional int32 buyfeealgorithm = 33; // 买递延费收取方式-1:比率2:固定
    optional double buymemberfeevalue = 34; // 买会员递延费设置值
    optional double buyexchagefeevalue = 35; // 买交易所递延费设置值
    optional int32 sellfeealgorithm = 36; // 卖递延费收取方式-1:比率2:固定
    optional double sellmemberfeevalue = 37; // 卖会员递延费设置值
    optional double sellexchagefeevalue = 38; // 卖交易所递延费设置值
    optional double interest2 = 39; // 过夜费
    optional int32 accountcurrencyid = 40; // 账户币种id
    optional int32 goodscurrencyid = 41; // 商品币种id
    optional double curexchangerate = 42; // 当前汇率
    optional double buyreckonpl2 = 43; // 买结算盈亏(逐笔)-根据持仓单日照表字段汇率
    optional double sellreckonpl2 = 44; // 结算盈亏(逐笔)-根据持仓单日照表字段汇率
    optional int32 buycurtdposition = 45; // 买期末今日头寸
    optional int32 buyfretdposition = 46; // 买冻结今日头寸
    optional int32 sellcurtdposition = 47; // 卖期末今日头寸
    optional int32 sellfretdposition = 48; // 卖冻结今日头寸
    optional double interestcharge = 49; // 利息(110)
    optional double shortmarginvalue = 50; // 保证金设置值(投资管理系统-空)
    optional double buydefercharge = 51; // 买递延费2(仓储费2)
    optional double selldefercharge = 52; // 卖递延费2
}

message reckon_daytaaccount{ 
    optional int64 accountid = 1; // 资金账户id
    optional string reckondate = 2; // 日照日期(yyyymmdd)
    optional int32 userid = 3; // 用户id
    optional int32 currencyid = 4; // 货币id
    optional int32 changeflag = 5; //  
    optional string password = 6; // 资金密码
    optional int32 tradestatus = 7; // 交易状态-1:正常2:受限3:冻结4:禁止建仓(人工受限)5:禁止交易(人工冻结)
    optional int32 signstatus = 8; // 签约状态-1:未签约2:已签约3:已解约
    optional int32 ismain = 9; // 是否账号0:不是母账户1:是母账户
    optional int64 parentaccountid = 10; // 所属母账号
    optional int32 relateuserid = 11; // 关联用户
    optional int32 relatedaccountstatus = 12; // 关联用户交易状态-1:正常(可交易)2:受限(可平仓，不可建仓)3:冻结(不可交易)
    optional int64 taaccounttype = 13; // 外部/内部账号-1:外部账号2:内部账号
    optional int32 isreckonaccount = 14; // 是否机构分润账号0:不是1:是
    optional int32 ismarketaccount = 15; // 是否机构接单账号0:不是1:是
    optional double balance = 16; // 期初余额
    optional double orifreezemargin = 17; // 期初冻结保证金
    optional double oriusedmargin = 18; // 期初占用保证金
    optional double oriotherfreezemargin = 19; //  
    optional double orifreezecharge = 20; // 期初手续费冻结
    optional double orimortgagecredit = 21; // 期初授信金额
    optional double oriothercredit = 22; // 期初其它授信金额
    optional double orioutamountfreeze = 23; // 期初出金冻结
    optional double currentbalance = 24; // 期末余额
    optional double freezemargin = 25; // 冻结保证金
    optional double usedmargin = 26; // 占用保证金
    optional double otherfreezemargin = 27; // 其他冻结保证金(出金冻结资金交割买方冻结申购冻结全款买入商城买入)
    optional double freezecharge = 28; // 手续费冻结
    optional double mortgagecredit = 29; // 授信金额
    optional double othercredit = 30; // 其它授信金额
    optional double outamountfreeze = 31; // 出金冻结
    optional double inamount = 32; // 今日入金金额
    optional double outamount = 33; // 今日出金金额
    optional double paycharge = 34; // 今日手续费支出
    optional double closepl = 35; // 今日平仓盈亏
    optional double reckonpl = 36; // 今日结算盈亏
    optional double creditincrease = 37; // 今日授信增加
    optional double creditdecrease = 38; // 今日授信减少
    optional double othercreditincrease = 39; // 今日其它授信增加
    optional double othercreditdecrease = 40; // 今日其它授信减少
    optional double otherpay = 41; // 其他支出(交割付款申购付款全款买入商城买入卖家退货)
    optional double otherincome = 42; // 其他收入(交割收款申购收款全款卖出商城卖出买家退货会员手续费收入)
    optional double transferamount = 43; // 今日划转金额(母子账号资金划转，从账号划入为正，从账号划出为负)
    optional double outthreshold = 44; // 出金阈值
    optional double clearbalance = 45; // 清算余额=期末余额-授信金额-其它授信金额
    optional double dividedcharge = 46; // 今日已收手续费分成
    optional double payexchcharge = 47; // 今日应付交易所手续费
    optional double clearpl = 48; //  
    optional double thirdinamount = 49; // 今日三方入金
    optional double tradecharge = 50; // 今日交易手续费支出[101,102]
    optional double interestcharge = 51; // 今日递延费支出[103,104]
    optional double deliverycharge = 52; // 今日交收手续费支出[105,106]
    optional double holdcharge = 53; // 今日持仓过夜费支出[108,109,110]
    optional double thirdoutamount = 54; // 今日三方出金
    optional int32 tradeqty = 55; // 今日成交量
    optional double tradeamount = 56; // 今日成交金额
    optional double deliveryamountout = 57; // 今日交收货款支出
    optional double deliveryamountin = 58; // 今日交收货款收入
    optional double deliverycompensationfeeout = 59; // 今日交收补偿费支出
    optional double deliverycompensationfeein = 60; // 今日交收补偿费收入
    optional double capitalbalance = 61; // 本金余额[外部子账户实际出入金余额]
    optional double closepl2 = 62; // 平仓盈亏(逐笔)
    optional double reckonpl2 = 63; // 结算盈亏(逐笔)-汇总取期末
    optional double netvalue = 64; // 净值=期末余额+所有权市值+仓单市值仓单市值由统计服务更新
    optional double paycharge2 = 65; // 今日手续费支出(外部配置)
    optional double defercharge = 66; // 今日递延费2支出[111,112]
    optional int64 rootaccountid = 67; // 所属根账户
    optional string sublevelpath = 68; // 账号层级路径(逗号分隔,首尾加逗号)
    optional double ownershipvalue = 69; // 所有权市值
    optional double spotvalue = 70; // 现货市值-统计服务更新
    optional double accountpl = 71; //  
}

message reckon_daytaaccountcur{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 currencyid = 2; // 货币id
    optional string reckondate = 3; // 日照日期(yyyymmdd)
    optional int32 userid = 4; // 用户id
    optional int32 relateduserid = 5; // 关联用户
    optional double usedmargin = 6; // 占用保证金
    optional double freezemargin = 7; // 冻结保证金
    optional double freezecharge = 8; // 手续费冻结
    optional double capitalbalance = 9; // 本金余额[外部子账户实际出入金余额]
    optional double paycharge = 10; // 今日手续费支出
    optional double closepl = 11; // 今日平仓盈亏(盯市)
    optional double reckonpl = 12; // 今日结算盈亏(盯市)
    optional double closepl2 = 13; // 今日平仓盈亏(逐笔)
    optional double reckonpl2 = 14; // 今日结算盈亏(逐笔)
    optional double paycharge2 = 15; // 今日手续费支出(外部配置)
    optional double exchangerate = 16; // 汇率
}

message reckon_daytradewrcount{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 goodsid = 3; // 交易合约id(默认为0，不为0的为仓单转持仓的头寸)
    optional int64 wrfactortypeid = 4; // 仓单要素类型id
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 10; // 总数量
    optional int32 freezeqty = 11; // 总冻结数量
    optional int32 increaseqty = 12; // 今日增加数量
    optional int32 decreaseqty = 13; // 今日减少数量
    optional int32 deliveryqty = 14; // 今日交割数量
    optional int32 transferwrqty = 15; // 今日转仓单数量
}

message reckon_daytradewrposition{ 
    optional string reckondate = 1; // 日照日期
    optional int64 wrpositionid = 2; // 订单仓单头寸id(206+unix秒时间戳(10位)+xxxxxx)
    optional int32 wruserid = 3; // 持有人id
    optional int64 accountid = 4; // 资金账号id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int32 goodsid = 6; // 交易合约id(默认为0，不为0的为仓单转持仓的头寸)
    optional int64 wrfactortypeid = 7; // 仓单要素类型id
    optional int32 brandid = 8; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 9; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 10; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 11; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 12; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 13; // 总数量
    optional int32 increaseqty = 14; // 今日增加数量
    optional int32 decreaseqty = 15; // 今日减少数量
    optional int32 freezeqty = 16; // 总冻结数量
    optional int32 relatedqty = 17; // 关联数量
    optional string modifytime = 18; // 修改时间
    optional int32 modifierid = 19; // 修改人
    optional int32 deliveryqty = 20; // 今日交割数量
    optional int32 transferwrqty = 21; // 今日转仓单数量
}

message reckon_daytwrdetailcount{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int32 wruserid = 2; // 持有人id
    optional int64 accountid = 3; // 资金账号id
    optional int32 goodsid = 4; // 交易合约id(默认为0，不为0的为仓单转持仓的头寸)
    optional int32 wrfactortypeid = 5; // 仓单要素类型id
    optional int32 qtytype = 6; // 数量类型-1:今日买交割数量2:今日卖交割数量3:今日转仓单数量
    optional int32 qty = 7; // 数量值
    optional int32 deliverygoodsid = 8; // 交割商品id
    optional int32 brandid = 9; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 10; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 11; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 12; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 13; // 月份id(1交割品种升贴水参数表autoid)
}

message reckon_dayuserscore{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)日照日期(yyyymmdd)
    optional int32 userid = 2; // 用户id
    optional int32 scoretypeid = 3; // 积分类型id
    optional int32 oriscore = 4; // 期初积分
    optional int32 curscore = 5; // 当前积分
    optional int32 freezescore = 6; // 冻结积分
    optional int32 todaydecrease = 7; // 今日减少
    optional int32 todayincrease = 8; // 今日增加
    optional int32 withholdsocre = 9; // 代扣积分[积分服务商]
}

message reckon_daywrcount{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int64 wrfactortypeid = 3; // 仓单要素类型id
    optional int32 brandid = 4; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 6; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 7; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 8; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 9; // 总数量
    optional int32 freezeqty = 10; // 总冻结数量
    optional int32 increaseqty = 11; // 今日增加数量
    optional int32 decreaseqty = 12; // 今日减少数量
    optional int32 transfertradewrqty = 13; // 今日转订单数量
    optional int32 pickupqty = 14; // 今日提货数量
    optional int32 tradewrqty = 15; // 订单仓单头寸总数量-期末
}

message reckon_daywrdetailcount{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int32 wruserid = 2; // 持有人id
    optional int64 wrfactortypeid = 3; // 仓单要素类型id
    optional int32 qtytype = 4; // 数量类型-1:今日转订单数量2:今日提货数量3:今日注册数量
    optional int32 qty = 5; // 数量值
    optional int32 deliverygoodsid = 6; // 交割商品id
    optional int32 brandid = 7; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 8; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 9; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 10; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 11; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 accountid = 12; // 帐户id
}

message reckon_daywrposition{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int64 wrpositionid = 2; // 仓单头寸id(201+unix秒时间戳(10位)+xxxxxx)
    optional int32 wruserid = 3; // 持有人id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 11; // 总数量
    optional int32 increaseqty = 12; // 今日增加数量
    optional int32 decreaseqty = 13; // 今日减少数量
    optional int32 freezeqty = 14; // 总冻结数量
    optional int32 relatedqty = 15; // 关联数量
    optional string modifytime = 16; // 修改时间
    optional int32 modifierid = 17; // 修改人
    optional int32 transfertradewrqty = 18; // 今日转订单数量
    optional int32 tradewrqty = 19; // 订单仓单头寸总数量
    optional int32 pickupqty = 20; // 今日提货数量
    optional int64 accountid = 21; // 帐户id
    optional double marketvalue = 22; // 市值
}

message reckon_divideconfig{ 
    optional int64 autoid = 1; // 自增id
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 marketid = 3; // 市场id(此项为0时，为通用设置)
    optional int32 goodsid = 4; // 商品id(此项为0时，为通用设置)
    optional int32 areaid = 5; // 分润机构id
    optional int32 areatype = 6; //  
    optional int32 tradefeeid = 7; //  
    optional int32 dividetype = 8; // 分配算法-1:比率2:固定3:余下全部
    optional double dividevalue = 9; // 分润值
}

message reckon_divideorderdetail{ 
    optional string tradedate = 1; // 交易日
    optional int64 tradeid = 2; // 成交单号
    optional int32 buyorsell = 3; // 买卖方向-0:买1:卖
    optional int32 tradefeetype = 4; //  
    optional int32 areaid = 5; // 分润机构id
    optional int32 areatype = 6; //  
    optional int32 goodsid = 7; // 商品id/现货类用市场id
    optional int64 areaaccountid = 8; // 机构角色结算资金账号
    optional int64 accountid = 9; // 源账户id
    optional double feeamount = 10; // 费用金额(交易所部分总费用或会员部分总费用)
    optional int32 dividetype = 11; // 分润算法1：比率2：固定3：余下全部
    optional double dividevalue = 12; // 分润值
    optional double divideamount = 13; // 机构分润金额
    optional string creatdate = 14; // 创建时间
    optional int32 marketid = 15; // 市场id
}

message reckon_dividesource{ 
    optional int64 tradeid = 1; // 成交单号
    optional int32 tradefeetype = 2; //  
    optional int32 buyorsell = 3; // 买卖方向-0:买1:卖
    optional string tradedate = 4; // 交易日
    optional int64 accountid = 5; // 源账户id
    optional int32 marketid = 6; // 市场id
    optional int32 goodsid = 7; // 商品id/仓库id
    optional double feeamount = 8; // 费用金额
    optional double memberfeeamount = 9; // 会员费用（类型为手续费用)
    optional double exchagefeeamount = 10; // 交易所费用（类型为手续费用)
    optional int32 feealgorithm = 11; // 手续费收取方式1：比率2：固定
    optional double memberchargevalue = 12; // 会员手续费设置值
    optional double exchagechargevalue = 13; // 交易所手续费设置值
    optional int32 memberareaid = 14; // 所属会员(userid)
    optional int32 warehouseid = 15; // 交割单时需要填
    optional int32 matchaccountid = 16; // 交割单时需要填
    optional int32 dividestatus = 17; // 分成状态-1：未分成2：已分成
    optional string createtime = 18; // 创建时间
}

message reckon_erms_dayexposure{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 userid = 2; // 机构用户id
    optional int32 middlegoodsid = 3; // 中间品种id
    optional double spotqty = 4; // 现货数量(a)
    optional double spotamount = 5; // 现货估值
    optional double safespotqty = 6; // 现货已套保数量(b)
    optional double futureqty = 7; // 期货应套保数量(c)
    optional double safefutureqty = 8; // 期货已套保数量(d)
    optional double spotexposure = 9; // 现货敞口(a-b)
    optional double futureexposure = 10; // 期货敞口(c-d)
    optional double totalexposure = 11; // 总敞口(a-b+c-d)
    optional int32 exposurerisk = 12; // 敞口风险-0:正常1:不正常
}

message reckon_erms_dgconvertsum{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int64 accountid = 2; // 资金账户id
    optional int32 middlegoodsid = 3; // 中间品种id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 spotposition = 10; // 现货头寸
    optional double spotqty = 11; // 现货头寸折算数量
    optional double spotamount = 12; // 现货估值
}

message reckon_erms_gconvertsum{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int64 accountid = 2; // 资金账户id
    optional int32 middlegoodsid = 3; // 中间品种id
    optional int32 goodsid = 4; // 交易商品id
    optional int32 taaccounttype = 5; // 外部/内部账号-1:外部账号2:内部账号3内部做市自营4内部做市接单
    optional int32 buyposition = 6; // 买头寸
    optional int32 sellposition = 7; // 卖头寸
    optional double convertqty = 8; // 折算数量
}

message reckon_erms_positionsum{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional string reckondate = 3; // 日照日期(yyyymmdd)
    optional int32 buypositionqty = 4; // 买期初持仓数量
    optional double buyholderamount = 5; // 买持仓期初总金额
    optional int32 buycurpositionqty = 6; // 买当前持仓总数量
    optional double buycurholderamount = 7; // 买当前持仓总金额
    optional int32 buyfrozenqty = 8; // 买持仓冻结
    optional int32 buyotherfrozenqty = 9; // 买持仓其他冻结(交割冻结)
    optional int32 buyopenreqqty = 10; // 买开仓申请数量
    optional double buyreckonpl = 11; // 买结算盈亏
    optional double buyinterest = 12; // 买递延费(仓储费)
    optional double buyusedmargin = 13; // 占用保证金
    optional int32 buyopentotalqty = 14; // 买开仓总数量
    optional int32 buyclosetotalqty = 15; // 买平仓总数量
    optional double buyclosetotalpl = 16; // 买平仓总盈亏
    optional int32 sellpositionqty = 17; // 卖期初持仓数量
    optional double sellholderamount = 18; // 卖持仓期初总金额
    optional int32 sellcurpositionqty = 19; // 卖当前持仓数量
    optional double sellcurholderamount = 20; // 卖当前持仓总金额
    optional int32 sellfrozenqty = 21; // 卖持仓冻结
    optional int32 sellotherfrozenqty = 22; // 卖持仓其他冻结(交割冻结)
    optional int32 sellopenreqqty = 23; // 卖开仓申请数量
    optional double sellreckonpl = 24; // 卖结算盈亏
    optional double sellinterest = 25; // 卖递延费
    optional int32 sellopentotalqty = 26; // 卖开仓总数量
    optional int32 sellclosetotalqty = 27; // 卖平仓总数量
    optional double sellclosetotalpl = 28; // 卖平仓总盈亏
    optional int32 tradeproperty = 29; // 交易属性
    optional double interest2 = 30; // 过夜费
    optional int32 accountcurrencyid = 31; // 账户币种id
    optional int32 goodscurrencyid = 32; // 商品币种id
    optional double curexchangerate = 33; // 当前汇率
    optional double buyreckonpl2 = 34; // 买结算盈亏(逐笔)-根据持仓单日照表字段汇率
    optional double sellreckonpl2 = 35; // 结算盈亏(逐笔)-根据持仓单日照表字段汇率
    optional int32 buycurtdposition = 36; // 买期末今日头寸
    optional int32 buyfretdposition = 37; // 买冻结今日头寸
    optional int32 sellcurtdposition = 38; // 卖期末今日头寸
    optional int32 sellfretdposition = 39; // 卖冻结今日头寸
    optional double interestcharge = 40; // 利息(110)
    optional double buydefercharge = 41; // 买递延费2(仓储费2)
    optional double selldefercharge = 42; // 卖递延费2
}

message reckon_erms_taaccountsum{ 
    optional int64 accountid = 1; // 资金账户id
    optional string reckondate = 2; // 日照日期(yyyymmdd)
    optional int32 userid = 3; // 用户id
    optional int32 currencyid = 4; // 货币id
    optional int32 ismain = 5; // 是否母账号0:不是母账户1:是母账户
    optional int64 parentaccountid = 6; // 所属母账号
    optional int32 relateuserid = 7; // 关联用户
    optional int32 taaccounttype = 8; // 外部/内部账号-1:外部账号2:内部账号3内部做市自营4内部做市接单
    optional int32 isreckonaccount = 9; // 是否机构分润账号0:不是1:是
    optional int32 ismarketaccount = 10; // 是否机构接单账号0:不是1:是
    optional double balance = 11; // 期初余额
    optional double orifreezemargin = 12; // 期初冻结保证金
    optional double oriusedmargin = 13; // 期初占用保证金
    optional double oriotherfreezemargin = 14; //  
    optional double orifreezecharge = 15; // 期初手续费冻结
    optional double orimortgagecredit = 16; // 期初授信金额
    optional double oriothercredit = 17; // 期初其它授信金额
    optional double orioutamountfreeze = 18; // 期初出金冻结
    optional double currentbalance = 19; // 期末余额
    optional double freezemargin = 20; // 冻结保证金
    optional double usedmargin = 21; // 占用保证金
    optional double otherfreezemargin = 22; // 其他冻结保证金(出金冻结资金交割买方冻结申购冻结全款买入商城买入)
    optional double freezecharge = 23; // 手续费冻结
    optional double mortgagecredit = 24; // 授信金额
    optional double othercredit = 25; // 其它授信金额
    optional double outamountfreeze = 26; // 出金冻结
    optional double inamount = 27; // 今日入金金额
    optional double outamount = 28; // 今日出金金额
    optional double paycharge = 29; // 今日手续费支出
    optional double closepl = 30; // 今日平仓盈亏
    optional double reckonpl = 31; // 今日结算盈亏
    optional double creditincrease = 32; // 今日授信增加
    optional double creditdecrease = 33; // 今日授信减少
    optional double othercreditincrease = 34; // 今日其它授信增加
    optional double othercreditdecrease = 35; // 今日其它授信减少
    optional double otherpay = 36; // 其他支出(交割付款申购付款全款买入商城买入卖家退货)
    optional double otherincome = 37; // 其他收入(交割收款申购收款全款卖出商城卖出买家退货会员手续费收入)
    optional double transferamount = 38; // 今日划转金额(母子账号资金划转，从账号划入为正，从账号划出为负)
    optional double outthreshold = 39; // 出金阈值
    optional double clearbalance = 40; // 清算余额=期末余额-授信金额-其它授信金额
    optional double dividedcharge = 41; // 今日已收手续费分成
    optional double payexchcharge = 42; // 今日应付交易所手续费
    optional double clearpl = 43; //  
    optional double thirdinamount = 44; // 今日三方入金
    optional double tradecharge = 45; // 今日交易手续费支出[101,102]
    optional double interestcharge = 46; // 今日递延费支出[103,104]
    optional double deliverycharge = 47; // 今日交收手续费支出[105,106]
    optional double holdcharge = 48; // 今日持仓过夜费支出[108,109,110]
    optional double thirdoutamount = 49; // 今日三方出金
    optional int32 tradeqty = 50; // 今日成交量
    optional double tradeamount = 51; // 今日成交金额
    optional double deliveryamountout = 52; // 今日交收货款支出
    optional double deliveryamountin = 53; // 今日交收货款收入
    optional double deliverycompensationfeeout = 54; // 今日交收补偿费支出
    optional double deliverycompensationfeein = 55; // 今日交收补偿费收入
    optional double capitalbalance = 56; // 本金余额[外部子账户实际出入金余额]
    optional double closepl2 = 57; // 平仓盈亏(逐笔)
    optional double reckonpl2 = 58; // 结算盈亏(逐笔)-汇总取期末
    optional double netvalue = 59; // 净值=期末余额+所有权市值+仓单市值
    optional double paycharge2 = 60; // 今日手续费支出(外部配置)
    optional double defercharge = 61; // 今日递延费2支出[111,112]
    optional int64 rootaccountid = 62; // 所属根账户
    optional string sublevelpath = 63; // 账号层级路径(逗号分隔,首尾加逗号)
    optional double ownershipvalue = 64; // 所有权市值
    optional double spotvalue = 65; // 现货市值-统计服务更新
    optional double accountpl = 66; //  
}

message reckon_erms_wrpositionsum{ 
    optional string reckondate = 1; // 日照时期(yyyymmdd)
    optional int32 accountid = 2; // 帐户id
    optional int32 deliverygoodsid = 3; // 交割商品id
    optional int32 brandid = 4; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 6; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 7; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 8; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 9; // 总数量
    optional int32 increaseqty = 10; // 今日增加数量
    optional int32 decreaseqty = 11; // 今日减少数量
    optional int32 freezeqty = 12; // 总冻结数量
    optional int32 relatedqty = 13; // 关联数量
    optional int32 transfertradewrqty = 14; // 今日转订单数量
    optional int32 tradewrqty = 15; // 订单仓单头寸总数量
    optional int32 pickupqty = 16; // 今日提货数量
    optional double marketvalue = 17; // 市值
    optional int32 wrfactortypeid = 18; // 仓单要素类型id
    optional int32 wruserid = 19; // 持有人id
}

message reckon_exchaccchangedetail{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int64 exchaccountid = 2; // 交易所账户id
    optional int32 accoperateid = 3; // 账户操作id
    optional int32 operatetype = 4; // 资金变更类型
    optional int32 opamounttype = 5; // 操作资金类型
    optional double changeamount = 6; // 变动金额
    optional int32 status = 7; // 记录状态
}

message reckon_fundhandle{ 
    optional string reckondate = 1; // 日照日期(yyyymmdd)
    optional int32 marketid = 2; // 市场id
    optional int64 accountid = 3; // 资金账户id
    optional int32 currencyid = 4; // 货币id
    optional int32 userid = 5; // 用户id
    optional double reckonpl = 6; // 今日结算盈亏
    optional double interestchargeout = 7; // 今日递延费支出[103,104]
    optional double interestchargein = 8; // 今日递延费收入[103,104]
    optional double holdchargeout = 9; // 今日持仓过夜费支出[108,109]
    optional double holdchargein = 10; // 今日持仓过夜费收入[108,109]
    optional double deliverycompensationfeeout = 11; // 今日交收补偿费支出-中江[107]
    optional double deliverycompensationfeein = 12; // 今日交收被偿费收入-中江[107]
    optional string updatetime = 13; // 更新时间
    optional int64 serialnumber = 14; // 流水号(seq_daychange)
    optional int32 sendstatus = 15; // 发送状态-1:待发送2:发送完成
}

message reckon_hedgeoutcheck{ 
    optional int64 checkid = 1; // checkid(116+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 outtradeid = 3; // 外部成交单id
    optional int64 mhpinnertradeid = 4; // 接口平台成交单id
    optional string hedgeaccountcode = 5; // 对冲账号
    optional int32 marketid = 6; // 市场id
    optional int32 hedgegoodsid = 7; // 对冲合约id
    optional int32 buyorsell = 8; // 买卖方向-0:买1:卖
    optional int32 channelbuildtype = 9; // 开平标志-0:无1:建仓2:平仓
    optional int32 closetype = 10; // 平仓方式-0:无1:平今2:平昨
    optional double tradeprice = 11; // 成交价格
    optional int32 tradeqty = 12; // 成交数量
    optional string tradetime = 13; // 成交时间
    optional int64 mhptradeid = 14; // 平台成交单号
    optional string mhpinstrumentid = 15; // 合约代码
    optional int32 mhpbuyorsell = 16; // 买卖方向-0:买1:卖
    optional double mhptradeprice = 17; // 平台成交价格
    optional int32 mhptradeqty = 18; // 平台成交数量
    optional string mhptradetime = 19; // 平台成交时间
    optional int32 handlestatus = 20; // 处理状态-1:未处理2:处理失败3:处理成功4:正确数据不需调整
    optional int64 accountid = 21; // 资金账号[外部母账户]
    optional int32 checkstatus = 22; // 检查状态-1:交易缺失2:数据不一致3:平台缺失
}

message reckon_hprocesslog{ 
    optional int32 nodeid = 1; // 节点id
    optional int32 marketid = 2; //  
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 accountid = 4; // 母账户id
    optional int32 parentid = 5; // 父节点id
    optional string curnode = 6; // 当前节点由各结算服务写入,市场结算前缀加上市场名称
    optional int32 nodestatus = 7; // 节点状态-1.未执行2.进行中3.成功4.失败
    optional int32 canback = 8; // 节点是否可回退-0:不可回退1:可回退
    optional int32 errcode = 9; // 错误码
    optional string errdesc = 10; // 错误描述
    optional int64 detailid = 11; // 日志流水id
    optional string updatetime = 12; // 更新时间
}

message reckon_hprocesslogdetail{ 
    optional int64 autoid = 1; // 自增id(seq_reckon_hprocesslogdetail)
    optional int32 nodeid = 2; // 节点id
    optional int32 marketid = 3; //  
    optional int64 accountid = 4; // 母账户id
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int32 nodestatus = 6; // 节点状态-1.未执行2.进行中3.成功4.失败
    optional int32 errcode = 7; // 错误码
    optional string errdesc = 8; // 错误描述
    optional string starttime = 9; // 开始时间
    optional string endtime = 10; // 结束时间
    optional string createtime = 11; // 创建时间
}

message reckon_mhptradedetail{ 
    optional string tradedate = 1; // 交易日(yyyymmdd)
    optional int64 mhptradeid = 2; // 平台成交单号
    optional int64 accountid = 3; // 资金账号[外部母账户]
    optional string cda = 4; // 创建时间
    optional string mda = 5; // 最后修改时间
    optional string instrumentid = 6; // 合约代码
    optional int32 buyorsell = 7; // 买卖方向-0:买1:卖
    optional double price = 8; // 价格
    optional int32 volume = 9; // 数量
    optional int32 buildtype = 10; // 开平标志-0:无1:建仓2:平仓
    optional int32 closetype = 11; // 平仓方式-0:无1:平今2:平昨
    optional int32 checkstatus = 12; // 检查状态-1:未检查2:已检查-[暂不使用]
    optional int64 mhporderid = 13; // 平台关联委托单号
    optional int64 clientorderid = 14; // 客户端关联委托单号
}

message reckon_msglog{ 
    optional int64 autoid = 1; // 自增id
    optional int32 marketid = 2; // 市场id
    optional int32 funcode = 3; // 功能码
    optional int32 typeid = 4; // 类型id
    optional int32 retcode = 5; // 返回码
    optional int64 accountticket = 6; // 帐号id
    optional int64 orderticket = 7; // 单据id
    optional bytes logcontent = 8; // 日志内容
    optional int32 messagestatus = 9; // 状态-1:待发送2:发送完成
    optional string createtime = 10; // 创建时间
    optional string remark = 11; // 备注
    optional string clientticket = 12; // 客户端id
}

message reckon_pricelog{ 
    optional string tradedate = 1; // 交易日
    optional int32 goodsid = 2; // 商品id
    optional string reckontime = 3; // 结算时间
    optional double lastreckonprice = 4; // 上日结算价
    optional double reckonprice = 5; // 今日结算价
    optional double updownrate = 6; // 今日涨跌幅
    optional int32 updownflag = 7; // 连续涨跌停标志-0:无涨跌停-1:跌停1:涨停
    optional int32 updowncount = 8; //  
    optional double updownrate_2d = 9; // 连续两日涨跌幅
    optional double updownrate_3d = 10; // 连续三日涨跌幅
    optional string nexttrade = 11; // 下个交易日
    optional double nextuplimitprice = 12; // 下个交易日涨停价
    optional double nextdnlimitprice = 13; // 下个交易日跌停价
    optional int32 totalholderqty = 14; // 总持仓数
    optional int32 totalstock = 15; // 总库存
}

message reckon_processlog{ 
    optional int32 nodeid = 1; // 节点id
    optional int32 marketid = 2; //  
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 parentid = 4; // 父节点id
    optional string curnode = 5; // 当前节点由各结算服务写入,市场结算前缀加上市场名称
    optional int32 nodestatus = 6; // 节点状态-1.未执行2.进行中3.成功4.失败
    optional int32 canback = 7; // 节点是否可回退-0:不可回退1:可回退
    optional int32 errcode = 8; // 错误码
    optional string errdesc = 9; // 错误描述
    optional int32 detailid = 10; // 日志流水id
    optional string updatetime = 11; // 更新时间
}

message reckon_processlogdetail{ 
    optional int64 autoid = 1; // 自增id
    optional int32 nodeid = 2; // 节点id
    optional int32 marketid = 3; //  
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 nodestatus = 5; // 节点状态-1.未执行2.进行中3.成功4.失败
    optional int32 errcode = 6; // 错误码
    optional string errdesc = 7; // 错误描述
    optional string starttime = 8; // 开始时间
    optional string endtime = 9; // 结束时间
    optional string createtime = 10; // 创建时间
}

message reckon_stagepricelog{ 
    optional string tradedate = 1; // 交易日
    optional int32 goodsid = 2; // 商品id
    optional string reckontime = 3; // 盘中处理时间(hh:mm)
    optional double curprice = 4; // 当前行情价
}

message reckon_stageprocesslog{ 
    optional int32 nodeid = 1; // 节点id
    optional int32 marketid = 2; //  
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional string reckontime = 4; // 盘中处理时间(hh:mm)
    optional int32 parentid = 5; // 父节点id
    optional string curnode = 6; // 当前节点由各结算服务写入,市场结算前缀加上市场名称
    optional int32 nodestatus = 7; // 节点状态-1.未执行2.进行中3.成功4.失败
    optional int32 canback = 8; // 节点是否可回退-0:不可回退1:可回退
    optional int32 errcode = 9; // 错误码
    optional string errdesc = 10; // 错误描述
    optional int32 detailid = 11; // 日志流水id
    optional string updatetime = 12; // 更新时间
}

message reckon_subagdividedetail{ 
    optional string tradedate = 1; // 交易日
    optional int64 accountid = 2; // 源账户id-投资者
    optional int32 goodsid = 3; // 商品id/现货用市场id/出入金手续费用渠道id
    optional int32 tradefeetype = 4; // 分润费用类型-101、102...-全部201、202...-会员部分301、302...-交易所部分
    optional int32 parentuserid = 5; // 子机构id
    optional int32 memberuserid = 6; // 父机构id
    optional double feeamount = 7; // 父机构分润金额
    optional int32 dividetype = 8; // 分润算法1：比率2：固定
    optional int32 dividemode = 9; // 分润方式(比率分时使用)-1:统一分2:逐级分
    optional double dividevalue = 10; // 分润值
    optional double divideamount = 11; // 子机构分润金额
    optional string creatdate = 12; // 创建时间
    optional int32 accountcurrencyid = 13; // 源账户币种id
    optional int32 marketid = 14; // 市场id
    optional int32 totalcount = 15; // 总笔数
    optional double totalfeeamount = 16; // 手续费总金额(会员部分)
}

message report_accountpp{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional double amount = 5; // 本周期履约总金额(未完成履约的总金额)
    optional double buypaidamount = 6; // 本周期已冻/已扣金额(作为买方)
    optional double sellreceivedamount = 7; // 本周期已收金额(作为卖方)
    optional double buytodayamount = 8; // 本周期扣/冻金额(作为买方)
    optional double selltodayamount = 9; // 本周期收取金额(作为卖方)
}

message report_cusbankcheck{ 
    optional string cusbankid = 1; // 托管银行id
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional int32 inamoutcout = 5; // 入金总笔数
    optional double totalinamout = 6; // 入金总金额
    optional int32 inamoutnum = 7; // 入金总人数
    optional int32 outamountcout = 8; // 出金总笔数
    optional double totaloutamount = 9; // 出金总金额
    optional int32 outamountnum = 10; // 出金总人数
    optional int32 signincount = 11; // 本周期签约数
    optional int32 signoutcount = 12; // 本周期解约数
    optional int32 opencount = 13; // 本周期开户数
    optional int32 totalsignincount = 14; // 当前签约总数
    optional double totalpl = 15; // 总盈亏
    optional double totalcharge = 16; // 总手续费(交易所)
}

message report_dayaccounttrade{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 goodsid = 2; // 商品id
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 marketid = 5; // 市场id
    optional int32 tradeqty = 6; // 今日成交量
    optional int32 openqty = 7; // 今日开仓数量
    optional int32 closeqty = 8; // 今日平仓数量
    optional double tradeamount = 9; // 今日成交金额
    optional double closepl = 10; // 平仓盈亏
    optional double opencharge = 11; // 今日建仓手续费
    optional double closecharge = 12; // 今日平仓手续费
}

message report_daybrokeramount{ 
    optional int32 userid = 1; // 经纪会员id
    optional int32 currencyid = 2; // 货币id
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 cycletype = 4; // 周期类型-1:月2:季3:年4:周5:全报表
    optional double currentbalance = 5; // 期末余额
    optional double inamount = 6; // 今日入金金额
    optional double outamount = 7; // 今日出金金额
    optional double paycharge = 8; // 今日手续费支出
    optional double closepl = 9; // 今日平仓盈亏
    optional double reckonpl = 10; // 今日结算盈亏
}

message report_daybrokerposition{ 
    optional int32 userid = 1; // 经纪会员id
    optional int32 goodsid = 2; // 商品id
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 cycletype = 4; // 周期类型-1:月2:季3:年4:周5:全报表
    optional int32 buycurpositionqty = 5; // 买当前持仓数量
    optional double buyinterest = 6; // 买递延费(仓储费)
    optional int32 buyopentotalqty = 7; // 买开仓总数量
    optional int32 buyclosetotalqty = 8; // 买平仓总数量
    optional int32 sellcurpositionqty = 9; // 卖当前持仓数量
    optional double sellinterest = 10; // 卖递延费
    optional int32 sellopentotalqty = 11; // 卖开仓总数量
    optional int32 sellclosetotalqty = 12; // 卖平仓总数量
}

message report_daymember{ 
    optional int32 userid = 1; // 经纪会员id
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional int32 investortotalnum = 4; // 交易商开户数量(不含子机构交易商)(待初审、待复审、审核通过)
    optional int32 investortotalnum2 = 5; // 交易商开户数量(含子机构交易商)(待初审、待复审、审核通过)
    optional int32 investortrialnum = 6; // 交易商开户待初审数量(不含子机构交易商)
    optional int32 investortrialnum2 = 7; // 交易商开户待初审数量(含子机构交易商)
    optional int32 investorretrialnum = 8; // 交易商开户待复审数量(不含子机构交易商)
    optional int32 investorretrialnum2 = 9; // 交易商开户待复审数量(含子机构交易商)
    optional int32 investorsignqty = 10; // 交易商签约数量(不含子机构交易商)
    optional int32 investorsignqty2 = 11; // 交易商签约数量(含子机构交易商)
    optional double investorinamount = 12; // 交易商入金金额(不含子机构交易商)
    optional double investorinamount2 = 13; // 交易商入金金额(含子机构交易商)
    optional double investoroutamount = 14; // 交易商出金金额(不含子机构交易商)
    optional double investoroutamount2 = 15; // 交易商出金金额(含子机构交易商)
    optional double investoramount = 16; // 交易商期末余额(不含子机构交易商)
    optional double investoramount2 = 17; // 交易商期末余额(含子机构交易商)
    optional double investorclosepl = 18; // 交易商平仓盈亏(不含子机构交易商)
    optional double investorclosepl2 = 19; // 交易商平仓盈亏(含子机构交易商)
    optional double investorreckonpl = 20; // 交易商结算盈亏(不含子机构交易商)
    optional double investorreckonpl2 = 21; // 交易商结算盈亏(含子机构交易商)
    optional int32 investorbuytradeqty = 22; // 交易商买交易数量(不含子机构交易商)
    optional int32 investorbuytradeqty2 = 23; // 交易商买交易数量(含子机构交易商)
    optional int32 investorselltradeqty = 24; // 交易商卖交易数量(不含子机构交易商)
    optional int32 investorselltradeqty2 = 25; // 交易商卖交易数量(含子机构交易商)
    optional int32 investorbuyholdqty = 26; // 交易商买持仓数量(不含子机构交易商)
    optional int32 investorbuyholdqty2 = 27; // 交易商买持仓数量(含子机构交易商)
    optional int32 investorsellholdqty = 28; // 交易商卖持仓数量(不含子机构交易商)
    optional int32 investorsellholdqty2 = 29; // 交易商卖持仓数量(含子机构交易商)
    optional double investortradefee = 30; // 交易商交易手续费(不含子机构交易商)-101102
    optional double investortradefee2 = 31; // 交易商交易手续费(含子机构交易商)-101102
    optional double investordeliveryfee = 32; // 交易商交收手续费(不含子机构交易商)-105106
    optional double investordeliveryfee2 = 33; // 交易商交收手续费(含子机构交易商)-105106
    optional double investorholdfee = 34; // 交易商递延/持仓过夜费(不含子机构交易商)-103104108109
    optional double investorholdfee2 = 35; // 交易商递延/持仓过夜费(含子机构交易商)-103104108109
    optional double investorbuydeliveryamount = 36; // 交易商买交收金额(不含子机构交易商)
    optional double investorbuydeliveryamount2 = 37; // 交易商买交收金额(含子机构交易商)
    optional double investorselldeliveryamount = 38; // 交易商卖交收金额(不含子机构交易商)
    optional double investorselldeliveryamount2 = 39; // 交易商卖交收金额(含子机构交易商)
}

message report_deliverycount{ 
    optional int64 accountid = 1; // 账号id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 buyorsell = 3; // 方向-0:买1:卖
    optional int32 cycletype = 4; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 5; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 6; // 更新时间
    optional double deliverytotalqty = 7; // 实际总交割数量
    optional double deliverytotalamount = 8; // 实际总交割金额
    optional double deliverytotalcharge = 9; // 总交割手续费
}

message report_deliverygoodscount{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional int32 totaldeliverycount = 5; // 今日交割总量
    optional double totaldeliveryamount = 6; // 今日交割总金额
    optional double totaldeliverycharge = 7; // 今日交割手续费
}

message report_dividecount{ 
    optional int32 areaid = 1; // 分润机构id
    optional int32 areatype = 2; //  
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 5; // 更新时间
    optional int64 areaaccountid = 6; // 机构角色结算资金账号
    optional int32 totalcount = 7; // 总笔数
    optional double totalfee = 8; // 总手续费
    optional double divideamount = 9; // 分成金额
}

message report_dividecountdetail{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 areaid = 2; // 分润机构id
    optional int32 areatype = 3; //  
    optional int32 tradefeetype = 4; //  
    optional int32 cycletype = 5; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 6; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 7; // 更新时间
    optional int64 areaaccountid = 8; // 机构角色结算资金账号
    optional int32 totalcount = 9; // 总笔数
    optional double totalfee = 10; // 总手续费
    optional double divideamount = 11; // 分成金额
}

message report_erms_dayexposure{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 userid = 3; // 机构用户id
    optional int32 middlegoodsid = 4; // 中间品种id
    optional double spotqty = 5; // 现货数量-取期末
    optional double spotamount = 6; // 现货估值-取期末
    optional double safespotqty = 7; // 现货已套保数量-取期末
    optional double futureqty = 8; // 头寸数量-取期末
    optional double safefutureqty = 9; // 已套保头寸数量-取期末
    optional double spotexposure = 10; // 现货敞口(a-b)-取期末
    optional double futureexposure = 11; // 期货敞口(c-d)-取期末
    optional double totalexposure = 12; // 总敞口(a-b+c-d)-取期末
    optional int32 exposurerisk = 13; // 敞口风险-0:正常1:不正常-取期末
}

message report_erms_dgconvertsum{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int64 accountid = 3; // 资金账户id
    optional int32 middlegoodsid = 4; // 中间品种id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 spotposition = 11; // 现货头寸
    optional double spotqty = 12; // 现货头寸折算数量
    optional double spotamount = 13; // 现货估值
}

message report_erms_gconvertsum{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int64 accountid = 3; // 资金账户id
    optional int32 middlegoodsid = 4; // 中间品种id
    optional int32 goodsid = 5; // 交易商品id
    optional int32 taaccounttype = 6; // 外部/内部账号-1:外部账号2:内部账号3内部做市自营4内部做市接单
    optional int32 buyposition = 7; // 买头寸
    optional int32 sellposition = 8; // 卖头寸
    optional double convertqty = 9; // 折算数量
}

message report_erms_positionsum{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int64 accountid = 3; // 账号id
    optional int32 goodsid = 4; // 商品id
    optional int32 buypositionqty = 5; // 买期初持仓数量
    optional double buyholderamount = 6; // 买持仓期初总金额
    optional int32 buycurpositionqty = 7; // 买当前持仓总数量
    optional double buycurholderamount = 8; // 买当前持仓总金额
    optional int32 buyfrozenqty = 9; // 买持仓冻结
    optional int32 buyotherfrozenqty = 10; // 买持仓其他冻结(交割冻结)
    optional int32 buyopenreqqty = 11; // 买开仓申请数量
    optional double buyreckonpl = 12; // 买结算盈亏
    optional double buyinterest = 13; // 买递延费(仓储费)
    optional double buyusedmargin = 14; // 占用保证金
    optional int32 buyopentotalqty = 15; // 买开仓总数量
    optional int32 buyclosetotalqty = 16; // 买平仓总数量
    optional double buyclosetotalpl = 17; // 买平仓总盈亏
    optional int32 sellpositionqty = 18; // 卖期初持仓数量
    optional double sellholderamount = 19; // 卖持仓期初总金额
    optional int32 sellcurpositionqty = 20; // 卖当前持仓数量
    optional double sellcurholderamount = 21; // 卖当前持仓总金额
    optional int32 sellfrozenqty = 22; // 卖持仓冻结
    optional int32 sellotherfrozenqty = 23; // 卖持仓其他冻结(交割冻结)
    optional int32 sellopenreqqty = 24; // 卖开仓申请数量
    optional double sellreckonpl = 25; // 卖结算盈亏
    optional double sellinterest = 26; // 卖递延费
    optional int32 sellopentotalqty = 27; // 卖开仓总数量
    optional int32 sellclosetotalqty = 28; // 卖平仓总数量
    optional double sellclosetotalpl = 29; // 卖平仓总盈亏
    optional int32 tradeproperty = 30; // 交易属性
    optional double interest2 = 31; // 过夜费
    optional int32 accountcurrencyid = 32; // 账户币种id
    optional int32 goodscurrencyid = 33; // 商品币种id
    optional double curexchangerate = 34; // 当前汇率
    optional double buyreckonpl2 = 35; // 买结算盈亏(逐笔)-根据持仓单日照表字段汇率
    optional double sellreckonpl2 = 36; // 结算盈亏(逐笔)-根据持仓单日照表字段汇率
    optional int32 buycurtdposition = 37; // 买期末今日头寸
    optional int32 buyfretdposition = 38; // 买冻结今日头寸
    optional int32 sellcurtdposition = 39; // 卖期末今日头寸
    optional int32 sellfretdposition = 40; // 卖冻结今日头寸
    optional double interestcharge = 41; // 利息(110)
    optional double buydefercharge = 42; // 买递延费2(仓储费2)
    optional double selldefercharge = 43; // 卖递延费2
}

message report_erms_taaccountsum{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int64 accountid = 3; // 资金账户id
    optional int32 userid = 4; // 用户id
    optional int32 currencyid = 5; // 货币id
    optional int32 ismain = 6; // 是否母账号0:不是母账户1:是母账户
    optional int64 parentaccountid = 7; // 所属母账号
    optional int32 relateuserid = 8; // 关联用户
    optional int32 taaccounttype = 9; // 外部/内部账号-1:外部账号2:内部账号3内部做市自营4内部做市接单
    optional int32 isreckonaccount = 10; // 是否机构分润账号0:不是1:是
    optional int32 ismarketaccount = 11; // 是否机构接单账号0:不是1:是
    optional double balance = 12; // 期初余额
    optional double orifreezemargin = 13; // 期初冻结保证金
    optional double oriusedmargin = 14; // 期初占用保证金
    optional double oriotherfreezemargin = 15; //  
    optional double orifreezecharge = 16; // 期初手续费冻结
    optional double orimortgagecredit = 17; // 期初授信金额
    optional double oriothercredit = 18; // 期初其它授信金额
    optional double orioutamountfreeze = 19; // 期初出金冻结
    optional double currentbalance = 20; // 期末余额
    optional double freezemargin = 21; // 冻结保证金
    optional double usedmargin = 22; // 占用保证金
    optional double otherfreezemargin = 23; // 其他冻结保证金(出金冻结资金交割买方冻结申购冻结全款买入商城买入)
    optional double freezecharge = 24; // 手续费冻结
    optional double mortgagecredit = 25; // 授信金额
    optional double othercredit = 26; // 其它授信金额
    optional double outamountfreeze = 27; // 出金冻结
    optional double inamount = 28; // 今日入金金额
    optional double outamount = 29; // 今日出金金额
    optional double paycharge = 30; // 今日手续费支出
    optional double closepl = 31; // 今日平仓盈亏
    optional double reckonpl = 32; // 今日结算盈亏
    optional double creditincrease = 33; // 今日授信增加
    optional double creditdecrease = 34; // 今日授信减少
    optional double othercreditincrease = 35; // 今日其它授信增加
    optional double othercreditdecrease = 36; // 今日其它授信减少
    optional double otherpay = 37; // 其他支出(交割付款申购付款全款买入商城买入卖家退货)
    optional double otherincome = 38; // 其他收入(交割收款申购收款全款卖出商城卖出买家退货会员手续费收入)
    optional double transferamount = 39; // 今日划转金额(母子账号资金划转，从账号划入为正，从账号划出为负)
    optional double outthreshold = 40; // 出金阈值
    optional double clearbalance = 41; // 清算余额=期末余额-授信金额-其它授信金额
    optional double dividedcharge = 42; // 今日已收手续费分成
    optional double payexchcharge = 43; // 今日应付交易所手续费
    optional double clearpl = 44; //  
    optional double thirdinamount = 45; // 今日三方入金
    optional double tradecharge = 46; // 今日交易手续费支出[101,102]
    optional double interestcharge = 47; // 今日递延费支出[103,104]
    optional double deliverycharge = 48; // 今日交收手续费支出[105,106]
    optional double holdcharge = 49; // 今日持仓过夜费支出[108,109,110]
    optional double thirdoutamount = 50; // 今日三方出金
    optional int32 tradeqty = 51; // 今日成交量
    optional double tradeamount = 52; // 今日成交金额
    optional double deliveryamountout = 53; // 今日交收货款支出
    optional double deliveryamountin = 54; // 今日交收货款收入
    optional double deliverycompensationfeeout = 55; // 今日交收补偿费支出
    optional double deliverycompensationfeein = 56; // 今日交收补偿费收入
    optional double capitalbalance = 57; // 本金余额[外部子账户实际出入金余额]
    optional double closepl2 = 58; // 平仓盈亏(逐笔)
    optional double reckonpl2 = 59; // 结算盈亏(逐笔)-汇总取期末
    optional double netvalue = 60; // 净值=期末余额+所有权市值
    optional double paycharge2 = 61; // 今日手续费支出(外部配置)
    optional double defercharge = 62; // 今日递延费2支出[111,112]
    optional int64 rootaccountid = 63; // 所属根账户
    optional string sublevelpath = 64; // 账号层级路径(逗号分隔,首尾加逗号)
    optional double ownershipvalue = 65; // 所有权市值
    optional double spotvalue = 66; // 现货市值-统计服务更新
    optional double accountpl = 67; //  
}

message report_erms_wrpositionsum{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int64 accountid = 3; // 帐户id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 10; // 总数量
    optional int32 increaseqty = 11; // 今日增加数量
    optional int32 decreaseqty = 12; // 今日减少数量
    optional int32 freezeqty = 13; // 总冻结数量
    optional int32 relatedqty = 14; // 关联数量
    optional int32 transfertradewrqty = 15; // 今日转订单数量
    optional int32 tradewrqty = 16; // 订单仓单头寸总数量
    optional int32 pickupqty = 17; // 今日提货数量
    optional double marketvalue = 18; // 市值
    optional int32 wrfactortypeid = 19; // 仓单要素类型id
    optional int32 wruserid = 20; // 持有人id
}

message report_goodscount{ 
    optional int32 goodsid = 1; // 商品id
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional int32 marketid = 5; // 市场id
    optional int32 oribuyholdqty = 6; // 买期初持仓总量
    optional double oribuyholdamount = 7; // 买期初持仓总金额
    optional int32 curbuyholdqty = 8; // 买期末持仓总量
    optional double curbuyholdamount = 9; // 买期末持仓总金额
    optional int32 buyopenqty = 10; // 本周期买开仓总量
    optional int32 buycloseqty = 11; // 本周期买平仓总量
    optional int32 buyorderlot = 12; // 买总委托笔数
    optional int32 buyorderqty = 13; // 买总委托数量
    optional double buycharge = 14; // 买总手续费
    optional double buyinterest = 15; // 买总递延费
    optional int32 orisellholdqty = 16; // 卖期初持仓总量
    optional double orisellholdamount = 17; // 卖期初持仓总金额
    optional int32 cursellholdqty = 18; // 卖期末持仓总量
    optional double cursellhodamount = 19; // 卖期末持仓总金额
    optional int32 sellopenqty = 20; // 本周期卖开仓总量
    optional int32 sellcloseqty = 21; // 本周期卖平仓总量
    optional int32 sellorderlot = 22; // 卖总委托笔数
    optional int32 sellorderqty = 23; // 卖总委托数量
    optional double sellcharge = 24; // 卖总手续费
    optional double sellinterest = 25; // 卖总递延费
    optional int32 tradeqty = 26; // 总成交数量
    optional double tradeamount = 27; // 总成交金额
    optional int32 tradelot = 28; // 总成交笔数
    optional int32 holdaccountcount = 29; // 持仓账号个数
    optional int32 orderaccountcount = 30; // 委托账号个数
    optional int32 tradeaccountcount = 31; // 成交账号个数(排除被动单)
}

message report_plateformamount{ 
    optional int64 taaccounttype = 1; // 外部/内部账号-1:外部账号2:内部账号
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional double balance = 5; // 期初余额
    optional double orimortgagecredit = 6; // 期初授信金额
    optional double oriothercredit = 7; // 期初其它授信金额
    optional double currentbalance = 8; // 期末余额
    optional double mortgagecredit = 9; // 授信金额
    optional double inamount = 10; // 本周期入金金额
    optional double outamount = 11; // 本周期出金金额
    optional double creditincrease = 12; // 本周期授信增加
    optional double creditdecrease = 13; // 本周期授信减少
}

message report_plateformpp{ 
    optional int32 cycletype = 1; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 2; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 3; // 更新时间
    optional double amount = 4; // 履约金额
    optional double buypaidamount = 5; // 买方已冻/已扣金额
    optional double sellreceivedamount = 6; // 卖方已收金额
    optional double buytodayamount = 7; // 本周期买方扣/冻金额
    optional double selltodayamount = 8; // 本周期卖方收取金额
}

message report_taaccount{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional int32 userid = 5; // 用户id
    optional int32 ismain = 6; // 是否母账号0:不是母账户1:是母账户
    optional int64 parentaccountid = 7; // 所属母账号
    optional int32 taaccounttype = 8; // 外部/内部账号-1:外部账号2:内部账号
    optional int32 currencyid = 9; // 货币id
    optional double balance = 10; // 期初余额
    optional double orifreezemargin = 11; // 期初冻结保证金
    optional double oriusedmargin = 12; // 期初占用保证金
    optional double oriotherfreezemargin = 13; //  
    optional double orifreezecharge = 14; // 期初手续费冻结
    optional double orimortgagecredit = 15; // 期初授信金额
    optional double oriothercredit = 16; // 期初其它授信金额
    optional double orioutamountfreeze = 17; // 期初出金冻结
    optional double currentbalance = 18; // 期末余额
    optional double freezemargin = 19; // 冻结保证金
    optional double usedmargin = 20; // 占用保证金
    optional double otherfreezemargin = 21; // 其他冻结保证金(出金冻结资金交割买方冻结申购冻结全款买入商城买入)
    optional double freezecharge = 22; // 手续费冻结
    optional double mortgagecredit = 23; // 授信金额
    optional double othercredit = 24; // 其它授信金额
    optional double outamountfreeze = 25; // 出金冻结
    optional double inamount = 26; // 本周期入金金额
    optional double outamount = 27; // 本周期出金金额
    optional double paycharge = 28; // 本周期手续费支出
    optional double closepl = 29; // 本周期平仓盈亏
    optional double reckonpl = 30; // 本周期结算盈亏
    optional double creditincrease = 31; // 本周期授信增加
    optional double creditdecrease = 32; // 本周期授信减少
    optional double othercreditincrease = 33; // 本周期其它授信增加
    optional double othercreditdecrease = 34; // 本周期其它授信减少
    optional double otherpay = 35; // 其他支出(交割付款申购付款全款买入商城买入卖家退货)
    optional double otherincome = 36; // 其他收入(交割收款申购收款全款卖出商城卖出买家退货会员手续费收入)
    optional double transferamount = 37; // 本周期划转金额(母子账号资金划转，从账号划入为正，从账号划出为负)
    optional double outthreshold = 38; // 出金阈值
    optional double clearbalance = 39; // 清算余额=期末余额-授信金额-其它授信金额
    optional double dividedcharge = 40; // 本周期已收手续费分成
    optional double payexchcharge = 41; // 本周期应付交易所手续费
    optional double clearpl = 42; // 清算盈亏
    optional double thirdinamount = 43; // 本周期三方入金
    optional double tradecharge = 44; // 本周期交易手续费支出[101,102]
    optional double interestcharge = 45; // 本周期递延费支出[103,104]
    optional double deliverycharge = 46; // 本周期交收手续费支出[105,106]
    optional double holdcharge = 47; // 本周期持仓过夜费支出[108,109,110]
    optional double thirdoutamount = 48; // 本周期三方出金
    optional int32 tradeqty = 49; // 本周期成交量
    optional double tradeamount = 50; // 本周期成交金额
    optional double deliveryamountout = 51; // 本周期交收货款支出
    optional double deliveryamountin = 52; // 本周期交收货款收入
    optional double deliverycompensationfeeout = 53; // 本周期交收补偿费支出
    optional double deliverycompensationfeein = 54; // 本周期交收补偿费收入
    optional double capitalbalance = 55; // 本周期本金余额[外部子账户实际出入金余额]
    optional double closepl2 = 56; // 平仓盈亏(逐笔)
    optional double reckonpl2 = 57; // 结算盈亏(逐笔)-汇总取期末
    optional double netvalue = 58; // 净值=期末余额+所有权市值
    optional double paycharge2 = 59; // 今日手续费支出(外部配置)
    optional double defercharge = 60; // 本周期递延费2支出[111,112]
    optional int64 rootaccountid = 61; // 所属根账户
    optional string sublevelpath = 62; // 账号层级路径(逗号分隔,首尾加逗号)
    optional int32 relateuserid = 63; // 关联用户
    optional double ownershipvalue = 64; // 所有权市值
    optional double spotvalue = 65; // 现货市值-统计服务更新
    optional double accountpl = 66; //  
}

message report_taaccountcur{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 currencyid = 2; // 货币id
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 cycletype = 4; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string updatetime = 5; // 更新时间
    optional int32 userid = 6; // 用户id
    optional int32 relateduserid = 7; // 关联用户
    optional double usedmargin = 8; // 占用保证金-取期末
    optional double freezemargin = 9; // 冻结保证金-取期末
    optional double freezecharge = 10; // 手续费冻结-取期末
    optional double capitalbalance = 11; // 本金余额[外部子账户实际出入金余额]-取期末
    optional double paycharge = 12; // 手续费支出-取汇总
    optional double closepl = 13; // 平仓盈亏(盯市)-取汇总
    optional double reckonpl = 14; // 结算盈亏(盯市)-取汇总
    optional double closepl2 = 15; // 平仓盈亏(逐笔)-取汇总
    optional double reckonpl2 = 16; // 结算盈亏(逐笔)-取汇总
    optional double paycharge2 = 17; // 手续费支出(外部配置)-取汇总
    optional double exchangerate = 18; // 汇率-取期末
}

message report_tradeposition{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 5; // 更新时间
    optional int32 buypositionqty = 6; // 买期初持仓数量(期初)
    optional double buyholderamount = 7; // 买持仓期初总金额(期初)
    optional int32 buycurpositionqty = 8; // 买当前持仓总数量(期末)
    optional double buycurholderamount = 9; // 买当前持仓总金额(期末)
    optional int32 buyfrozenqty = 10; // 买持仓冻结(期末)
    optional int32 buyotherfrozenqty = 11; // 买持仓其他冻结(交割冻结)(期末)
    optional int32 buyopenreqqty = 12; // 买开仓申请数量(汇总)
    optional double buyreckonpl = 13; // 买结算盈亏(汇总)
    optional double buyinterest = 14; // 买递延费(仓储费)(汇总)
    optional double buyusedmargin = 15; // 占用保证金(期末)
    optional int32 buyopentotalqty = 16; // 买开仓总数量(汇总)
    optional int32 buyclosetotalqty = 17; // 买平仓总数量(汇总)
    optional double buyclosetotalpl = 18; // 买平仓总盈亏(汇总)
    optional int32 sellpositionqty = 19; // 卖期初持仓数量(期初)
    optional double sellholderamount = 20; // 卖持仓期初总金额(期初)
    optional int32 sellcurpositionqty = 21; // 卖当前持仓数量(期末)
    optional double sellcurholderamount = 22; // 卖当前持仓总金额(期末)
    optional int32 sellfrozenqty = 23; // 卖持仓冻结(期末)
    optional int32 sellotherfrozenqty = 24; // 卖持仓其他冻结(交割冻结)(期末)
    optional int32 sellopenreqqty = 25; // 卖开仓申请数量(汇总)
    optional double sellreckonpl = 26; // 卖结算盈亏(汇总)
    optional double sellinterest = 27; // 卖递延费(汇总)
    optional double sellusedmargin = 28; // 卖占用保证金-作废
    optional int32 sellopentotalqty = 29; // 卖开仓总数量(汇总)
    optional int32 sellclosetotalqty = 30; // 卖平仓总数量(汇总)
    optional double sellclosetotalpl = 31; // 卖平仓总盈亏(汇总)
    optional int32 tradeproperty = 32; // 交易属性
    optional double interest2 = 33; // 过夜费
    optional int32 accountcurrencyid = 34; // 账户币种id
    optional int32 goodscurrencyid = 35; // 商品币种id
    optional double curexchangerate = 36; // 当前汇率
    optional double buyreckonpl2 = 37; // 买结算盈亏(逐笔)(汇总)
    optional double sellreckonpl2 = 38; // 结算盈亏(逐笔)(汇总)
    optional int32 buycurtdposition = 39; // 买期末今日头寸(期末)
    optional int32 buyfretdposition = 40; // 买冻结今日头寸(期末)
    optional int32 sellcurtdposition = 41; // 卖期末今日头寸(期末)
    optional int32 sellfretdposition = 42; // 卖冻结今日头寸(期末)
    optional double interestcharge = 43; // 利息(110)(汇总)
    optional double shortmarginvalue = 44; // 保证金设置值(投资管理系统-空)
    optional double buydefercharge = 45; // 买递延费2(仓储费2)
    optional double selldefercharge = 46; // 卖递延费2
}

message report_tradewrcount{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 goodsid = 2; // 交易合约id(默认为0，不为0的为仓单转持仓的头寸)
    optional int32 cycletype = 3; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 4; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional string updatetime = 10; // 更新时间
    optional int64 wrfactortypeid = 11; // 仓单要素类型id
    optional int32 totalqty = 12; // 总数量
    optional int32 freezeqty = 13; // 总冻结数量
    optional int32 increaseqty = 14; // 本周期增加数量
    optional int32 decreaseqty = 15; // 本周期减少数量
    optional int32 deliveryqty = 16; // 本周期交割数量
    optional int32 transferwrqty = 17; // 本周期转仓单数量
}

message report_tradewrposition{ 
    optional int64 wrpositionid = 1; // 订单仓单头寸id(206+unix秒时间戳(10位)+xxxxxx)
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional int32 wruserid = 5; // 持有人id
    optional int64 accountid = 6; // 资金账号id
    optional int32 deliverygoodsid = 7; // 交割商品id
    optional int32 goodsid = 8; // 交易合约id(默认为0，不为0的为仓单转持仓的头寸)
    optional int32 wrfactortypeid = 9; // 仓单要素类型id
    optional int32 brandid = 10; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 11; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 12; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 13; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 14; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 15; // 总数量
    optional int32 increaseqty = 16; // 本周期增加数量
    optional int32 decreaseqty = 17; // 本周期减少数量
    optional int32 freezeqty = 18; // 总冻结数量
    optional int32 relatedqty = 19; // 关联数量
    optional int32 deliveryqty = 20; // 本周期交割数量
    optional int32 transferwrqty = 21; // 本周期转仓单数量
}

message report_wrcount{ 
    optional int32 deliverygoodsid = 1; // 交割商品id
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional int32 brandid = 4; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 6; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 7; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 8; // 月份id(1交割品种升贴水参数表autoid)
    optional string updatetime = 9; // 更新时间
    optional int64 wrfactortypeid = 10; // 仓单要素类型id
    optional int32 totalqty = 11; // 总数量
    optional int32 freezeqty = 12; // 总冻结数量
    optional int32 increaseqty = 13; // 本周期增加数量
    optional int32 decreaseqty = 14; // 本周期减少数量
    optional int32 transfertradewrqty = 15; // 本周期转订单数量
    optional int32 pickupqty = 16; // 本周期提货数量
    optional int32 tradewrqty = 17; // 订单仓单头寸总数量
}

message report_wrposition{ 
    optional int64 wrpositionid = 1; // 仓单头寸id(201+unix秒时间戳(10位)+xxxxxx)
    optional int32 cycletype = 2; // 周期类型-1:月2:季3:年4:周5:全报表
    optional string cycletime = 3; // 周期时间月(yyyymm)季(yyyyq)年(yyyy)周(yyyyiw)全(0)
    optional string updatetime = 4; // 更新时间
    optional int32 wruserid = 5; // 持有人id
    optional int32 deliverygoodsid = 6; // 交割商品id
    optional int32 wrfactortypeid = 7; // 仓单要素类型id
    optional int32 brandid = 8; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 9; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 10; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 11; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 12; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 13; // 总数量
    optional int32 increaseqty = 14; // 本周期增加数量
    optional int32 decreaseqty = 15; // 本周期减少数量
    optional int32 freezeqty = 16; // 总冻结数量
    optional int32 relatedqty = 17; // 关联数量
    optional int32 transfertradewrqty = 18; // 本周期转订单数量
    optional int32 pickupqty = 19; // 本周期提货数量
    optional int32 tradewrqty = 20; // 订单仓单头寸总数量
    optional int32 accountid = 21; // 帐户id
    optional double marketvalue = 22; // 市值
}

message riskratiotype{ 
    optional int32 customertype = 1; // 客户类别(机构/投资者客户类别枚举项值)
    optional int32 riskcontrolmode = 2; // 适用交易用户类型1:投资者/机构自营2:机构做市
    optional string riskrationame = 3; // 类型名称
    optional int32 riskratiocalcmode = 4; // 风险率计算方法-1:占用/净值
    optional double notemarginriskratio = 5; // 提示保证金风险率
    optional double addmarginriskratio = 6; // 追加保证金风险率
    optional double recovertraderiskratio = 7; // 恢复正常交易风险率(会员)
    optional double cutbackriskratio = 8; // 斩仓恢复风险率(投资者用，会员转全部净头寸)
    optional double cutriskratio = 9; // 斩仓风险率
    optional string cutmarginseq = 10; // 斩仓市场顺序（按市场）
    optional int32 cutthresholdflag = 11; // 净值斩仓标志-0:不启用1:启用(做市会员用)
    optional double cutthreshold = 12; // 净值斩仓阈值(做市会员用)
    optional int32 isdefault = 13; // 是否默认(每个风控模式必有且只能设置一个默认)-0:非默认1：默认
    optional string createtime = 14; // 创建时间
    optional int32 creatorid = 15; // 创建人
    optional string modifytime = 16; // 修改时间
    optional int32 modifierid = 17; // 修改人id
    optional int32 issendcancel = 18; // 到达追加风险率是否撤单(交易)-0:不撤1:撤单
    optional int32 issenddeliverycancel = 19; // 到达追加风险率是否撤单(交割)-0:不撤1:撤单
    optional double notesaferatio = 20; // 提示安全度
    optional double addsaferatio = 21; // 追加安全度
    optional double recoversaferatio = 22; // 恢复正常安全度(会员)
    optional double cutsaferatio = 23; // 斩仓安全度
}

message riskrulegroup{ 
    optional int64 riskrulegroupid = 1; // 风控规则组id(seq_riskrulegroup)
    optional string riskrulename = 2; // 风控规则名称
    optional string remark = 3; // 备注
    optional string updatetime = 4; // 更新时间
    optional int32 modifierid = 5; // 修改人
    optional int32 areauserid = 6; // 所属机构
}

message riskrulegroupconfig{ 
    optional int32 riskrulegroupid = 1; // 风控规则组id
    optional int32 riskruleid = 2; // 风控规则id
    optional string updatetime = 3; // 更新时间
    optional int32 modifierid = 4; // 修改人
}

message riskruleitem{ 
    optional int64 riskruleid = 1; // 风控规则id(seq_riskruleitem)
    optional int32 riskruletmpid = 2; //  
    optional string riskrulename = 3; // 风控规则名称
    optional int32 riskrulelevel = 4; // 风控规则级别-1:全部2:交易所级3:品种级4:合约级
    optional bytes riskruleparam = 5; //  
    optional string starttime = 6; // 起始时间(hh:mm:ss)
    optional string endtime = 7; // 终止时间(hh:mm:ss)
    optional int32 noopen = 8; // 禁止开仓-0:不禁止1:禁止
    optional int32 noclose = 9; // 禁止平仓-0:不禁止1:禁止
    optional int32 cansendnotice = 10; // 是否发通知-0:不发1:发送
    optional int32 sendinterval = 11; // 通知间隔时间(分)
    optional int32 canclose = 12; // 是否强平-0:不强平1:强平
    optional double closerate = 13; // 强平持仓百分比
    optional string param1 = 14; // 参数1
    optional string param2 = 15; // 参数2
    optional string param3 = 16; // 参数3
    optional string param4 = 17; // 参数4
    optional string param5 = 18; // 参数5
    optional string remark = 19; // 备注
    optional string updatetime = 20; // 更新时间
    optional int32 modifierid = 21; // 修改人
    optional int32 areauserid = 22; // 所属机构
    optional int32 isvalid = 23; // 是否有效-0:无效1:有效
}

message riskruletmpdef{ 
    optional int32 riskruletmpid = 1; //  
    optional string riskruletmpname = 2; // 风控规则模板名称
    optional string riskruletmpmsgtmp = 3; // 风控规则触发信息模板
    optional string remark = 4; // 备注
}

message risktriggerlog{ 
    optional int64 logid = 1; // autoid(seq_risktriggerlog)
    optional string tradedate = 2; // 交易日
    optional int64 accountid = 3; // 触发账户
    optional int32 userid = 4; // 账户使用用户[内部账户、外部母账户为所属用户，外部子账户为关联用户]
    optional int32 riskruleid = 5; // 触发规则id
    optional int32 triggeroperate = 6; // 触发操作-1:禁止开仓2:禁止平仓3:撤销委托4:风控通知5:强平
    optional string triggerreson = 7; // 触发原因
    optional string triggertime = 8; // 触发时间
    optional int32 memberuserid = 9; // 所属会员id
    optional int32 parentuserid = 10; // 所属机构id
}

message rolefuncmenu{ 
    optional int32 roleid = 1; // 角色权限id
    optional string resourcecode = 2; // 菜单代码
}

message roleuser{ 
    optional int32 managerid = 1; // 用户id
    optional int32 roleid = 2; // 角色id
    optional int32 roletype = 3; // 角色类型：1-管理端2-交易端
}

message scf_bizmsglog{ 
    optional int64 exchticket = 1; // scf业务消息日志id(311+unix秒时间戳(10位)+xxxxxx)
    optional int32 scfcontractid = 2; // scf合同id
    optional int32 scfcontracttype = 3; // 合同类型-1:仓单回购2:仓单质押3:合作套保4:资金贷款
    optional string dealdate = 4; // 处理日期
    optional int32 operatestatus = 5; // 操作状态-0:操作成功1:操作失败
    optional int32 operateaccountid = 6; // 操作人代码
    optional string updatetime = 7; // 更新时间
    optional int32 processsteps = 8; // 流程步骤
    optional int32 businesssteps = 9; // 业务步骤
    optional string plateformretcode = 10; // 平台返回码
    optional string extoperatorid = 11; // 外部流水号
    optional int32 bizorderid = 12; // 业务单号
    optional string tradedate = 13; // 交易日(yyyymmdd)
}

message scf_contract{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional int32 scfcontracttype = 2; // 合同类型-1:仓单回购2:仓单质押3:合作套保4:资金贷款
    optional string scfcontracttmpcontent = 3; // 合同模板内容
    optional int32 lenderuserid = 4; // 贷款方用户id
    optional int64 lenderaccountid = 5; // 贷款方资金账号(合作套保时为贷款方母账号)
    optional int32 borroweruserid = 6; // 借款用户id
    optional int64 borroweraccountid = 7; // 借款方资金账号(合作套保时为关联给借款方的贷款方子账号)
    optional double lenderamount = 8; // 贷款金额
    optional double borroweramount = 9; // 借款方出资金额-[合作套保]
    optional int32 wruserid = 10; // 仓单持有人-[仓单质押]
    optional int32 wrfactortypeid = 11; // 仓单要素类型id-[仓单回购仓单质押]
    optional int32 wrqty = 12; // 仓单数量-[仓单回购仓单质押]
    optional int64 wrid = 13; // 关联仓单id-[仓单回购]
    optional int32 isautoloan = 14; // 是否自动放款-0:手动1:自动-[仓单质押]
    optional double marginratio = 15; // 保证金比率-[仓单回购]质押率-[仓单质押]
    optional int32 interestratemode = 16; // 利率方式-1:年利率2:日利率(金融机构利率配置表配置值)
    optional double interestrate = 17; // 利率(金融机构利率配置表配置值)
    optional int32 interestsettlemode = 18; // 结息方式-1:按日结息2:按周结息3:按月结息(金融机构利率配置表配置值)
    optional int32 interestsettlevalue = 19; // 结息方式值(金融机构利率配置表配置值)
    optional double dayrate = 20; // 日利率(根据利率配置计算出的日利率值,年利率则除以360,保留5位小数)
    optional double wrinitamount = 21; // 仓单抵押价值-[仓单回购仓单质押]
    optional double recoverriskrate = 22; // 追缴风险率-[仓单质押]预警线-[仓单质押]
    optional int32 scfriskmode = 23; // 风控模式-1:比率2:固定-[合作套保]
    optional double tipline = 24; // 预警线-[合作套保](提示)
    optional double warningline = 25; // 禁开线-[合作套保](受限)
    optional double stopline = 26; // 止损线-[合作套保](冻结)
    optional double recoveryline = 27; // 恢复线(受限状态变为正常状态)-[合作套保]
    optional string deadline = 28; // 截止日期(yyyymmdd)
    optional string contractinputtime = 29; // 合同录入时间
    optional int32 contractinputerid = 30; // 合同录入人
    optional string contractconfirmtime = 31; // 合同确认时间
    optional int32 contractconfirmerid = 32; // 合同确认人
    optional string contractactivetime = 33; // 合同激活时间
    optional int32 contractactivatorid = 34; // 合同激活人
    optional int32 deliverygoodsid = 35; // 交割商品id
    optional int32 brandid = 36; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 37; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 38; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 39; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 marketid = 40; // 市场id-拆成三个独立模式后，根据市场id处理
}

message scf_contractbreach{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional double breachamount = 2; // 违约金额
    optional double wramount = 3; // 仓单卖出金额
    optional int32 breachstatus = 4; // 违约状态-1:未完成2:已完成
    optional double lenderbreachloss = 5; // 贷款方违约损失金额
    optional int32 operator = 6; // 操作人id
    optional string updatetime = 7; // 更新时间
}

message scf_contractestimateconfig{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional int32 scfgoodsid = 2; // scf商品id
    optional double scfgoodsratio = 3; // 商品系数
    optional double pricemove = 4; // 商品升贴水值
    optional double weightratio = 5; // 重量系数
    optional string updatetime = 6; // 更新时间
}

message scf_contractinfo{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional double remainamount = 2; // 合同剩余金额
    optional double initmargin = 3; // 初始保证金-[仓单回购]
    optional double wrcuramount = 4; // 仓单当前价值-[仓单回购仓单质押]
    optional int32 remainwrpositionqty = 5; // 剩余仓单头寸数量-[仓单回购仓单质押]
    optional int32 buybackwrpositionqty = 6; // 已回购仓单头寸数量-[仓单回购仓单质押]
    optional double recoveredmargin = 7; // 已追缴保证金-[仓单回购仓单质押]
    optional double recoveredmargindebt = 8; // 追缴保证金欠款(记录正数,最小为0)-[仓单回购仓单质押]
    optional double reckonrecovermargin = 9; // 结算应追缴保底金(结算时到过风险率时临时存储)-[仓单回购仓单质押]
    optional double interestamount = 10; // 计息金额=合同剩余金额-初始保证金-追缴保证金
    optional int32 interestminlen = 11; //  
    optional string interestmindate = 12; // 最少计息日期
    optional int32 interestflag = 13; // 计息标志-0:停止计息1:启动计息
    optional double totalinterest = 14; // 已计利息
    optional double closeinterest = 15; // 已结利息
    optional double interestdebt = 16; // 利息欠款(记录负数)
    optional string startinterestday = 17; // 计息开始日(yyyymmdd)
    optional string lastcloseinterestday = 18; // 最近结息日(yyyymmdd)
    optional int32 scfcontractstatus = 19; //  
    optional int32 contractcloserole = 20; // 合同关闭方-1:贷款方2:借款方3:系统-[合作套保]
    optional int32 handlestatus = 21; // 处理状态-1:待处理2:已处理3:处理失败
    optional string updatetime = 22; // 更新时间
    optional string remark = 23; // 备注
    optional string tradedate = 24; // 交易日(yyyymmdd)
    optional double curriskrate = 25; // 当日风险率
    optional int32 isreckoned = 26; // 是否已结算-0:未结算1:已结算
    optional double oriinitmargin = 27; // 期初初始保证金-[仓单回购]
}

message scf_contractinterest{ 
    optional int64 scfcontractinterestid = 1; // scf合同计息id(313+unix秒时间戳(10位)+xxxxxx)
    optional int64 scfcontractid = 2; // scf合同id
    optional string interestday = 3; // 计息日(yyyymmdd)
    optional double interest = 4; // 利息
    optional double closeinterest = 5; // 已结利息
    optional int32 closeintereststatus = 6; // 结息状态-1:未结2:已结
    optional string updatetime = 7; // 更新时间
    optional int32 creatorid = 8; // 操作人id
    optional string closetime = 9; // 结息时间
}

message scf_contractlocation{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional int64 locationid = 2; // 库位id(209+unix秒时间戳(10位)+xxxxxx)
    optional int32 buybackstatus = 3; // 回购状态-1:未回购2:已回购
}

message scf_contractlog{ 
    optional int64 autoid = 1; // 流水id(自增id)
    optional int64 scfcontractid = 2; // scf合同id
    optional int32 scfcontractlogtype = 3; //  
    optional string createtime = 4; // 创建时间
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional string remark = 6; // 备注
}

message scf_contractsettlehandle{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 scfcontracttype = 3; // 合同类型-1:仓单回购2:仓单质押3:合作套保4:资金贷款
    optional int32 reckonamounttype = 4; // 结算资金处理类型-1:a类2:b类3:c类4:d类
    optional double curinterest = 5; // 当日利息
    optional double recoveredmargindebt = 6; // 保证金欠款(a1)
    optional double interestdebt = 7; // 利息欠款(a2)
    optional double currecoveredmargin = 8; // 当日应追缴保证金(a3)
    optional double curuncloseinterest = 9; // 当日未结总利息(a4)
    optional double interestamount = 10; // 计息金额(a5)
    optional double accountinterest = 11; // 账户计息金额(=a2+a4)[账户服务处理利息金额]
    optional double accountmargin = 12; // 保证金金额(=a1+a3)[账户服务处理保证金金额]
    optional int32 reckonhandlestatus = 13; // 结算处理状态
    optional double accountpaymeny = 14; // 账户货款金额
    optional double settleinterestdebt = 15; // 结算扣减后利息欠款
    optional double settlecurinterest = 16; // 结算扣减后当前利息
    optional double settlerecoveredmargindebt = 17; // 结算扣减后保证金欠款
    optional double settleinterestamount = 18; // 结算扣减后计息金额
    optional double settlecuruncloseinterest = 19; // 结算扣减后未结利息
    optional double settlecurrecoveredmargin = 20; // 结算扣减后保证金
}

message scf_contracttmp{ 
    optional int64 autoid = 1; // 自增id
    optional int32 scfcontracttype = 2; // 合同类型-1:仓单回购2:仓单质押3:合作套保4:资金贷款
    optional int32 areauserid = 3; // 所属机构userid
    optional string scfcontracttmpname = 4; // 合同模板名称
    optional string scfcontracttmpcontent = 5; // 合同模板内容
    optional string remark = 6; // 备注
    optional int32 creatorid = 7; // 创建人id
    optional string createtime = 8; // 创建时间
}

message scf_contractwrholddetail{ 
    optional int64 scfcontractid = 1; // scf合同id(310+unix秒时间戳(10位)+xxxxxx)
    optional int64 wrholddetailid = 2; // 仓单持有明细id(213+unix秒时间戳(10位)+xxxxxx)
    optional int32 buybackstatus = 3; // 回购状态-1:未回购2:已回购
}

message scf_financeapply{ 
    optional int64 financeapplyid = 1; // 融资申请id(314+unix秒时间戳(10位)+xxxxxx)
    optional int32 scfcontracttype = 2; // 合同类型-1:仓单回购2:仓单质押3:合作套保4:资金贷款
    optional int32 lenderuserid = 3; // 贷款方用户id
    optional int64 lenderaccountid = 4; // 贷款方资金账号(合作套保时为贷款方母账号)
    optional int32 borroweruserid = 5; // 借款用户id
    optional int64 borroweraccountid = 6; // 借款方资金账号(合作套保时为关联给借款方的贷款方子账号)
    optional double lenderamount = 7; // 贷款金额
    optional int32 wruserid = 8; // 仓单持有人-[仓单质押]
    optional int64 wrfactortypeid = 9; // 仓单要素类型id-[仓单回购仓单质押]
    optional int32 wrqty = 10; // 仓单数量-[仓单回购仓单质押]
    optional int64 wrid = 11; // 关联仓单id-[仓单回购]
    optional double marginratio = 12; // 保证金比率-[仓单回购仓单质押]
    optional int32 interestratemode = 13; // 利率方式-1:年利率2:日利率(金融机构利率配置表配置值)
    optional double interestrate = 14; // 利率(金融机构利率配置表配置值)
    optional int32 interestsettlemode = 15; // 结息方式-1:按日结息2:按周结息3:按月结息(金融机构利率配置表配置值)
    optional int32 interestsettlevalue = 16; // 结息方式值(金融机构利率配置表配置值)
    optional double wrinitamount = 17; // 仓单抵押价值-[仓单回购仓单质押]
    optional double recoverriskrate = 18; // 追缴风险率-[仓单回购仓单质押]
    optional string deadline = 19; // 截止日期(yyyymmdd)
    optional int32 applystatus = 20; // 申请状态-1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败
    optional string applytime = 21; // 申请时间
    optional string applyremark = 22; // 申请备注
    optional int32 auditorid = 23; // 审核人
    optional string audittime = 24; // 审核时间
    optional string auditremark = 25; // 审核备注
    optional int32 relatedtype = 26; // 关联类型-1:点价点选贸易2:仓单贸易
    optional int64 relatedorder = 27; // 关联单号
    optional int32 scfcontractid = 28; // scf合同id
    optional int32 borrowdays = 29; // 融资天数
}

message scf_goods{ 
    optional int64 scfgoodsid = 1; // scf商品id(自增id)
    optional string scfgoodsname = 2; // scf商品名称
    optional int32 userid = 3; // 所属用户id
    optional string scfgoodsunit = 4; // 商品单位
    optional int32 quotetype = 5; // 报价方式-1:手工报价2:自动报价
    optional int32 decimalplace = 6; // 价格小数位
    optional int32 scfgoodsstatus = 7; // 商品状态-1:正常2:已注销
    optional double prereckonprice = 8; // 上日结算价格
    optional string pretradedate = 9; // 上日结算交易日
    optional double currentreckonprice = 10; // 当前结算价格
    optional string priceupdatetradedate = 11; // 价格更新交易日
    optional string priceupdatetime = 12; // 价格更新时间
    optional int32 creatorid = 13; // 创建人
    optional string createtime = 14; // 创建时间
}

message scf_goodspriceflow{ 
    optional int32 autoid = 1; // autoid
    optional int32 scfgoodsid = 2; // scf商品id
    optional string createtime = 3; // 创建时间
    optional double goodsprice = 4; // 商品价格
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int32 operatorid = 6; // 操作人
}

message scf_goodsquoteconfig{ 
    optional int32 scfgoodsid = 1; // scf商品id(自增id)
    optional int32 goodsid = 2; // 交易商品id
    optional string goodscode = 3; // 交易商品代码
    optional double goodsratio = 4; // 商品系数
    optional double pricemove = 5; // 商品升贴水值
    optional string updatetime = 6; // 更新时间
}

message scf_goodsreckonpricelog{ 
    optional int32 scfgoodsid = 1; // scf商品id
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional double reckonprice = 3; // 结算价格
    optional string createtime = 4; // 创建时间
    optional int32 operatorid = 5; // 操作人
}

message scf_msglog{ 
    optional int64 exchticket = 1; // scf业务消息日志id(311+unix秒时间戳(10位)+xxxxxx)
    optional int32 processsteps = 2; // 流程步骤
    optional int32 businesssteps = 3; // 业务步骤
    optional int32 scfcontractid = 4; // scf合同id
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int32 funcode = 6; // 功能码
    optional int32 retcode = 7; // 返回码
    optional int32 messagestatus = 8; // 状态-1:待发送2:发送完成3:响应失败
    optional bytes logcontent = 9; // 日志内容
    optional string createtime = 10; // 创建时间
    optional string clientticket = 11; // 客户端id
    optional string sendtopic = 12; // 发送主题
}

message scf_wrbuybackdetail{ 
    optional int64 scfwrbuybackid = 1; // scf仓单回购明细id(312+unix秒时间戳(10位)+xxxxxx)
    optional int32 scfcontractid = 2; // scf合同id
    optional int32 buybackqty = 3; // 回购数量
    optional double buybackamount = 4; // 回购金额
    optional double buybackreleasemargin = 5; // 回购释放保证金
    optional string buybacktime = 6; // 回购时间
    optional string tradedate = 7; // 交易日(yyyymmdd)
    optional int64 relatedwrid = 8; // 关联仓单id
    optional int32 handlestatus = 9; // 处理-1:待处理2:处理成功3:处理失败
    optional string errordesc = 10; // 错误描述
}

message scoretype{ 
    optional int32 scoretypeid = 1; // 积分类型id-seq_scoretype
    optional string scoretypename = 2; // 积分类型名称
    optional int32 isshop = 3; // 是否商城可用-0:不是1:是
    optional string createtime = 4; // 创建时间
    optional int32 creatorid = 5; // 创建人
    optional string remark = 6; // 备注
    optional int32 scoreuserid = 7; // 积分服务商id
    optional double sellratio = 8; // 百积分抵资金(销售)
    optional double buyratio = 9; // 百积分抵资金(回购)
    optional int32 isvalid = 10; // 是否有效-0:无效1:有效
}

message servicetaaccountlog{ 
    optional int64 serialnumber = 1; // 流水id(141+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 suborderindex = 2; // 子指令序号
    optional int64 accountid = 3; // 资金账户id
    optional int64 relationorderid = 4; // 关联单号
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int32 currencyid = 7; // 币种id
    optional int32 amountadjusttype = 8; // 调整类型(默认值为0)-0：系统1:单边账调整2:人工调整
    optional double amount = 9; // 资金金额
    optional int32 opamounttype = 10; //  
    optional int32 operatetype = 11; // 操作类型(accountfundcmdop)--参考”mtp一级系统接口文档.xlsm“的“accountcmdop”
    optional int32 businesscode = 12; // 业务编号-参考”mtp一级系统接口文档.xlsm“的“accountbusinesscode”
    optional string createtime = 13; // 发生时间
    optional int32 moneyticket = 14; // 资金流水号：银行端流水号
    optional string remark = 15; // 备注
    optional string tradedate = 16; // 交易日
    optional int32 haschecked = 17; // 是否核对0:未核对1:已核对
}

message servicetradepositionlog{ 
    optional int64 serialnumber = 1; // 流水id(141+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 suborderindex = 2; // 子指令序号
    optional int64 accountid = 3; // 账号id
    optional int32 goodsid = 4; // 商品id
    optional int32 buyorsell = 5; // 方向-0:买1:卖
    optional int32 oppositiontype = 6; // 操作头寸类型-1:头寸2:持仓金额3:其它头寸4:净头寸5:委托(开仓申请数量)
    optional int32 changetype = 7; // 变动类型-accountcmdop
    optional int64 relatedorderid = 8; // 关联单号
    optional double changeqty = 9; // 变动数量交割成功数量
    optional string createtime = 10; // 发生时间
    optional int32 tradeproperty = 11; // 交易属性
    optional string remark = 12; // 备注
    optional int32 marketid = 13; // 市场id
    optional string tradedate = 14; // 交易日
    optional int32 haschecked = 15; // 是否核对0:未核对1:已核对
}

message servicetradewrpositionlog{ 
    optional int64 serialnumber = 1; // 流水id(141+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 suborderindex = 2; // 子指令序号
    optional int64 accountid = 3; // 账号id
    optional int32 goodsid = 4; // 交易商品id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int64 wrfactortypeid = 6; // 仓单要素类型id
    optional int32 brandid = 7; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 8; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 specid = 10; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 11; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 wruserid = 12; // 持有人id
    optional int64 relatedorderid = 13; // 关联单号
    optional int32 changeqty = 14; // 变动数量交割成功数量
    optional int32 oppositiontype = 15; // 操作头寸类型-1:头寸
    optional int32 changetype = 16; // 变动类型-accountcmdop
    optional int32 businesscode = 17; // 业务编号
    optional string createtime = 18; // 发生时间
    optional int32 marketid = 19; // 市场id
    optional string tradedate = 20; // 交易日
    optional int32 haschecked = 21; // 是否核对0:未核对1:已核对
}

message serviceuserscorelog{ 
    optional int64 serialnumber = 1; // 流水id(141+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 suborderindex = 2; // 子指令序号
    optional int32 userid = 3; // 用户id
    optional int32 scoretypeid = 4; // 积分类型id
    optional int64 relatedorderid = 5; // 关联单号
    optional int32 score = 6; // 变动积分
    optional int32 oppositiontype = 7; // 操作头寸类型-1:头寸
    optional int32 scoreadjusttype = 8; // 积分变动类型-accountcmdop
    optional int32 bizcode = 9; // 业务编码
    optional string createtime = 10; // 记账时间
    optional string remark = 11; // 备注
    optional int32 marketid = 12; // 市场id
    optional string tradedate = 13; // 交易日
    optional int32 haschecked = 14; // 是否核对0:未核对1:已核对
}

message servicewrpositionlog{ 
    optional int64 serialnumber = 1; // 流水id(141+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 suborderindex = 2; // 子指令序号
    optional int32 wruserid = 3; // 持有人id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int64 relatedorderid = 11; // 关联单号
    optional int32 changeqty = 12; // 变动数量交割成功数量
    optional int32 oppositiontype = 13; // 操作头寸类型-1:头寸
    optional int32 changetype = 14; // 变动类型-accountcmdop
    optional int32 businesscode = 15; // 业务编号
    optional string createtime = 16; // 发生时间
    optional int32 marketid = 17; // 市场id
    optional string tradedate = 18; // 交易日
    optional int32 haschecked = 19; // 是否核对0:未核对1:已核对
    optional int64 accountid = 20; // 帐户id
}

message site_adconfig{ 
    optional int32 id = 1; // 
    optional int32 adtype = 2; //  
    optional int32 userid = 3; // 用户id(默认为0，核心企业为机构用户id)
    optional string title = 4; // 标题
    optional string brief = 5; // 简介
    optional string imagepath = 6; // 图片
    optional string url = 7; // 链接
    optional int32 sort = 8; // 排序
    optional int32 isshow = 9; // 是否展示-0:不展示1:展示
    optional string creaedate = 10; // 创建时间
    optional int32 creatorid = 11; // 创建人
    optional string updatedate = 12; // 修改时间
    optional int32 modifierid = 13; // 操作人
}

message site_columnconfig{ 
    optional int32 id = 1; // id(seq_site_columnconfig)
    optional int32 columntype = 2; // 栏目类型-1:行情资讯10:会员服务30:关于我们100:核心企业栏目-百色
    optional string columnname = 3; // 栏目名称
    optional int32 sort = 4; // 排序
    optional int32 isshow = 5; // 是否展示-0:不展示1:展示
    optional string creaedate = 6; // 创建时间
    optional int32 creatorid = 7; // 创建人
    optional string updatedate = 8; // 修改时间
    optional int32 modifierid = 9; // 操作人
}

message site_columndetail{ 
    optional int32 id = 1; // id(seq_site_columndetail)
    optional int32 columnid = 2; // 所属栏目
    optional int32 userid = 3; // 用户id(默认为0，核心为为机构用户id)
    optional string title = 4; // 标题
    optional string coverimage = 5; // 封面图片
    optional string author = 6; // 作者
    optional string brief = 7; // 简介
    optional string context = 8; // 内容
    optional int32 status = 9; // 状态-1:暂存10:待审核20:审核通过30:审核拒绝
    optional int32 istop = 10; // 是否置顶-0:不置1:置顶
    optional int32 hits = 11; // 点击数
    optional string publishdate = 12; // 发布日期
    optional string creaedate = 13; // 创建时间
    optional int32 creatorid = 14; // 创建人
    optional string updatedate = 15; // 修改时间
    optional int32 modifierid = 16; // 操作人
    optional int32 isshow = 17; // 是否展示-0:不展示1:展示
}

message site_partner{ 
    optional int32 id = 1; // id(seq_site_partner)
    optional int32 partnertype = 2; // 类型-1:合作伙伴2:会员企业3:底部导航
    optional string title = 3; // 标题
    optional string brief = 4; // 简介
    optional string imagepath = 5; // 图片
    optional string url = 6; // 链接
    optional int32 sort = 7; // 排序
    optional string createdate = 8; // 创建时间
    optional int32 creatorid = 9; // 创建人
    optional string updatedate = 10; // 修改时间
    optional int32 modifierid = 11; // 操作人
    optional int32 isshow = 12; // 是否展示-0:不展示1:展示
}

message smscollection{ 
    optional int32 msgid = 1; // 消息编号
    optional int32 templid = 2; // 模板id
    optional int32 msgtype = 3; // 消息类型
    optional int32 status = 4; // 发送状态-01：待发送03：已发送04：发送失败
    optional string errinfo = 5; // 错误信息
    optional int32 priority = 6; // 优先级别-1：正常2：加急3：紧急
    optional string failedphone = 7; // failedphone
    optional string recvphone = 8; // 接收手机号
    optional string createtime = 9; // 创建时间
    optional string updatetime = 10; // 更新时间
    optional int32 hasencrypt = 11; // 数据是否已加密-0:未加密1:已加密
    optional string msgcontent = 12; // 短信内容(加密存储)
}

message smsparameters{ 
    optional int32 msgid = 1; // 短信id
    optional int32 offset = 2; // 参数序号
    optional string param = 3; // 参数
}

message smstemplate{ 
    optional int32 templid = 1; // 模板id
    optional string content = 2; // 内容
    optional int32 serviceprovider = 3; // 运营商
    optional string owncode = 4; // 运营商模板代码
    optional string remark = 5; // 备注[参数说明]
}

message subareadivideconfig{ 
    optional int32 subareauserid = 1; // 子机构用户id
    optional int32 subdividefeetype = 2; // 子机构分润费用类型-1:交易手续费(101,102,201,202)(会员部分)
    optional int32 memberuserid = 3; // 会员用户id
    optional int32 dividetype = 4; // 子机构分润算法-1:比率2:固定
    optional double dividevalue = 5; // 子机构分润值
    optional int32 creatorid = 6; // 创建人
    optional string createtime = 7; // 创建时间
    optional int32 modifyerid = 8; // 修改人
    optional string updatetime = 9; // 修改时间
    optional int32 isdefault = 10; // 是否默认-0:不默认1:默认--一个经纪会员只能且必须有一个默认值
}

message subareagroup{ 
    optional int32 subareagroupid = 1; // 子机构分组id(seq_subareagroup)
    optional int32 subareagrouptype = 2; // 子机构分组类型-1:子机构分润分组
    optional string subareagroupname = 3; // 子机构分组名称
    optional string remark = 4; // 子机构分组备注
    optional int32 creatorid = 5; // 创建人
    optional string createtime = 6; // 创建时间
    optional int32 areauserid = 7; // 所属机构
}

message subareagroupdetail{ 
    optional int32 subareagroupid = 1; // 子机构分组
    optional int32 userid = 2; // 子机构用户id
    optional int32 operatorid = 3; // 操作人
    optional string updatetime = 4; // 更新时间
}

message subdivideconfig{ 
    optional int32 subareagroupid = 1; // 子机构分组id
    optional int32 dividefeetype = 2; //  
    optional int32 marketid = 3; // 市场id交易手续费:市场id；交收手续费：0；出入金手续费：渠道id
    optional int32 goodsid = 4; // 商品id-0表示到市场
    optional int32 dividetype = 5; // 分配算法-1:比率2:固定(暂不支持)
    optional int32 dividemode = 6; // 分润方式(比率分时使用)-1:统一分2:逐级分
    optional double dividevalue = 7; // 分润值
    optional int32 creatorid = 8; // 创建人
    optional string createtime = 9; // 创建时间
}

message summertimegroup{ 
    optional int32 autoid = 1; // autoid-seq_summertimegroup
    optional string groupname = 2; // 名称
}

message summertimegroupconfig{ 
    optional int32 groupid = 1; // 夏令时分组id
    optional int32 summeryear = 2; // 年份
    optional string startdate = 3; // 开时日期(yyyymmdd)
    optional string enddate = 4; // 结束日期(yyyymmdd)
}

message systemmanager{ 
    optional int32 autoid = 1; // 自增id
    optional int32 reletype = 2; // 用户类型-1-交易所管理员2-机构管理员3-子机构管理员
    optional string logincode = 3; // 用户登录账号,唯一索引
    optional string username = 4; // 用户姓名
    optional string password = 5; // 加密方式采用用户名+密码,采用sha算法
    optional int32 areauserid = 6; // 所属机构id
    optional string pwdexpdate = 7; // 密码失效日期
    optional int32 managerstatus = 8; // 用户状态：1启用2停用3锁定(密码错误时锁定)
    optional int32 loginstatus = 9; // 登录状态:1未登录2已登录
    optional int32 isdefault = 10; // 是否默认管理员-0:不是默认1:默认管理员
    optional string logintime = 11; // 登录时间
    optional string loginip = 12; // 登录ip
    optional int32 loginport = 13; // 登录端口
    optional int32 loginfailnum = 14; // 登录失败次数
    optional int32 uploginid = 15; // 修改人id
    optional string modifytime = 16; // 修改时间
    optional string remark = 17; // 备注
    optional int32 onymac = 18; // 是否启用mac地址-0:否1:是
}

message systemmanagerlog{ 
    optional int32 autoid = 1; // 自增id
    optional int32 reletype = 2; // 用户类型-1-交易所管理员2-机构管理员
    optional string tradedate = 3; // 交易日
    optional int32 userid = 4; // 操作用户id
    optional string logincode = 5; // 登录账号
    optional string username = 6; // 用户姓名
    optional int32 parentuserid = 7; // 所属机构id
    optional string resourcecode = 8; // 资源代码,对应菜单代码
    optional string resourcename = 9; // 资源名
    optional string content = 10; // 操作内容
    optional string oldvalue = 11; // 更新前
    optional string newvalue = 12; // 更新后
    optional string operatetime = 13; // 操作时间
    optional string ip = 14; // ip
    optional int32 port = 15; // number
    optional string remark = 16; // 备份
    optional string prevalue = 17; // 旧值
    optional string cnewvalue = 18; // 新值
    optional int32 logwritetype = 19; // 日志类型-1:自动2:手动
    optional int32 logoperatortype = 20; // 操作类型-1:新增2:修改3:删除4:激活5:注销6:审核
    optional string operatordataid = 21; // 操作数据id
}

message systemmanagermac{ 
    optional string logincode = 1; // 用户登录账号,唯一索引
    optional string macaddress = 2; // mac地址
}

message systemmanagerrole{ 
    optional int32 autoid = 1; // 角色id(自增id)
    optional string rolename = 2; // 角色名称
    optional int32 areauserid = 3; // 所属机构
    optional int32 rolestatus = 4; // 角色状态-1:启用2：停用
    optional int32 roletype = 5; // 角色类型-1-管理端2-交易端
    optional string sensitivefields = 6; // 敏感字段权限(存储该角色可查看的敏感字段json字符串)
    optional string modifytime = 7; // 修改时间
    optional int32 modifierid = 8; // 修改人
}

message systemparam{ 
    optional string paramcode = 1; // 参数代码
    optional string paramname = 2; // 参数名
    optional string paramvalue = 3; // 参数值
    optional int32 paramtype = 4; // 参数类型0-通用1-管理端2-终端3-后台4-商城
    optional int32 showflag = 5; // 是否显示0不显示1显示
    optional int32 modifyflag = 6; // 修改标志0不允许修改1允许修改
    optional string serverip = 7; //  
    optional int32 userid = 8; // 更新用户id
    optional string loginid = 9; // 更新用户账号,登录账号
    optional string updatetime = 10; // 更新时间
    optional string remark = 11; // 备注
    optional string paramvalue2 = 12; // 参数值(clob)
    optional string regexpress = 13; // 正则表达式
}

message sz_reckon_dividecount{ 
    optional string tradedate = 1; // 交易日
    optional int64 accountid = 2; // 资金账号id
    optional int32 dividetargettype = 3; // 分润角色类型-1:供货商2:交易所3:总经销商4:经销商5:投资者
    optional int32 userid = 4; // 用户id
    optional double divideamount = 5; // 分润总金额
    optional int32 totalcount = 6; // 总笔数
    optional string createtime = 7; // 创建时间
}

message taaccount{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 userid = 2; // 用户id
    optional int32 currencyid = 3; // 货币id
    optional int32 changeflag = 4; //  
    optional string password = 5; // 资金密码
    optional int32 tradestatus = 6; //  
    optional int32 signstatus = 7; //  
    optional int32 ismain = 8; // 是否母账号0:不是母账户1:是母账户
    optional int64 parentaccountid = 9; // 所属根账号
    optional int32 relateduserid = 10; // 关联用户
    optional int32 relatedaccountstatus = 11; //  
    optional int32 taaccounttype = 12; // 账号类型-1:外部账号2:内部账号3:内部做市自营账号4:内部做市接单账号
    optional int32 isreckonaccount = 13; // 是否机构分润账号0:不是1:是
    optional int32 ismarketaccount = 14; // 是否机构接单账号0:不是1:是
    optional double balance = 15; // 期初余额
    optional double orifreezemargin = 16; // 期初冻结保证金
    optional double oriusedmargin = 17; // 期初占用保证金
    optional double oriotherfreezemargin = 18; //  
    optional double orifreezecharge = 19; // 期初手续费冻结
    optional double orimortgagecredit = 20; // 期初授信金额
    optional double oriothercredit = 21; // 期初其它授信金额
    optional double orioutamountfreeze = 22; // 期初出金冻结
    optional double freezemargin = 23; // 冻结保证金
    optional double usedmargin = 24; // 占用保证金
    optional double otherfreezemargin = 25; // 其他冻结保证金(交割买方冻结申购冻结全款买入商城买入)
    optional double freezecharge = 26; // 手续费冻结
    optional double mortgagecredit = 27; // 授信金额
    optional double othercredit = 28; // 其它授信金额
    optional double outamountfreeze = 29; // 出金冻结
    optional double inamount = 30; // 今日入金金额(包括三方入金)
    optional double currentbalance = 31; // 期末余额
    optional double outamount = 32; // 今日出金金额(包括三方出金)
    optional double paycharge = 33; // 今日手续费支出
    optional double closepl = 34; // 今日平仓盈亏
    optional double creditincrease = 35; // 今日授信增加
    optional double creditdecrease = 36; // 今日授信减少
    optional double othercreditincrease = 37; // 今日其它授信增加
    optional double othercreditdecrease = 38; // 今日其它授信减少
    optional double transferamount = 39; // 今日划转金额(母子账号资金划转，从划入账号为正，从账号划出为负)
    optional double otherpay = 40; // 其他支出(交割付款申购付款全款买入商城买入卖家退货)
    optional double otherincome = 41; // 其他收入(交割收款申购收款全款卖出商城卖出买家退货会员手续费收入)
    optional double outthreshold = 42; // 出金阈值
    optional string tradestatuschangetime = 43; // 激活时间
    optional string changetime = 44; // 账户状态变更时间
    optional double thirdinamount = 45; // 今日三方入金
    optional double thirdoutamount = 46; // 今日三方出金
    optional double capitalbalance = 47; // 本金余额[外部子账户实际出入金余额]
    optional int64 rootaccountid = 48; // 所属根账户
    optional string sublevelpath = 49; // 账号层级路径(逗号分隔,首尾加逗号)
    optional int32 serivcegroup = 50; // 服务分组
}

message taaccountconfig{ 
    optional int64 accountid = 1; // 资金账号id(外部账号)
    optional int32 riskrulegroupid = 2; // 交易策略组id
    optional int32 trademargintmpid = 3; // 保证金模板id[tradeconfigtmptype为1]
    optional int32 tradefeetmpid = 4; // 手续费模板id[tradeconfigtmptype为2]
    optional int32 traderatetmpid = 5; // 汇率模板id[tradeconfigtmptype为3]
    optional string updatetime = 6; // 更新时间
    optional int32 modifierid = 7; // 修改人
    optional int32 maxsubaccouts = 8; // 最大子账户数[最大99999][外部母账户用]
    optional int32 cursubaccounts = 9; // 当前有效子账户数[外部母账户用]
    optional string accountname = 10; // 账户名称
}

message taaccountcurrency{ 
    optional int64 accountid = 1; // 资金账户id
    optional int32 currencyid = 2; // 货币id
    optional int32 userid = 3; // 用户id
    optional int32 relateduserid = 4; // 关联用户
    optional double usedmargin = 5; // 占用保证金
    optional double freezemargin = 6; // 冻结保证金
    optional double freezecharge = 7; // 手续费冻结
    optional double capitalbalance = 8; // 本金余额[外部子账户实际出入金余额]
    optional double paycharge = 9; // 今日手续费支出
    optional double closepl = 10; // 今日平仓盈亏
}

message taaccountlog{ 
    optional int64 autoid = 1; // 流水id(220+unix秒时间戳(10位)+xxxxxx)
    optional int64 accountid = 2; // 资金账户id
    optional int64 relationorderid = 3; // 关联单号
    optional int32 marketid = 4; // 市场id
    optional int32 goodsid = 5; // 商品id
    optional int32 currencyid = 6; // 币种id
    optional int32 amountadjusttype = 7; // 资金调整类型(默认值为0)-0：系统1:单边账调整2:人工调整
    optional double amount = 8; // 资金金额
    optional double balance = 9; // 期初余额
    optional double currentbalance = 10; // 期末余额(变动后金额)
    optional int32 operatetype = 11; // 操作类型-参考”mtp一级系统接口文档.xlsm“的“accountfundcmdop”
    optional int32 businesscode = 12; // 业务编号-参考”mtp一级系统接口文档.xlsm“的“accountbusinesscode”
    optional int32 moneyticket = 13; // 资金流水号：银行端流水号
    optional string createtime = 14; // 发生时间
    optional string remark = 15; // 备注
}

message taaccountlog2{ 
    optional int32 serialnumber = 1; // 流水id
    optional int32 suborderindex = 2; // 子指令序号
    optional int64 accountid = 3; // 资金账户id
    optional int64 relationorderid = 4; // 关联单号
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int32 currencyid = 7; // 币种id
    optional int32 amountadjusttype = 8; // 调整类型(默认值为0)-0：系统1:单边账调整2:人工调整
    optional double amount = 9; // 资金金额
    optional int32 opamounttype = 10; //  
    optional int32 operatetype = 11; // 操作类型-参考”mtp一级系统接口文档.xlsm“的“accountcmdop”
    optional int32 businesscode = 12; // 业务编号-参考”mtp一级系统接口文档.xlsm“的“accountbusinesscode”
    optional double beforeamount = 13; // 变动前金额
    optional double afteramount = 14; // 变动后金额
    optional int32 moneyticket = 15; // 资金流水号：银行端流水号
    optional string createtime = 16; // 发生时间
    optional string remark = 17; // 备注
    optional string tradedate = 18; // 交易日
}

message taaccountmarket{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 marketid = 2; // 市场id
    optional string modifytime = 3; // 修改时间
    optional int32 modifierid = 4; // 修改人
    optional int32 spotrighttype = 5; // 现货权限类型-1:可挂可摘2:可挂3:可摘[现货类](卖大厅)
    optional int32 buyspotrighttype = 6; // 现货权限类型-1:可挂可摘2:可挂3:可摘[现货类](买大厅)
}

message taaccountrisk{ 
    optional int64 accountid = 1; // 资金账号
    optional int64 relatedid = 2; // 关联单号
    optional int32 relatedtype = 3; // 关联类型-1:合作套装风控
    optional int32 riskmode = 4; // 风控模式-1:比率2:固定-[合作套保]
    optional double tipline = 5; // 预警线-[合作套保](提示)
    optional double warningline = 6; // 禁开线-[合作套保](受限)
    optional double stopline = 7; // 止损线-[合作套保](冻结)
    optional double recoveryline = 8; // 恢复线(受限状态变为正常状态)-[合作套保]
    optional double investamount = 9; // 出资金额[合作套保:借方出资金额]
    optional double totalamount = 10; // 初始总金额[合作套保:(贷款金额+　借方出资金额)]
}

message taaccountrisklog{ 
    optional int64 autoid = 1; // 流水序号(自增id)-seq_taaccountrisklog
    optional int64 accountid = 2; // 账号id
    optional int64 relatedid = 3; // 关联单号
    optional int32 relatedtype = 4; // 关联类型-1:合作套装风控
    optional int32 changetype = 5; // 变动类型-1:激活2:关闭
    optional string createtime = 6; // 创建时间
    optional string remark = 7; // 备注
}

message tablecolumnconfig{ 
    optional int32 autoid = 1; // autoid
    optional string tablekey = 2; // 列表key
    optional string columnfield = 3; // 列字段
    optional string columntitle = 4; // 列title
    optional string columnwidth = 5; // 列宽
    optional int32 orderindex = 6; // 顺序
    optional int32 isshow = 7; // 是否显示-0:不显示1:显示
    optional int32 aligntype = 8; // 对齐方式-1:居中对齐2:左对齐3:右对齐
    optional string formattertype = 9; // 格式化类型
    optional string formatterstring = 10; // 格式化字符
    optional string remark = 11; // 备注
    optional int32 needsummary = 12; // 是否需要汇总-0:不需要1:需要
    optional int32 summarytype = 13; // 汇总类型-1:加总2:最后一个
    optional string groupname = 14; // 表头分组名称
}

message tabledefine{ 
    optional string tablekey = 1; // 列表key
    optional int32 tabletype = 2; // 列表类型-1:管理端2:终端
    optional string tablename = 3; // 列表名称
    optional string tabelmenu = 4; // 列表菜单
    optional string remark = 5; // remark
}

message takedeliverydistribute{ 
    optional int64 distributeorderid = 1; // 配送单号(125+unix秒时间戳(10位)+xxxxxx)
    optional int32 takeorderid = 2; // 提货单号
    optional int32 distributestatus = 3; //  
    optional int32 handlestatus = 4; // 处理状态
    optional int32 userid = 5; // 申请人
    optional int32 logisticsuserid = 6; // 物流机构用户id
    optional int64 logisticaccountid = 7; // 物流机构资金账户
    optional int64 takeraccountid = 8; // 提货人资金账户
    optional double freight = 9; // 运费
    optional string createtime = 10; // 创建时间
    optional string confirmtime = 11; // 运费确认时间
    optional string tradedate = 12; // 交易日(yyyymmdd)
    optional string outlogisticsid = 13; // 外部物流单号
    optional string startaddress = 14; // 出发地
    optional string endaddress = 15; // 目的地
    optional int32 goodstypecode = 16; // 货物类别id
    optional string goodstypename = 17; // 货物类别
    optional int32 trucknum = 18; // 需车数
    optional string contacts = 19; // 联系人
    optional string phone = 20; // 联系电话
    optional string showuptime = 21; // 到场时间
    optional string remark = 22; // 备注
}

message takedeliveryrequest{ 
    optional int64 takeorderid = 1; // 提货单号(122+unix秒时间戳(10位)+xxxxxx)
    optional int32 userid = 2; // 申请人
    optional string reqtime = 3; // 更新时间
    optional string recivername = 4; // 提货人姓名
    optional int32 cardtypeid = 5; // 提货人证件类型
    optional string cardnum = 6; // 提货人证件号码
    optional string phonenum = 7; // 提货人联系方式
    optional string address = 8; // 提货人详细地址
    optional int32 takemode = 9; // 提货方式-2:自提3:配送
    optional string takeremark = 10; // 提货备注
    optional int32 reqstatus = 11; // 申请状态-1:待审核2:审核通过3:审核拒绝4:已撤销5:失败6:提货完成7:待收货
    optional int32 auditer = 12; // 审核人
    optional string audittime = 13; // 审核时间
    optional string checkremark = 14; // 审核备注
    optional string tradedate = 15; // 交易日(yyyymmdd)
    optional int64 accountid = 16; // 帐户id
}

message takedeliverywr{ 
    optional int32 takeorderid = 1; // 提货单号
    optional int32 wrid = 2; // 库位号
    optional int32 wrqty = 3; // 仓单标准数量
    optional double realwrqty = 4; // 仓单实际数量-[整装不拆分记录]
    optional string createtime = 5; // 仓建时间
}

message tender_bidapply{ 
    optional int32 autoid = 1; // autoid(seq_tender_bidapply)
    optional string tradedate = 2; // 交易日
    optional int32 goodsid = 3; // 招标信息id
    optional int32 applyid = 4; // 招标申请id
    optional int32 biduserid = 5; // 投标用户id
    optional string contact = 6; // 联系人
    optional string telphone = 7; // 固定电话(加密)
    optional string mobile = 8; // 手机(加密)
    optional string email = 9; // 电子邮件(加密)
    optional string address = 10; // 投标方地址
    optional string bidfile = 11; // 投标文件
    optional int32 applystatus = 12; // 申请状态-1:未提交10:待审核20:审核中30:审核通过31:审核拒绝32:审核失败
    optional string requesttime = 13; // 申请时间
    optional string audittime = 14; // 审核时间
    optional int32 auditid = 15; // 审核人
    optional string remark = 16; // 审核备注
    optional int32 marketid = 17; // 市场id
    optional int64 bidaccountid = 18; // 投标方资金账户id
}

message tender_bidinfo{ 
    optional int32 goodsid = 1; // 招标信息id
    optional int32 biduserid = 2; // 投标用户id
    optional int32 applyid = 3; // 招标申请id
    optional string tradedate = 4; // 交易日
    optional string contact = 5; // 联系人
    optional string telphone = 6; // 固定电话(加密)
    optional string mobile = 7; // 手机(加密)
    optional string email = 8; // 电子邮件(加密)
    optional string address = 9; // 投标方地址
    optional string bidfile = 10; // 投标文件
    optional int32 bidgrade = 11; // 投标分值
    optional string graderemark = 12; // 评分备注
    optional int32 bidstatus = 13; // 投标状态-1:已投标10:已开标20:已评分30:未中标31:已中标32:已终止
    optional double bidmargin = 14; // 投标方保证金
    optional double releasemargin = 15; // 释放保证金
    optional int32 handlestatus = 16; // 处理状态
    optional string createtime = 17; // 创建时间
    optional string updatetime = 18; // 更新时间
    optional int32 marketid = 19; // 市场id
    optional int64 bidaccountid = 20; // 投标方资金账户id
    optional string uuid = 21; // 发起端唯一id
}

message tender_specificuser{ 
    optional int32 applyid = 1; // 招标申请id
    optional int32 userid = 2; // 指定用户id[审核时根据名称找到匹配的用户id]
    optional string username = 3; // 指定用户名称
    optional int32 goodsid = 4; // 招标信息id
}

message tender_tenderapply{ 
    optional int64 autoid = 1; // 招标申请id(seq_tender_tenderapply)
    optional string tradedate = 2; // 交易日
    optional int32 tenderuserid = 3; // 招标方用户id
    optional string tendernum = 4; // 招标编号
    optional string tendertitle = 5; // 招标主题
    optional string opendate = 6; // 开标日期
    optional string tendercontact = 7; // 招标联系人
    optional string tendertelphone = 8; // 招标联系电话(加密)
    optional string tendergoods = 9; // 招标标的
    optional int32 tendertype = 10; // 招标类型-1:公开招标2:指定招标
    optional int32 gradetype = 11; // 评分类型-1:现场评分2:在线评分
    optional string tenderfile = 12; // 招标文件
    optional int32 marketid = 13; // 市场id
    optional string goodscode = 14; // 商品代码【系统自动生成[#t(2位)+applyid十六进制(6位)]】
    optional int32 applystatus = 15; // 申请状态-1:未提交10:待审核20:审核中30:审核通过31:审核拒绝32:审核失败
    optional string requesttime = 16; // 申请时间
    optional string audittime = 17; // 审核时间
    optional int32 auditid = 18; // 审核人
    optional string remark = 19; // 审核备注
    optional int64 tenderaccountid = 20; // 招标方资金账户id
}

message tender_tenderinfo{ 
    optional int64 goodsid = 1; // 招标信息id-自增seq_goods确保不重复
    optional int64 applyid = 2; // 招标申请id
    optional string tradedate = 3; // 交易日
    optional int32 tenderuserid = 4; // 招标方用户id
    optional string tendernum = 5; // 招标编号
    optional string tendertitle = 6; // 招标主题
    optional string opendate = 7; // 开标日期
    optional string tendercontact = 8; // 招标联系人
    optional string tendertelphone = 9; // 招标联系电话(加密)
    optional string tendergoods = 10; // 招标标的
    optional int32 tendertype = 11; // 招标类型-1:公开招标2:指定招标
    optional int32 gradetype = 12; // 评分类型-1:现场评分2:在线评分
    optional string tenderfile = 13; // 招标文件
    optional int32 marketid = 14; // 市场id
    optional string goodscode = 15; // 商品代码【系统自动生成[#t(2位)+applyid十六进制(6位)]】
    optional double tendermargin = 16; // 招标方保证金
    optional double bidmargin = 17; // 投标方保证金
    optional int32 tenderstatus = 18; //  
    optional int32 handlestatus = 19; // 处理状态
    optional string createtime = 20; // 创建时间
    optional string updatetime = 21; // 更新时间
    optional string confirmtime = 22; // 确认时间
    optional string remark = 23; // 确认备注
    optional int64 tenderaccountid = 24; // 招标方资金账户id
    optional int64 confirmid = 25; // 确认人(登录账号)
    optional string confirmtradedate = 26; // 确认交易日
    optional int32 closerid = 27; // 终止人
    optional string closetime = 28; // 终止时间
    optional string closeremark = 29; // 终止备注
    optional double tendercharge = 30; // 招标手续费
}

message tender_wininfo{ 
    optional int64 winid = 1; // 中标信息id(160+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日
    optional int32 goodsid = 3; // 招标信息id
    optional int32 winneruserid = 4; // 投标用户id
    optional int32 winstatus = 5; // 中标状态-1:待审核20:公示中30:审核拒绝31:已作废32:已中标33:已终止
    optional int32 applyid = 6; // 招标申请id
    optional int32 creatoruserid = 7; // 确定人
    optional string createtime = 8; // 确定时间
    optional int32 ispublicity = 9; // 是否公示-0:不公示1:公示
    optional string enddate = 10; // 公示截止日期
    optional double winprice = 11; // 中标价
    optional string performanceremark = 12; // 履约期限
    optional string winremark = 13; // 中标备注
    optional int32 auditid = 14; // 审核人
    optional string audittime = 15; // 审核时间
    optional string auditremark = 16; // 审核备注
    optional int32 canceluserid = 17; // 作废人
    optional string canceltime = 18; // 作废时间
    optional string cancelremark = 19; // 作废备注
    optional int32 marketid = 20; // 市场id
}

message today_accountmargin{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional bytes infocontent = 3; // 保证金信息(存储配置的protobuffer串)
    optional string createdate = 4; // 创建时间
    optional int32 marketid = 5; // 市场id
}

message today_accounttradefee{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional bytes infocontent = 3; // 交易费用信息(存储配置的protobuffer串)
    optional string createdate = 4; // 创建时间
    optional int32 marketid = 5; // 市场id
    optional int32 tradetype = 6; // 交易类型-1:投资者自营2:做市
}

message today_accounttraderule{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional bytes infocontent = 3; // 交易规则信息(存储配置的protobuffer串)
    optional int32 marketid = 4; // 市场id
    optional string createdate = 5; // 创建时间
    optional int32 tradetype = 6; // 交易类型-1:投资者自营2:做市
}

message today_marketrunstepdetail{ 
    optional int32 autoid = 1; // 自增id
    optional int32 marketid = 2; //  
    optional int32 tradeweekday = 3; //  
    optional int32 sectionid = 4; // 从1开始往下编
    optional int32 runstep = 5; //  
    optional int32 startweekday = 6; // 开市时间
    optional string starttime = 7; // 起始时间(hh:mm)
    optional int32 endweekday = 8; // 休市时间
    optional string endtime = 9; // 结束时间(hh:mm)
}

message today_mmrelation_self{ 
    optional int32 quoterid = 1; // 报价商id其他做市关系，都设置为1
    optional int32 memberuserid = 2; // 经纪会员id
    optional int32 matchuserid = 3; // 接单做市会员id=经纪会员id
    optional string modifytime = 4; // 修改时间
    optional int32 modifierid = 5; // 修改人id
}

message today_ms_strategyinfo{ 
    optional int32 marketingstrategyid = 1; // 扩展策略id
    optional string marketingstrategyname = 2; // 扩展策略名称
    optional int32 marketingstrategytypeid = 3; // 扩展策略类型
    optional int32 datasrc = 4; // 数据来源-1:无2:交易成交通知3:订单仓单互转成交通知4:结算信号通知
    optional string marketingstategyparam = 5; // 扩展策略参数
    optional int32 isstop = 6; // 临时停用状态-0:未停止1:已停止
    optional string updatetime = 7; // 更新时间
}

message today_ms_zy_divideconfig{ 
    optional int32 brokeruserid = 1; // 经销商用户id
    optional int32 shipgoodsid = 2; // 发货商品id
    optional int32 mcuserid = 3; // 营销中心用户id
    optional int32 specuserid = 4; // 特许经销用户id
    optional double brokervalue = 5; // 经纪会员分润比率
    optional double mcvalue = 6; // 营销中心分润比率
    optional int32 brokeraccountid = 7; // 经销商做市资金账号
    optional int32 mcaccountid = 8; // 营销中心结算资金账号
    optional int32 specaccountid = 9; // 特许经销商结算资金账号
}

message trade_autoquote{ 
    optional int32 quoterid = 1; // 报价商id
    optional int32 goodsid = 2; // 商品id
    optional int32 buyorsell = 3; // 方向-0:买1:卖
    optional int64 quoteid = 4; // 报价单id(140+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 marketid = 5; // 市场id
    optional double price = 6; // 价格(报价模式为手动)
    optional int32 totalqty = 7; // 总量
    optional int32 qty = 8; // 剩余量
    optional int32 perqty = 9; // 单次量
    optional int32 tryinterval = 10; // 失败重发间隔(分)
    optional int32 quoteeffectivesecond = 11; // 委托有效时间(秒)
    optional int32 quotemode = 12; // 报价模式-1:人工报价2:自动报价
    optional int32 quotestatus = 13; //  
    optional int64 curorderid = 14; // 当前委托id
    optional string ordertime = 15; // 委托时间
    optional string expireddate = 16; // 报价有效日期(yyyymmdd)
    optional double limitprice = 17; // 最高买价/最低卖价
    optional double pricemove = 18; // 点差(买/卖)
    optional string tradedate = 19; // 交易日(yyyymmdd)
    optional int32 retcode = 20; // 返回码
}

message trade_autoquoteflow{ 
    optional int64 quoteid = 1; // 报价单id(140+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 quoterid = 3; // 报价商id
    optional int32 goodsid = 4; // 商品id
    optional int32 marketid = 5; // 市场id
    optional int32 buyorsell = 6; // 方向-0:买1:卖
    optional double price = 7; // 价格(报价模式为手动)
    optional int32 totalqty = 8; // 总量
    optional int32 qty = 9; // 剩余量
    optional int32 perqty = 10; // 单次量
    optional int32 tryinterval = 11; // 失败重发间隔(分)
    optional int32 quoteeffectivesecond = 12; // 委托有效时间(秒)
    optional int32 quotemode = 13; // 报价模式-1:人工报价2:自动报价
    optional int32 quotestatus = 14; //  
    optional int64 curorderid = 15; // 当前委托id
    optional string ordertime = 16; // 委托时间
    optional string expireddate = 17; // 报价有效日期(yyyymmdd)
    optional double limitprice = 18; // 最高买价/最低卖价
    optional double pricemove = 19; // 点差(买/卖)
    optional int32 retcode = 20; // 返回码
}

message trade_buymaxqty{ 
    optional int32 goodsid = 1; // 交易商品id(期权)
    optional int64 accountid = 2; // 资金账号id(自营账号)
    optional int32 userid = 3; // 用户id
    optional int32 marketid = 4; // 市场id
    optional int32 maxqty = 5; // 最大可下建仓量(扩展服务更新)
    optional int32 curholdqty = 6; // 当前持仓量(交易服务更新)
    optional int32 curorderqty = 7; // 当前委托量(交易服务更新)
    optional string updatetime = 8; // 更新时间
    optional int32 limittype = 9; // 限制类型-1:认购(看涨)2:认沽(看跌)
}

message trade_closedetail{ 
    optional int64 closeid = 1; // 平仓明细id(104+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 tradeid = 2; // 成交单号
    optional int64 opentradeid = 3; // 关联建仓成交单号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int64 accountid = 7; // 账号id
    optional int32 buyorsell = 8; // 方向-0:买1:卖
    optional double openprice = 9; // 建仓价格
    optional double holderprice = 10; // 持仓价格
    optional int32 closeqty = 11; // 平仓数量
    optional double closeprice = 12; // 平仓价格
    optional string closetime = 13; // 平仓时间
    optional int32 tradeproperty = 14; // 交易属性
    optional int32 optiontype = 15; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 16; // 权利金-[持仓单的权利金]
    optional int32 ispreexercise = 17; // 是否预申报-0:否1:是
    optional double preexerciseprice = 18; // 预申报价格
    optional int32 isconfirmexercise = 19; // 是否确认行权-0:否1:是
    optional string opentradedate = 20; // 建仓成交单交易日
    optional double releasecredit = 21; // 释放授信金额
}

message trade_dealsource{ 
    optional int64 dealsourceid = 1; // 源记录id(109+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 goodsid = 2; // 商品id
    optional int32 marketid = 3; // 市场id
    optional int64 sellaccountid = 4; // 卖方账号id
    optional int64 sourcetradeid = 5; // 源持仓单id
    optional double sourceprice = 6; // 源成交价
    optional int64 buyaccountid = 7; // 买方账号id
    optional int64 curtradeid = 8; // 当前持仓单id
    optional int64 deliveryid = 9; // 交割单号
    optional int32 isvalid = 10; // 是否有效-0:无效1:有效[交割或到期后置为无效]
    optional string updatetime = 11; // 更新时间
}

message trade_exercisedetail{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 marketid = 3; // 市场id
    optional int32 goodsid = 4; // 商品id
    optional int64 buyeraccountid = 5; // 买方账号id
    optional int64 selleraccountid = 6; // 卖方账号id
    optional int32 middleuserid = 7; // 融货方id
    optional int64 middleaccountid = 8; // 融货方资金账号
    optional double openprice = 9; // 行权价
    optional int32 holderqty = 10; // 持仓数量
    optional double premium = 11; // 权利金
    optional double marketprice = 12; // 市场价
    optional int32 optiontype = 13; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double buyerout = 14; // 买方应付
    optional double buyerin = 15; // 买方应收
    optional double sellerout = 16; // 卖方应付
    optional double sellerin = 17; // 卖方应收
    optional double middlein = 18; // 融货方应收
    optional int64 performancetemplateid = 19; // 履约计划模板id
    optional int32 handlestatus = 20; //  
    optional int32 performancestatus = 21; // 履约状态-1:未履约2:履约中3:履约完成
    optional int32 buyerhandlestatus = 22; // 买方处理状态-1:未处理2:处理成功3:处理失败
    optional int32 sellerhandlestatus = 23; // 卖方处理状态-1:未处理2:处理成功3:处理失败
    optional int32 middlehandlestatus = 24; // 融货方处理状态-1:未处理2:处理成功3:处理失败
}

message trade_goodsgroupmaxqty{ 
    optional int64 accountid = 1; // 资金账号id
    optional int32 goodsgroupid = 2; // 商品组id(品种id)
    optional int32 limittype = 3; // 限制类型-0:全部1:认购(看涨)2:认沽(看跌)
    optional int32 userid = 4; // 用户id
    optional int32 marketid = 5; // 市场id
    optional int32 maxqty = 6; // 最大可下建仓量(扩展服务更新)
    optional int32 curholdqty = 7; // 当前持仓量(交易服务更新)
    optional int32 curorderqty = 8; // 当前委托量(交易服务更新)
    optional string updatetime = 9; // 更新时间
}

message trade_holderdetail{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 marketid = 3; // 市场id
    optional int32 goodsid = 4; // 商品id
    optional int64 accountid = 5; // 账号id
    optional int32 buyorsell = 6; // 方向-0:买1:卖
    optional int32 openqty = 7; // 建仓数量
    optional int32 holderqty = 8; // 持仓数量
    optional int32 freezeqty = 9; // 冻结数量
    optional double openprice = 10; // 建仓价格
    optional double holderprice = 11; // 持仓价格
    optional double tradeamount = 12; // 成交金额
    optional double holderamount = 13; // 持仓金额
    optional double releaseamount = 14; // 释放持仓金额
    optional int32 holderdays = 15; // 剩余冻结天数
    optional string tradetime = 16; // 交易时间
    optional int32 tradeproperty = 17; // 交易属性
    optional int32 optiontype = 18; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 19; // 权利金
    optional int32 expiretype = 20; // 行权日类型-1:滚动行权2:固定日行权
    optional int32 expirecycle = 21; // 行权周期(天)-1:滚动行权时填写
    optional string expiredate = 22; // 行权日(yyyymmdd)-2:固定日行权时填写
    optional int32 ispreexercise = 23; // 是否预申报-0:否1:是2:不可行权
    optional double preexerciseprice = 24; // 预申报价格
    optional int32 isconfirmexercise = 25; // 是否确认行权-0:否1:是
    optional double holdercredit = 26; // 持仓授信金额
    optional double releaseholdercredit = 27; // 释放持仓授信金额
}

message trade_holderdetailbk{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string reckondate = 2; // 日照日期
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int32 goodsid = 5; // 商品id
    optional int64 accountid = 6; // 账号id
    optional int32 buyorsell = 7; // 方向-0:买1:卖
    optional int32 openqty = 8; // 建仓数量
    optional int32 holderqty = 9; // 持仓数量
    optional int32 freezeqty = 10; // 冻结数量
    optional double openprice = 11; // 建仓价格(权利金)
    optional double holderprice = 12; // 持仓价格
    optional double tradeamount = 13; // 成交金额
    optional double holderamount = 14; // 持仓金额
    optional double releaseamount = 15; // 释放持仓金额
    optional int32 holderdays = 16; // 持仓天数
    optional string tradetime = 17; // 交易时间
    optional int32 tradeproperty = 18; // 交易属性
    optional int32 optiontype = 19; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 20; // 权利金
    optional int32 expiretype = 21; // 行权日类型-1:滚动行权2:固定日行权
    optional int32 expirecycle = 22; // 行权周期(天)-1:滚动行权时填写
    optional string expiredate = 23; // 行权日(yyyymmdd)-2:固定日行权时填写
    optional int32 ispreexercise = 24; // 是否预申报-0:否1:是
    optional double preexerciseprice = 25; // 预申报价格
    optional int32 isconfirmexercise = 26; // 是否确认行权-0:否1:是
    optional double holdercredit = 27; // 持仓授信金额
    optional double releaseholdercredit = 28; // 释放持仓授信金额
}

message trade_holderdetailtmp{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 marketid = 3; // 市场id
    optional int32 goodsid = 4; // 商品id
    optional int64 accountid = 5; // 账号id
    optional int32 buyorsell = 6; // 方向-0:买1:卖
    optional int32 openqty = 7; // 建仓数量
    optional int32 holderqty = 8; // 持仓数量
    optional int32 freezeqty = 9; // 冻结数量
    optional double openprice = 10; // 建仓价格(权利金)
    optional double holderprice = 11; // 持仓价格
    optional double tradeamount = 12; // 成交金额
    optional double holderamount = 13; // 持仓金额
    optional double releaseamount = 14; // 释放持仓金额
    optional int32 holderdays = 15; // 持仓天数
    optional string tradetime = 16; // 交易时间
    optional int32 tradeproperty = 17; // 交易属性
    optional int32 optiontype = 18; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 19; // 权利金
    optional int32 expiretype = 20; // 行权日类型-1:滚动行权2:固定日行权
    optional int32 expirecycle = 21; // 行权周期(天)-1:滚动行权时填写
    optional string expiredate = 22; // 行权日(yyyymmdd)-2:固定日行权时填写
    optional int32 ispreexercise = 23; // 是否预申报-0:否1:是
    optional double preexerciseprice = 24; // 预申报价格
    optional int32 isconfirmexercise = 25; // 是否确认行权-0:否1:是
    optional double holdercredit = 26; // 持仓授信金额
    optional double releaseholdercredit = 27; // 释放持仓授信金额
}

message trade_holdtransferapply{ 
    optional int64 applyid = 1; // 申请id(自增id　seq_trade_holdtransferapply)
    optional int32 outuserid = 2; // 转出方用户id
    optional int64 outaccountid = 3; // 转出方资金id
    optional int64 inuserid = 4; // 转入方用户id
    optional int64 inaccountid = 5; // 转入方资金id
    optional int32 goodsid = 6; // 商品id
    optional int32 marketid = 7; // 市场id
    optional int32 buyorsell = 8; // 买卖-0:买1:卖
    optional int32 qty = 9; // 转让数量
    optional double transferprice = 10; // 转让价格
    optional double holdprice = 11; // 持仓价格[所有权]
    optional int32 applystatus = 12; // 状态-0:未提交1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败6:已撤销
    optional int32 tradeproperty = 13; // 交易属性
    optional int32 freezedays = 14; // 冻结天数(t+n)
    optional string remark = 15; // 备注
    optional string retremark = 16; // 返回信息
    optional int32 retcode = 17; // 错误代码
    optional string tradedate = 18; // 交易日
    optional int32 applicantid = 19; // 申请人id
    optional string applytime = 20; // 申请时间
    optional int32 auditorid = 21; // 审核人
    optional string audittime = 22; // 审核时间
}

message trade_holdtransferdetail{ 
    optional int64 applyid = 1; // 申请id(自增id　seq_trade_holdtransferapply)
    optional int64 outorderid = 2; // 转出委托id
    optional int64 inorderid = 3; // 转入委托id
    optional int32 goodsid = 4; // 商品id
    optional int32 marketid = 5; // 市场id
    optional double transferprice = 6; // 转让价格
    optional double holdprice = 7; // 持仓价格[所有权]
    optional int32 freezedays = 8; // 冻结天数(t+n)
    optional int32 handlestatus = 9; // 处理状态-1:未处理2:转出方处理完成3:转入方处理完成4:处理成功
}

message trade_matchdetail{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 buyorderid = 3; // 买方委托单号
    optional int64 buyaccountid = 4; // 买方账号id[报价币种]
    optional int64 sellorderid = 5; // 卖方委托单号
    optional int64 sellaccountid = 6; // 卖方账号id[报价币种]
    optional int32 receiveflag = 7; // 接单标识-0:无1:买方2:卖方
    optional int32 marketid = 8; // 市场id
    optional int32 goodsid = 9; // 商品id
    optional double matchprice = 10; // 配对价格
    optional int32 matchqty = 11; // 配对数量
    optional string matchtime = 12; // 配对时间
    optional int32 matchstatus = 13; // 配对状态-1:配对成功2:已成交
    optional int32 matchtype = 14; // 配对类型-1:正常委托2:风控斩仓
    optional int32 tradeproperty = 15; // 交易属性
    optional int32 ismain = 16; // 是否主单-0:不是1:是[预售集采]
    optional int32 isself = 17; // 是否自成交-0:不是1:是[受托竞价]
    optional int32 buytradeflag = 18; // 买单成交标志-0:初始化1:成交处理2:成交完成
    optional int32 selltradeflag = 19; // 卖单成交标志-0:初始化1:成交处理2:成交完成
    optional int32 quoterid = 20; // 报价商id
    optional double quoterfreezeprice = 21; // 报价商冻结价格
    optional int32 buytradelogticket = 22; // 买单消息流水号
    optional int32 selltradelogticket = 23; // 卖单消息流水号
    optional int32 buygcaccountid = 24; // 买方账号id[合约币种]
    optional int32 sellgcaccountid = 25; // 卖方账号id[合约币种]
}

message trade_matchresult{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional int64 accountid = 3; // 资金账户-币币交易填账户，其它为0
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int32 tradeflag = 6; // 成交标志-0:初始化1:成交处理2:成交完成
    optional int32 tradelogticket = 7; // 消息流水号
}

message trade_memberacceptorderrelated{ 
    optional int64 tradeid = 1; // 成交单id
    optional int64 marketquoteorderid = 2; // 做市报价单id
    optional int64 memberacceptorderid = 3; // 会员接单委托id
    optional int32 marketid = 4; // 市场id
    optional string tradedate = 5; // 交易日(yyyymmdd)
    optional int32 goodsid = 6; // 商品id
    optional string createtime = 7; // 创建时间
}

message trade_memberposition{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional int32 marketid = 3; // 市场id
    optional double buycurpositionqty = 4; // 持仓金额
    optional int32 buyfreezeqty = 5; // 买持仓冻结数量
    optional int32 sellcurpositionqty = 6; // 持仓数量
    optional int32 sellfreezeqty = 7; // 卖持仓冻结数量
    optional int32 tradeproperty = 8; // 交易属性
}

message trade_ordercancel{ 
    optional int64 cancelorderid = 1; // 撤单id(102+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 oldorderid = 2; // 原委托单号id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int64 accountid = 4; // 账户id[报价币种]
    optional int32 marketid = 5; // 市场id
    optional int32 goodsid = 6; // 商品id
    optional int32 buyorsell = 7; // 买卖-0:买1:卖
    optional int32 operatetype = 8; //  
    optional int32 tradeqty = 9; // 撤单数量
    optional int32 tradeproperty = 10; // 交易属性
    optional int32 handlestatus = 11; // 处理状态-1:待处理2:处理成功3:处理失败4:已拒绝
    optional int32 ordersrc = 12; // 委托来源-1:客户端2:管理端3:风控服务4:交割服务5:交易服务6:交易日结
    optional string actiontime = 13; // 委托时间
    optional int32 sessionid = 14; // 会话id
    optional string clientticket = 15; // 客户端流水号
    optional int32 clienttype = 16; //  
    optional int32 retcode = 17; // 错误代码
    optional string remark = 18; // 备注
    optional int32 gcaccountid = 19; // 账户id[合约币种]
    optional int32 cancelstatus = 20; // 撤销状态[场外期权]-1:接收报文2:发送报文成功3:撤单成功4:撤单失败
}

message trade_orderdetail{ 
    optional int64 orderid = 1; // 委托单号(100+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 buildtype = 3; // 委托单据类型-1:建仓2:平仓3:先平后建
    optional int64 preorderid = 4; // 关联预埋单号(止盈止损单时填写)
    optional int64 cancelorderid = 5; // 撤单单号(撤单时填写)
    optional int64 relatedid = 6; // 关联单号(交割单)
    optional int32 marketid = 7; // 市场id
    optional int32 goodsid = 8; // 商品id
    optional int64 accountid = 9; // 账户id[报价币种]
    optional int32 memberuserid = 10; // 所属会员userid
    optional int32 buyorsell = 11; // 买卖-0:买1:卖
    optional int32 pricemode = 12; // 取价方式-1:市价2:限价
    optional double orderprice = 13; // 委托价格
    optional double marketmaxsub = 14; // 市价最大偏移范围
    optional int32 orderqty = 15; // 委托数量
    optional int32 tradeqty = 16; // 成交数量
    optional int32 cancelqty = 17; // 撤单数量
    optional int32 openqty = 18; // 开仓数量(先建后平操作,需要记录)
    optional int32 closeqty = 19; // 平仓数量(先建后平操作需要记录)
    optional int32 opentradeqty = 20; // 开仓成交数量(先建后平操作,需要记录)
    optional int32 closetradeqty = 21; // 平仓成交数量(先建后平操作,需要记录)
    optional double freezemargin = 22; // 冻结保证金(冻结交易金额)
    optional double unfreezemargin = 23; // 解冻保证金
    optional double freezecharge = 24; // 冻结手续费
    optional double unfreezecharge = 25; // 解冻手续费
    optional double openfreezecharge = 26; // 开仓冻结手续费(先建后平操作,需要记录)
    optional double closefreezecharge = 27; // 平仓冻结手续费(先建后平操作,需要记录)
    optional double openunfreezecharge = 28; // 开仓解冻手续费(先建后平操作,需要记录)
    optional double closeunfreezecharge = 29; // 平仓解冻手续费(先建后平操作,需要记录)
    optional int32 validtype = 30; // 有效类型-1当日有效2本周有效3指定日期有效4一直有效5指定时间有效
    optional string validtime = 31; // 有效期限
    optional int32 volumetype = 32; //  
    optional int32 operatetype = 33; //  
    optional string ordertime = 34; // 委托时间
    optional int32 ordersrc = 35; //  
    optional int32 orderstatus = 36; //  
    optional int64 operatorid = 37; // 登录账号(loginid)
    optional string updatetime = 38; // 更新时间
    optional string clientordertime = 39; // 客户端委托时间
    optional string clientticket = 40; // 客户端流水号
    optional string uuid = 41; // 发起端唯一id
    optional int32 clienttype = 42; //  
    optional int32 retcode = 43; // 错误代码
    optional int32 tradeproperty = 44; // 交易属性
    optional int32 listingselecttype = 45; // 挂牌点选类型-1:挂牌2:摘牌3:先摘后挂
    optional int32 delistingtype = 46; // 摘牌类型-1:价格最优2:点选成交
    optional int32 marginalgorithm = 47; // 保证金收取方式1：比率2：固定
    optional double marginvalue = 48; // 即市保证金设置值
    optional int32 openfeealgorithm = 49; // 建仓手续费收取方式1：比率2：固定
    optional double openmemberchargevalue = 50; // 建仓会员手续费设置值
    optional double openexchagechargevalue = 51; // 建仓交易所手续费设置值
    optional int32 closefeealgorithm = 52; // 平仓手续费收取方式1：比率2：固定
    optional double closememberchargevalue = 53; // 平仓会员手续费设置值
    optional double closeexchagechargevalue = 54; // 平仓交易所手续费设置值
    optional int32 optiontype = 55; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 56; // 权利金
    optional int32 ispreexercise = 57; // 是否预申报-0:否1:是
    optional double preexerciseprice = 58; // 预申报价格
    optional int32 isconfirmexercise = 59; // 是否确认行权-0:否1:是
    optional int64 quoteid = 60; // 报价单id
    optional int32 gcaccountid = 61; // 账户id[合约币种]
    optional int32 sessionid = 62; // 会话id
}

message trade_preposdetail{ 
    optional int64 preorderid = 1; //  
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int64 orderid = 3; // 关联委托单号-委托单带止盈止损时填写关联委托单号，正常预埋单保持为空
    optional int32 ordertype = 4; // 委托单据类型-1:建仓2:平仓3:先平后建
    optional int64 accountid = 5; // 账户id[报价币种]
    optional int32 goodsid = 6; // 商品id
    optional string ordertime = 7; // 委托时间
    optional int32 buyorsell = 8; // 买卖方向-0:买1:卖
    optional double triggerprice = 9; // 触发值
    optional int32 triggeroperator = 10; // 触发条件-1:大于等于2:小于等于
    optional int32 pricemode = 11; // 取价方式-1:市价2:限价
    optional double orderprice = 12; // 委托价格
    optional int32 orderqty = 13; // 委托数量
    optional double spprice = 14; // 止盈价格[ 作废]
    optional double slprice = 15; // 止损价格[ 作废]
    optional int32 validtype = 16; // 有效类型-1:当日有效
    optional string validtime = 17; // 有效期限
    optional int32 preorderstatus = 18; // 预埋状态-1:待激活2:已激活3:已撤销
    optional int32 ordersrc = 19; // 委托来源
    optional int32 retcode = 20; // 错误代码
    optional string updatetime = 21; // 更新时间
    optional string clientticket = 22; // 客户端流水号
    optional string uuid = 23; // 发起端唯一id
    optional string clientordertime = 24; // 客户端委托时间
    optional int32 clienttype = 25; //  
    optional string remark = 26; // 备注
    optional int32 tradeproperty = 27; // 交易属性
    optional int32 listingselecttype = 28; // 挂牌点选类型-1:挂牌2:摘牌3:先摘后挂
    optional int32 delistingtype = 29; // 摘牌类型-1:价格最优[预埋只支持1:价格最优]
    optional int32 triggertype = 30; // 触发类型-1:最新成交价2买一价3:卖一价
    optional int32 sessionid = 31; // 会话id
    optional int32 gcaccountid = 32; // 账户id[合约币种]
}

message trade_quotedetail{ 
    optional int32 quoterid = 1; // 报价商id
    optional int32 goodsid = 2; // 商品id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional string quotetime = 4; // 报价时间
    optional int64 buyorderid = 5; // 买价委托id(使用委托单规则生成)
    optional double bid = 6; // 买价
    optional int32 buyqty = 7; // 买量
    optional int32 buycurqty = 8; // 当前买量
    optional int64 sellorderid = 9; // 卖价委托id(使用委托单规则生成)
    optional double ask = 10; // 卖价
    optional int32 sellqty = 11; // 卖量
    optional int32 sellcurqty = 12; // 当前卖量
    optional int32 quoteeffectivesecond = 13; // 行情有效时间(秒)
    optional int32 quotemode = 14; // 报价模式-1:人工报价2:自动报价
    optional double topbuyprice = 15; // 最高买价
    optional double bottomsellprice = 16; // 最低卖价
    optional double buymove = 17; // 买价点差整数可零正负
    optional double sellmove = 18; // 卖价点差整数可零正负
    optional double freezeprice = 19; // 冻结资金价格
    optional double freezeamount = 20; // 剩余冻结资金
    optional int64 buyquoteid = 21; // 买报价单id
    optional int64 sellquoteid = 22; // 卖报价单id
    optional int32 quotesource = 23; // 报价来源-0:外部行情1:管理端手动报价2:自动报价服务报价
    optional int32 reckunfreezesellqty = 24; // 结算解冻卖量
}

message trade_quotedetailflow{ 
    optional int64 autoid = 1; // 实时行情流水号(140+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 quoterid = 2; // 报价商id
    optional int32 goodsid = 3; // 商品id
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional string quotetime = 5; // 报价时间
    optional int64 buyorderid = 6; // 买价委托id(使用委托单规则生成)
    optional double bid = 7; // 买价
    optional int32 buyqty = 8; // 买量
    optional int32 buycurqty = 9; // 当前买量
    optional int64 sellorderid = 10; // 卖价委托id(使用委托单规则生成)
    optional double ask = 11; // 卖价
    optional int32 sellqty = 12; // 卖量
    optional int32 sellcurqty = 13; // 当前卖量
    optional int32 quoteeffectivesecond = 14; // 行情有效时间(秒)
    optional int32 quotemode = 15; // 报价模式-1:人工报价2:自动报价
    optional int32 isactive = 16; //  
    optional double topbuyprice = 17; // 最高买价
    optional double bottomsellprice = 18; // 最低卖价
    optional double buymove = 19; // 买价点差整数可零正负
    optional double sellmove = 20; // 卖价点差整数可零正负
    optional double freezeprice = 21; // 冻结资金价格
    optional double freezeamount = 22; // 剩余冻结资金
    optional int64 buyquoteid = 23; // 买报价单id
    optional int64 sellquoteid = 24; // 卖报价单id
    optional int32 quotesource = 25; // 报价来源-0:外部行情1:管理端手动报价2:自动报价服务报价
    optional int32 reckunfreezesellqty = 26; // 结算解冻卖量
    optional int64 accountid = 27; // 报价资金账号
}

message trade_quotedetailnew{ 
    optional int32 quoterid = 1; // 报价商id
    optional int32 goodsid = 2; // 商品id
    optional int32 buyorsell = 3; // 买卖方向-0:买1:卖
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional string quotetime = 5; // 报价时间
    optional int64 orderid = 6; // 委托单id(使用委托单规则生成)
    optional int64 quoteid = 7; // 报价单id(自动报价)
    optional double price = 8; // 价格
    optional int32 qty = 9; // 数量
    optional int32 curqty = 10; // 当前量
    optional double move = 11; // 点差整数可零正负
    optional double limitprice = 12; // 最高买价/最低卖价
    optional int32 quotesource = 13; // 报价来源-0:外部行情1:管理端手动报价2:自动报价服务报价3:交易接口
    optional int32 quoteeffectivesecond = 14; // 行情有效时间(秒)
    optional string expireddate = 15; // 有效时间(根据秒算出实际时间)
    optional double freezeamount = 16; // 剩余冻结资金(所有权)
    optional int32 freezestatus = 17; // 冻结状态(所有权)-1:无冻结2:已冻结3:已解冻
    optional int32 pricetype = 18; // 报价类型-1:不报价2:手工报价
    optional int32 qtytype = 19; // 报量类型-1:随机量2:手工报量3:延用量
    optional int32 isvalid = 20; // 是否撤销-0:未撤销1:已撤销
    optional int32 marketid = 21; // 市场id
    optional int32 tradeproperty = 22; // 交易属性-1:收益权(可做空)2:所有权(不可做空)3:期权4:现货5:参考行情
    optional double freezeprice = 23; // 冻结资金价格
    optional string serialnumber = 24; // 外部流水号
    optional int64 accountid = 25; // 报价资金账号
}

message trade_tradedetail{ 
    optional int64 tradeid = 1; // 成交单号(101+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 buyorsell = 2; // 方向-0:买1:卖
    optional int64 orderid = 3; // 委托单号
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int64 accountid = 5; // 账户id[报价币种]
    optional int32 goodsid = 6; // 商品id
    optional int32 marketid = 7; // 市场id
    optional int32 memberuserid = 8; // 会员id个人投资者需要填写
    optional int64 matchaccountid = 9; // 对手账号id
    optional string tradetime = 10; // 成交时间
    optional double tradeprice = 11; // 成交价格
    optional int32 tradeqty = 12; // 成交数量
    optional double tradeamount = 13; // 成交金额[账户币种，用于所有权]
    optional double closepl = 14; // 平仓盈亏
    optional int32 intclosepl = 15; // 整型盈亏(用于交易结算试算平衡-收益权)
    optional double opencharge = 16; // 建仓手续费(支付总手续费=(交易所比率+会员比率)*成交金额)
    optional double closecharge = 17; // 平仓手续费(支付总手续费=(交易所比率+会员比率)*成交金额)
    optional int32 tradetype = 18; //  
    optional int32 buildtype = 19; // 委托单据类型1:建仓2:平仓3:先平后建
    optional int32 openqty = 20; // 开仓数量(先建后平操作需要记录)
    optional int32 closeqty = 21; // 平仓数量(先建后平操作需要记录)
    optional int32 status = 22; // 处理状态-1:待处理2:已处理3:处理失败
    optional int32 isreckoned = 23; // 是否结算-0:未结算1:已结算
    optional int32 tradeproperty = 24; // 交易属性
    optional int32 openfeealgorithm = 25; // 建仓手续费收取方式1：比率2：固定
    optional double openmemberchargevalue = 26; // 建仓会员手续费设置值
    optional double openexchagechargevalue = 27; // 建仓交易所手续费设置值
    optional int32 closefeealgorithm = 28; // 平仓手续费收取方式1：比率2：固定
    optional double closememberchargevalue = 29; // 平仓会员手续费设置值
    optional double closeexchagechargevalue = 30; // 平仓交易所手续费设置值
    optional int32 optiontype = 31; // 期权类型-1:认购(看涨)2:认沽(看跌)
    optional double premium = 32; // 权利金-[持仓单的权利金]
    optional int32 ispreexercise = 33; // 是否预申报-0:否1:是
    optional double preexerciseprice = 34; // 预申报价格
    optional int32 isconfirmexercise = 35; // 是否确认行权-0:否1:是
    optional int32 ismain = 36; // 是否主单-0:不是1:是
    optional int64 performanceplanid = 37; // 履约计划id[期权]
    optional int32 performancestatus = 38; // 履约状态[期权]-0:无履约1:未履约2:履约中3:履约完成
    optional double creditamount = 39; // 授信金额
    optional int64 gcaccountid = 40; // 账户id[合约币种]
    optional double closepl2 = 41; // 平仓盈亏[逐笔]
    optional int64 relatedouttradeid = 42; // 关联外部成交单id
}

message tradeconfigtmp{ 
    optional int32 tradeconfigtmpid = 1; // 交易配置模板id(seq_tradeconfigtmp)
    optional int32 tradeconfigtmptype = 2; // 交易配置模板类型-1:保证金2:手续费3:汇率
    optional string tradeconfigtmpname = 3; // 交易配置模板名称
    optional string remark = 4; // 备注
    optional string updatetime = 5; // 更新时间
    optional int32 modifierid = 6; // 修改人
    optional int32 areauserid = 7; // 所属机构
    optional int32 basiccurrencyid = 8; // 基本币种id[汇率]-目标币种
    optional int64 mainaccountid = 9; // 主账户id
}

message tradefeeconfig{ 
    optional int32 tradepropertyid = 1; // 交易属性类型id-1:收益权2:所有权
    optional int32 tradefeedescriptionid = 2; // 交易费用说明id
    optional int32 ismandatory = 3; // 是否必填-0:不必填1：必填
    optional int32 ispersonalized = 4; // 是否可个性化-0：不可个性化1：可个性化
}

message tradefeedescription{ 
    optional int32 tradefeedescriptionid = 1; // 交易费用说明id
    optional int32 tradefeeid = 2; //  
    optional string tradefeename = 3; // 费用名称
    optional string remark = 4; // 描述
}

message tradefeetmpconfig{ 
    optional int32 tradefeetmpid = 1; // 手续费模板id
    optional int32 goodsid = 2; // 商品id[只到品种的配置则设置为0]
    optional int32 goodsgroupid = 3; // 商品组(品种)id
    optional int32 feealgorithm = 4; // 费用算法-1:比率2.固定
    optional double openfeevalue = 5; // 开仓收取值
    optional double closefeevalue = 6; // 平昨收取值(平仓)
    optional double closetodayfeevalue = 7; // 平今收取值
    optional string remark = 8; // 备注
    optional string updatetime = 9; // 更新时间
}

message tradelog{ 
    optional int64 logticket = 1; // 日志id(106+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 funcode = 3; // 功能码
    optional int32 typeid = 4; // 类型id
    optional int32 retcode = 5; // 返回码
    optional int64 accountticket = 6; // 帐号id
    optional int64 orderticket = 7; // 单据id
    optional bytes logcontent = 8; // 日志内容
    optional int32 messagestatus = 9; // 状态-1:待发送2:发送完成
    optional string createtime = 10; // 创建时间
    optional string remark = 11; // 备注
    optional string clientticket = 12; // 客户端id
    optional int32 marketid = 13; // 市场id
}

message trademargintmpconfig{ 
    optional int32 trademargintmpid = 1; // 保证金模板id[tradeconfigtmptype=1]
    optional int32 goodsid = 2; // 商品id[只到品种的配置则设置为0]
    optional int32 goodsgroupid = 3; // 商品组(品种)id
    optional int32 collectmethod = 4; // 收取方式-1:绝对收取
    optional int32 marginalgorithm = 5; // 保证金算法-1:比率2.固定
    optional int32 currencyid = 6; // 货币id[固定]-作废
    optional double longmarginvalue = 7; // 多头保证金收取值
    optional double shormargintvalue = 8; // 空头保证金收取值
    optional string remark = 9; // 备注
    optional string updatetime = 10; // 更新时间
    optional int32 modifierid = 11; // 修改人
}

message tradeposition{ 
    optional int64 accountid = 1; // 账号id
    optional int32 goodsid = 2; // 商品id
    optional int32 holdertype = 3; // 持仓类别-1:单边持仓2:双边持仓
    optional int32 buypositionqty = 4; // 买期初持仓数量
    optional double buyholderamount = 5; // 买期初持仓总金额[商品币种]
    optional int32 buycurpositionqty = 6; // 买当前持仓总数量
    optional double buycurholderamount = 7; // 买当前持仓总金额[商品币种]
    optional int32 buyfrozenqty = 8; // 买持仓冻结数量
    optional int32 buyotherfrozenqty = 9; // 买持仓其他冻结数量(交割冻结)
    optional int32 buyopenreqqty = 10; // 买开仓申请数量(用于比较最大持仓数量)
    optional int32 buyopentotalqty = 11; // 买开仓总数量
    optional int32 buyclosetotalqty = 12; // 买平仓总数量
    optional int32 sellpositionqty = 13; // 卖期初持仓数量
    optional double sellholderamount = 14; // 卖期初持仓总金额[商品币种]
    optional int32 sellcurpositionqty = 15; // 卖当前持仓数量
    optional double sellcurholderamount = 16; // 卖当前持仓总金额[商品币种]
    optional int32 sellfrozenqty = 17; // 卖持仓冻结
    optional int32 sellotherfrozenqty = 18; // 卖持仓其他冻结(交割冻结)
    optional int32 sellopenreqqty = 19; // 卖开仓申请数量(用于比较最大持仓数量)
    optional int32 sellopentotalqty = 20; // 卖开仓总数量
    optional int32 sellclosetotalqty = 21; // 卖平仓总数量
    optional double usedmargin = 22; // 占用保证金[商品币种]
    optional int32 tradeproperty = 23; // 交易属性
    optional int32 buytnqty = 24; // 买t+n冻结总量
    optional int32 buytnusedqty = 25; // 买t+n使用量(可以使用t+n的冻结数量)
    optional int32 selltnqty = 26; // 卖t+n冻结总量
    optional int32 selltnusedqty = 27; // 卖t+n使用量(可以使用t+n的冻结数量)
    optional int32 buycurtdposition = 28; // 买期末今日头寸
    optional int32 buyfretdposition = 29; // 买冻结今日头寸
    optional int32 sellcurtdposition = 30; // 卖期末今日头寸
    optional int32 sellfretdposition = 31; // 卖冻结今日头寸
}

message tradepositionlog{ 
    optional int64 autoid = 1; // 流水序号(自增id)-seq_tradepositionlog
    optional int64 accountid = 2; // 账号id
    optional int32 goodsid = 3; // 商品id
    optional int32 buyorsell = 4; // 方向-0:买1:卖
    optional int32 changetype = 5; // 变动类型
    optional int64 relatedorderid = 6; // 关联单号
    optional double changeqty = 7; // 变动数量交割成功数量
    optional double beforeqty = 8; // 变动前数量
    optional double afterqty = 9; // 变动后数量
    optional string createtime = 10; // 发生时间
    optional int32 tradeproperty = 11; // 交易属性
    optional string remark = 12; // 备注
}

message tradepositionlog2{ 
    optional int64 serialnumber = 1; // 流水id
    optional int32 suborderindex = 2; // 子指令序号
    optional int64 accountid = 3; // 账号id
    optional int32 goodsid = 4; // 商品id
    optional int32 buyorsell = 5; // 方向-0:买1:卖
    optional int32 oppositiontype = 6; // 操作头寸类型-1:头寸2:持仓金额3:其它头寸4:净头寸5:委托(开仓申请数量)
    optional int32 changetype = 7; // 变动类型-accountcmdop
    optional int64 relatedorderid = 8; // 关联单号
    optional double changeqty = 9; // 变动数量交割成功数量
    optional double beforeqty = 10; // 变动前数量
    optional double afterqty = 11; // 变动后数量
    optional string createtime = 12; // 发生时间
    optional int32 tradeproperty = 13; // 交易属性
    optional string remark = 14; // 备注
    optional int32 marketid = 15; // 市场id
    optional string tradedate = 16; // 交易日
}

message traderatetmpconfig{ 
    optional int32 traderatetmpid = 1; // 汇率模板id
    optional int32 oricurrencyid = 2; // 源币种id-商品币种
    optional double exchangerate = 3; // 汇率
    optional string updatetime = 4; // 更新时间
    optional int32 modifierid = 5; // 修改人
    optional string remark = 6; // 备注
}

message traderuleconfig{ 
    optional int32 trademodeid = 1; // 交易模式
    optional int32 ruleid = 2; //  
    optional int32 ismandatory = 3; // 是否必填-0:不必填1：必填
    optional int32 ispersonalized = 4; // 是否可个性化-0：不可个性化1：可个性化
}

message traderuledescription{ 
    optional int32 ruleid = 1; //  
    optional string rulename = 2; // 规则名称
    optional string regexpress = 3; // 正则表达式
    optional double defaultvalue = 4; // 默认值
    optional string remark = 5; // 备注
}

message tradewrposition{ 
    optional int64 wrpositionid = 1; // 订单仓单头寸id(206+unix秒时间戳(10位)+xxxxxx)
    optional int32 wruserid = 2; // 持有人id
    optional int64 accountid = 3; // 资金账号id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 goodsid = 6; // 商品id
    optional int32 brandid = 7; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 8; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 9; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 10; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 11; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 12; // 总数量
    optional int32 increaseqty = 13; // 今日增加数量
    optional int32 decreaseqty = 14; // 今日减少数量
    optional int32 freezeqty = 15; // 总冻结数量
    optional int32 relatedqty = 16; // 关联数量
    optional string modifytime = 17; // 修改时间
    optional int32 modifierid = 18; // 修改人
}

message tradewrpositionlog{ 
    optional int64 logid = 1; // 订单仓单头寸流水id(207+unix秒时间戳(10位)+xxxxxx)
    optional int32 logindex = 2; // 流水序号(自增id)-
    optional int32 goodsid = 3; // 交易商品id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 wruserid = 11; // 持有人id
    optional int32 changetype = 12; // 变动类型-101冻结102最大冻结103解冻104增加105减少
    optional int64 relatedorderid = 13; // 关联单号
    optional int32 changeqty = 14; // 变动数量交割成功数量
    optional int32 beforeqty = 15; // 变动前数量
    optional int32 afterqty = 16; // 变动后数量
    optional string createtime = 17; // 发生时间
    optional int32 businesscode = 18; // 业务编号
}

message tradewrpositionlog2{ 
    optional int32 serialnumber = 1; // 流水id
    optional int32 suborderindex = 2; // 子指令序号
    optional int64 accountid = 3; // 账号id
    optional int32 goodsid = 4; // 交易商品id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int64 wrfactortypeid = 6; // 仓单要素类型id
    optional int32 brandid = 7; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 8; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 9; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 10; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 11; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 wruserid = 12; // 持有人id
    optional int64 relatedorderid = 13; // 关联单号
    optional int32 changeqty = 14; // 变动数量交割成功数量
    optional int32 oppositiontype = 15; // 操作头寸类型-1:头寸
    optional int32 changetype = 16; // 变动类型-accountcmdop
    optional int32 businesscode = 17; // 业务编号
    optional int32 beforeqty = 18; // 变动前数量
    optional int32 afterqty = 19; // 变动后数量
    optional string createtime = 20; // 发生时间
    optional int32 marketid = 21; // 市场id
    optional string tradedate = 22; // 交易日
}

message updatepositionapply{ 
    optional int64 applyid = 1; // 申请id(seq_updatepositionapply)
    optional string tradedate = 2; // 交易日
    optional int32 userid = 3; // 用户id
    optional int64 accountid = 4; // 资金账户id
    optional int32 goodsid = 5; // 商品id
    optional int64 buildtype = 6; // 开平标志-0:无1:建仓2:平仓
    optional int32 closetype = 7; // 平仓方式-0:无1:平今2:平昨
    optional int32 buyorsell = 8; // 买卖-0:买1:卖
    optional double price = 9; // 价格[商品币种]
    optional int32 qty = 10; // 数量
    optional string remark = 11; // 备注
    optional int32 applystatus = 12; // 状态-0:未提交1:待审核2:审核中3:审核通过4:审核拒绝5:审核失败6:已撤销
    optional int32 applicantid = 13; // 申请人id
    optional string applytime = 14; // 申请时间
    optional int32 auditorid = 15; // 审核人
    optional string audittime = 16; // 审核时间
}

message updateversion{ 
    optional string versionnum = 1; // 版本号
    optional string filename = 2; // 文件名
    optional string updatetime = 3; // 更新时间
}

message useraccount{ 
    optional int32 userid = 1; // 用户id
    optional int32 usertype = 2; // 账户类型-1:交易所2:机构3:会员子机构4:经纪人5:投资者
    optional int32 modifystatus = 3; // 变更状态1未变更2变更中3变更待审核4变更待复核(投资者)
    optional string accountname = 4; // 账户名称(机构名称)
    optional int32 parentuserid = 5; // 所属机构id
    optional int32 broker = 6; // 所属经纪人id
    optional string subarealevelpath = 7; // 子机构层级路径(逗号分隔,首尾加逗号)
    optional int32 refereeuserid = 8; // 推荐人id
    optional int32 memberuserid = 9; // 所属会员id
    optional int32 accountstatus = 10; // 账户状态-1:待激活2:待审核3:待复审4:正常5:审核拒绝6:注销
    optional int32 reckonaccountid = 11; // 默认结算资金账号id(机构分润使用)作废
    optional string createtime = 12; // 创建时间
    optional int32 creatorid = 13; // 创建人
    optional string audittime = 14; // 审核时间
    optional int32 audituserid = 15; // 审核人
    optional string auditremark = 16; // 审核备注
    optional string canceltime = 17; // 销户时间
    optional int32 canceluserid = 18; // 销户人
    optional string modifytime = 19; // 修改时间
    optional int32 modifierid = 20; // 修改人
    optional string modifyremark = 21; // 变更备注
    optional int32 maxinvestornum = 22; // 最大用户数(经纪会员下投资者个数)
    optional int32 hasauth = 23; // 是否已实名认证-0:未认证1:已认证2:已提交(待审核)3:已拒绝
}

message userauditconfig{ 
    optional int32 grouptype = 1; // 分组类型-1:投资者开户免复审会员
    optional int32 userid = 2; // 用户id
}

message userauthinfo{ 
    optional string authid = 1; // 三方认证iid-手机号时存储加密串
    optional int32 authtype = 2; // 三方认证类型-1:微信2:支付宝3:手机号4:管理员账号
    optional int32 loginid = 3; // 登陆账号
    optional int32 userid = 4; // 用户id
    optional string authname = 5; // 三方认证i昵称
    optional int32 isvalid = 6; // 是否有效-0:无效1:有效
}

message usercancelapply{ 
    optional int32 autoid = 1; // 流水号(autoid)
    optional int32 userid = 2; // 用户id
    optional string imageurl = 3; // 图片地址
    optional int32 applystatus = 4; // 申请状态-1:待审核2:审核中3:审核成功4:审核拒绝5:审核失败
    optional string applytime = 5; // 申请时间
    optional int32 auditid = 6; // 审核人
    optional string audittime = 7; // 审核时间
    optional string auditremark = 8; // 审核备注
    optional int32 handlestatus = 9; // 处理状态-
}

message usergroup{ 
    optional int32 autoid = 1; // 自增id
    optional string groupname = 2; // 用户分组名称
    optional int32 areauserid = 3; // 所属机构id
    optional int32 customertype = 4; // 风险率客户类别
    optional string createtime = 5; // 创建时间
    optional int32 creatorid = 6; // 创建人
}

message usergroupdetail{ 
    optional int32 userid = 1; // 用户id
    optional int32 usergroupid = 2; // 用户分组id
    optional string createtime = 3; // 创建时间
    optional int32 creatorid = 4; // 创建人
}

message usergrouptradeconfig{ 
    optional int32 autoid = 1; // 自增id
    optional int32 usergroupid = 2; // 用户分组id(0的为会员默认设置)
    optional int32 memberuserid = 3; // 所属会员id
    optional int32 goodsid = 4; // 商品id
    optional int32 marketid = 5; // 市场id
    optional int32 ruletype = 6; // 参数类型-1.保证金类2.交易规则3.交易费用
    optional int32 paramid = 7; //  
    optional int32 feealgorithm = 8; // 费用算法-1：比率2：固定
    optional double paramvalue = 9; // 参数值(保证金类此项为空)
    optional string createtime = 10; // 创建时间
    optional int32 creatorid = 11; // 创建人
}

message userinfo{ 
    optional int32 userid = 1; // 用户id
    optional int32 userinfotype = 2; // 用户信息类型-1:个人2:企业
    optional string customername = 3; // 客户名称(企业名称)
    optional int32 userstatus = 4; // 用户状态-1：正常2：注销
    optional int32 usertype = 5; // 账户类型-1:交易所2:机构3:会员子机构4:经纪人5:投资者
    optional int32 openmode = 6; //  
    optional int32 cardtypeid = 7; // 证件类型id
    optional string cardnum = 8; // 证件号码(加密存储)
    optional string halfbodyphotourl = 9; // 半身照地址
    optional string cardfrontphotourl = 10; // 证件正面图片地址
    optional string cardbackphotourl = 11; // 证件背面图片地址
    optional int32 biznature = 12; //  
    optional string bizscope = 13; // 企业经营范围(企业)
    optional string legalpersonname = 14; // 法人姓名(企业)
    optional string contactname = 15; // 联系人
    optional int32 sex = 16; // 用户性别0:女1:男
    optional string telphone = 17; // 联系电话(加密存储)
    optional string mobile = 18; // 手机号码(加密存储)
    optional string fax = 19; // 传真(加密存储)
    optional string email = 20; // 邮件(加密存储)
    optional string qq = 21; // qq(加密存储
    optional string wechat = 22; // 微信(加密存储)
    optional int32 countryid = 23; // 国家
    optional int32 provinceid = 24; // 省
    optional int32 cityid = 25; // 市
    optional int32 districtid = 26; // 地区
    optional string company = 27; // 公司(个人)
    optional string address = 28; // 地址
    optional string postalcode = 29; // 邮政编码
    optional string createtime = 30; // 创建时间
    optional int32 creatorid = 31; // 创建人
    optional string modifiertime = 32; // 修改时间
    optional int32 modifierid = 33; // 修改人
    optional string remark = 34; // 备注
    optional string wskhinfo = 35; // 开户申请信息(json)
    optional string signpdfurl = 36; // 签约pdf文件
    optional string legalcardfrontphotourl = 37; // 法人身份证正面照地址
    optional string legalcardbackphotourl = 38; // 法人身份证背面照地址
    optional string otherurl = 39; // 其它图片地址[使用分号分隔]
    optional int32 hasencrypt = 40; // 数据是否已加密-0:未加密1:已加密
    optional string bankname = 41; // 银行名称
    optional string bankaccount = 42; // 银行帐号(加密存储)
    optional string bankcardfrontphotourl = 43; // 银行卡正面照地址
    optional int32 needinvoice = 44; // 是否需要发票-0:不需要1:需要
    optional string bankid = 45; // 银行编码
    optional string attachment1 = 46; // 附件1
    optional string attachment2 = 47; // 附件2
}

message userloginflow{ 
    optional int32 loginflowno = 1; // 登录流水号(autoid)
    optional int32 loginid = 2; // 登陆账号
    optional int32 funcode = 3; // 功能号
    optional int32 clienttype = 4; //  
    optional string softversion = 5; // 软件版本
    optional string operatetime = 6; // 操作时间
    optional string loginip = 7; // 登录ip地址
    optional int32 loginport = 8; // 登录端口
    optional string deviceid = 9; // 登录设备信息
    optional string environmentinfo = 10; // 登录软件环境信息
    optional int32 loginretcode = 11; // 登录结果-0:成功、非0均为失败
    optional int32 operatetype = 12; // 操作类型-1:人工操作、2:系统操作
    optional string remark = 13; // 备注
    optional int32 logintype = 14; // 登录类型-1:账号登录2:手机号登录3:三方登录
    optional string authid = 15; // 三方认证id
    optional int32 authtype = 16; // 三方认证类型-1:微信2:支付宝
}

message useronline{ 
    optional int32 loginid = 1; // 登陆账号
    optional int32 parentuserid = 2; // 所属机构id
    optional int32 memberuserid = 3; // 所属会员id
    optional int32 clienttype = 4; //  
    optional int32 groupnum = 5; // 客户端类型分组编号
    optional string softversion = 6; // 软件版本
    optional string loginip = 7; // 登录ip
    optional int32 loginport = 8; // 登录端口
    optional string logintime = 9; // 登录时间
    optional string deviceid = 10; // 设备id
    optional string environmentinfo = 11; // 软件环境信息
}

message useronlinecount{ 
    optional int32 areauserid = 1; // 机构id
    optional string areaname = 2; // 机构名称
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 daymax = 4; // 日最高在线人数
    optional int32 monthmax = 5; // 月最高在线人数
}

message userreceiptinfo{ 
    optional int32 autoid = 1; // autoid
    optional int32 userid = 2; // 用户id
    optional int32 receipttype = 3; // 发票类型-1:个人2:企业
    optional string username = 4; // 户名(个人姓名或企业名称)
    optional string taxpayerid = 5; // 纳税人识别号
    optional string contactinfo = 6; // 联系方式
    optional string receiptbank = 7; // 发票开户行[发票类型:企业]
    optional string receiptaccount = 8; // 发票帐号[发票类型:企业]
    optional string address = 9; // 地址[发票类型:企业]
    optional string idnum = 10; // 身份证号码[发票类型:个人]
}

message userreceiveinfo{ 
    optional int32 autoid = 1; // autoid
    optional int32 userid = 2; // 用户id
    optional string receivername = 3; // 提货人姓名
    optional int32 cardtypeid = 4; // 证件类型
    optional string cardnum = 5; // 证件号码(加密存储)
    optional string phonenum = 6; // 提货人联系方式(加密存储)
    optional string address = 7; // 提货人详细地址
    optional string takeremark = 8; // 提货备注
    optional int32 countryid = 9; // 国家
    optional int32 provinceid = 10; // 省
    optional int32 cityid = 11; // 市
    optional int32 districtid = 12; // 地区
    optional int32 isdefault = 13; // 是否默认地址-0:否1:是
    optional int32 hasencrypt = 14; // 数据是否已加密-0:未加密1:已加密
}

message userreckonaccount{ 
    optional int32 userid = 1; // 用户id
    optional int32 currencyid = 2; // 币种id
    optional int64 reckonaccountid = 3; // 默认结算资金账号id(机构分润使用)
    optional string updatetime = 4; // 更新时间
}

message userscore{ 
    optional int32 userid = 1; // 用户id
    optional int32 scoretypeid = 2; // 积分类型id
    optional int32 oriscore = 3; // 期初积分
    optional int32 curscore = 4; // 期末积分
    optional int32 freezescore = 5; // 冻结积分
    optional int32 todayincrease = 6; // 今日增加
    optional int32 todaydecrease = 7; // 今日减少
    optional int32 withholdsocre = 8; // 代扣积分[积分服务商]
}

message userscorebuybackrequest{ 
    optional int64 buybackreqid = 1; // 回购申请id(228+unix秒时间戳(10位)+xxxxxx)
    optional int32 requserid = 2; // 申请用户id
    optional int64 reqaccountid = 3; // 申请用户资金账户
    optional int32 provideruserid = 4; // 积分服务商用户id
    optional int64 provideraccountid = 5; // 积分服务商资金账户
    optional int32 scoretypeid = 6; // 积分类型id
    optional int32 score = 7; // 积分
    optional double amount = 8; // 金额
    optional int32 reqstatus = 9; // 申请状态-1:待审核2:审核中3:审核拒绝4:审核成功5:审核失败6:已撤销
    optional int32 auditer = 10; // 审核人
    optional string audittime = 11; // 审核时间
    optional string auditremark = 12; // 审核备注
    optional int32 handlestatus = 13; // 处理状态-
    optional string responsetopic = 14; // 积分回应主题
}

message userscoreclosedetail{ 
    optional int64 detailid = 1; // 持仓单id
    optional int64 tradeid = 2; // 成交单id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 userid = 4; // 用户id
    optional int32 scoretypeid = 5; // 积分类型id
    optional int32 score = 6; // 积分
    optional string createtime = 7; // 创建时间
    optional int32 closetype = 8; // 平仓类型-1:消费平仓2:核销平仓3:过期平仓4:销户平仓
}

message userscoredetail{ 
    optional int64 detailid = 1; // 明细id(226+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 userid = 3; // 用户id
    optional int32 scoretypeid = 4; // 积分类型id
    optional int32 score = 5; // 积分
    optional int32 remainscore = 6; // 剩余积分
    optional int32 validtype = 7; // 有效类型-1当日有效3指定日期有效4:一直有效
    optional string expiredate = 8; // 到期时间
    optional int32 relatedordertype = 9; // 关联单类型
    optional int64 relationorderid = 10; // 关联单号
    optional int32 marketingstrategyid = 11; // 扩展策略id
    optional int32 scorestatus = 12; // 状态-0:处理中1:已成功2:已失败
    optional string createtime = 13; // 创建时间
}

message userscoregive{ 
    optional int64 autoid = 1; // 自增id(seq_userscoregive)
    optional int32 userid = 2; // 赠送用户id
    optional int32 provideruserid = 3; // 积分服务商用户id
    optional int32 scoretypeid = 4; // 积分类型id
    optional int32 score = 5; // 积分
    optional int32 reqstatus = 6; // 申请状态-1:待审核2:审核中3:审核拒绝4:审核成功5:审核失败6:已撤销
    optional int32 auditer = 7; // 审核人
    optional string audittime = 8; // 审核时间
    optional string auditremark = 9; // 审核备注
    optional int32 handlestatus = 10; // 处理状态-
    optional string responsetopic = 11; // 积分回应主题
    optional int32 validtype = 12; // 有效类型-1当日有效3指定日期有效4:一直有效
    optional string expiredate = 13; // 到期时间
}

message userscorelog{ 
    optional int64 autoid = 1; // autoid
    optional int32 userid = 2; // 用户id
    optional int32 scoretypeid = 3; // 积分类型id
    optional int64 relatedorderid = 4; // 关联单号
    optional int32 bizcode = 5; // 业务编码
    optional int32 score = 6; // 变动积分
    optional int32 scoreadjusttype = 7; // 积分变动类型
    optional int32 oriscore = 8; // 期初积分(变动前积)
    optional int32 curscore = 9; // 期末积分(变动后积)
    optional string createtime = 10; // 记账时间
    optional string remark = 11; // 备注
}

message userscorelog2{ 
    optional int64 serialnumber = 1; // 流水id
    optional int32 suborderindex = 2; // 子指令序号
    optional int32 userid = 3; // 用户id
    optional int32 scoretypeid = 4; // 积分类型id
    optional int64 relatedorderid = 5; // 关联单号
    optional int32 score = 6; // 变动积分
    optional int32 oppositiontype = 7; // 操作头寸类型-1:头寸
    optional int32 scoreadjusttype = 8; // 积分变动类型-accountcmdop
    optional int32 bizcode = 9; // 业务编码
    optional int32 oriscore = 10; // 变动前积
    optional int32 curscore = 11; // 变动后积
    optional string createtime = 12; // 记账时间
    optional string remark = 13; // 备注
    optional int32 marketid = 14; // 市场id
    optional string tradedate = 15; // 交易日
}

message userscoremsglog{ 
    optional int64 extticket = 1; // 日志id
    optional int32 funcode = 2; // 功能码
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 retcode = 4; // 返回码
    optional bytes logcontent = 5; // 日志内容
    optional string createtime = 6; // 创建时间
    optional string publishtopic = 7; // 发布主题
    optional int32 messagestatus = 8; // 状态-1:待发送2:发送完成
    optional int32 businesscode = 9; // 业务编号-0:积分消费1:积分获取2:积分核销3:积分清理4:积分结算
}

message userscoretradedetail{ 
    optional int64 tradeid = 1; // 明细id(227+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 userid = 3; // 用户id
    optional int32 scoretypeid = 4; // 积分类型id
    optional int32 score = 5; // 积分
    optional int32 validtype = 6; // 有效类型-1当日有效3指定日期有效4:一直有效
    optional string expiredate = 7; // 到期时间
    optional int32 relatedordertype = 8; // 关联单类型
    optional int64 relationorderid = 9; // 关联单号
    optional int32 marketingstrategyid = 10; // 扩展策略id
    optional int32 tradetype = 11; // 成交类型-1:增加2:减少
    optional int32 scorestatus = 12; // 状态-0:处理中1:已成功2:已失败
    optional string createtime = 13; // 创建时间
    optional int32 clientserialid = 14; // 客户端唯一id
    optional string responsetopic = 15; // 积分回应主题
}

message volatilitygoodsconfig{ 
    optional int64 autoid = 1; // autoid-seq_volatilitygoodsconfig
    optional string goodscode = 2; // 代码-系统自动生成[#v(2位)+autoid十六进制(6位)]--字母大写
    optional string goodsname = 3; // 名称
    optional string exhqcode = 4; // 外部交易所代码
    optional string goodshqcode = 5; // 外部商品代码
    optional int32 fromfield = 6; // 行情取价方式-1:最新价2:买价3:卖价
    optional string cleartime = 7; // 清盘时间(hhmm)
    optional double prereckonprice = 8; // 昨结价--作废
    optional string createtime = 9; // 创建时间
    optional string updatetime = 10; // 更新时间
    optional int32 decimalplace = 11; // 报价小数位
    optional double limitupratio = 12; // 涨停--作废
    optional double limitdownratio = 13; // 涨停--作废
    optional string synctimepoint = 14; // 同步时间点(hh:mm,逗号分隔,例:12:30,14:30)--作废
}

message warehouseinfo{ 
    optional int32 autoid = 1; // 自增id
    optional string warehousecode = 2; // 仓库代码
    optional string warehousename = 3; // 仓库名称
    optional int32 warehousetype = 4; // 仓库类型-1厂库2自有库3合作库
    optional int32 areauserid = 5; // 所属机构
    optional int32 warehousestatus = 6; // 仓库状态-1:正常2:注销3:待审核4:审核拒绝
    optional int32 countryid = 7; // 国家
    optional int32 provinceid = 8; // 省
    optional int32 cityid = 9; // 市
    optional int32 districtid = 10; // 区
    optional string address = 11; // 详细地址
    optional string remark = 12; // 审核备注
    optional string createtime = 13; // 创建时间
    optional int32 hasvideo = 14; // 是否有视频-0:无1:有
    optional string videourl = 15; // 视频地址
}

message warehousereciept{ 
    optional int64 wrid = 1; // 仓单id(200+unix秒时间戳(10位)+xxxxxx)
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 wruserid = 3; // 持有人id
    optional int32 wrtype = 4; // 仓单类型-1注册仓单2信用仓单
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 goodsunitid = 10; // 商品单位id
    optional int32 regqty = 11; // 注册数量
    optional string createtime = 12; // 创建时间
    optional string modifytime = 13; // 修改时间
    optional int32 modifierid = 14; // 修改人
    optional int64 wrfactortypeid = 15; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int64 accountid = 16; // 帐户id
}

message wfareatyperight{ 
    optional int32 workflowid = 1; // 工作流id
    optional int32 areatype = 2; // 机构角色
    optional int32 firstauditflag = 3; // 初审标识-0:不可1:可
    optional int32 secondauditflag = 4; // 复审标识-0:不可1:可
    optional int32 lastauditflag = 5; // 终审标识-0:不可1:可
    optional string remark = 6; // 备注
    optional int32 modifierid = 7; // 修改人
    optional string updatetime = 8; // 更新时间
}

message wfgroupconfigdetail{ 
    optional int32 workflowid = 1; // 工作流id
    optional int32 groupid = 2; // 会员分组id
    optional int32 nodetype = 3; // 节点类型1:分组2:机构
    optional int32 areatype = 4; //  
    optional int32 areauserid = 5; // 节点机构id[2:机构]
    optional int32 modifierid = 6; // 修改人
    optional string updatetime = 7; // 更新时间
}

message wfmanagerright{ 
    optional int32 workflowid = 1; // 工作流id
    optional int32 managerid = 2; // 管理员id
    optional int32 areatype = 3; // 机构角色
    optional int32 areauserid = 4; // 所属机构id
    optional int32 auditflag = 5; // 审核标识-0:无1:初审2:复审3;终审
    optional int32 modifierid = 6; // 修改人
    optional string updatetime = 7; // 更新时间
}

message workflowdefine{ 
    optional int32 workflowid = 1; // 工作流id
    optional string workflowname = 2; // 工作流名称
    optional int32 workflowtype = 3; // 工作流类型-1:经纪会员类2:仓库机构类
    optional int32 workflowoutid = 4; // 工作流外部id
    optional string auditurl = 5; // 审核url
    optional string remark = 6; // 备注
    optional int32 isvalid = 7; // 是否有效-0:无效1:有效
    optional int32 treeid = 8; // 引用工作流树
    optional int32 modifierid = 9; // 修改人
    optional string updatetime = 10; // 更新时间
    optional int32 groupid = 11; // 默认会员分组id
}

message wrbusiness{ 
    optional int32 relateid = 1; // 关联编号(主键)
    optional int32 busid = 2; // 业务编号
    optional int64 tradeid = 3; // 成交编号
    optional int32 userid = 4; // 用户id
    optional int64 accountid = 5; // 帐户id
    optional string locationids = 6; // 库位编号数组(每个编号8个字节)
    optional int32 holdpos = 7; // 操作订单仓单头寸
    optional int32 splitsrcpostype = 8; // 仓单生成头寸类型-1:订单头寸,2:仓单头寸
    optional int32 deliverygoodsid = 9; // 交割商品id
    optional int64 wrfactortypeid = 10; // 仓单要素类型id
    optional int32 goodscompactid = 11; // 商品合约id
    optional int32 brandid = 12; // 品牌id
    optional int32 qualityid = 13; // 品质id
    optional int32 specid = 14; // 规格id
    optional int32 warehouseid = 15; // 仓库id
    optional int32 deliverymonthid = 16; // 月份id
    optional int32 buyuserid = 17; // 买方用户id
    optional int32 buyaccountid = 18; // 买方帐户id
    optional int64 wrid = 19; // 交易仓单id
    optional int32 wrpos = 20; // 仓单头寸数量
    optional int32 isfrozen = 21; // 是否已冻结状态(非0:未冻结,0:已冻结)
    optional string createtime = 22; // 创建时间
    optional string updatetime = 23; // 更新时间
    optional int64 requestid = 24; // 仓单用途转换表中主键id
    optional string restopic = 25; // 响应主题
    optional int64 relatedorderid = 26; // 请求方业务关联单号
    optional int64 takeorderid = 27; // 提货申请表id
    optional int32 yesorno = 28; // yesorno-0:no1:yes
    optional string username = 29; // 用户名
    optional int32 cardtype = 30; // 证件类型
    optional string strvalue = 31; // 字符串值
    optional string phonenum = 32; // 电话号码
    optional string straddress = 33; // 地址
    optional int32 takemode = 34; // 提货方式
    optional string remark = 35; // 备注
    optional int32 auditer = 36; // 审核人
    optional string taketime = 37; // 发生时间
    optional int32 wrtradetype = 38; // 仓单交易类型
    optional string protovalue = 39; // 消息内容
    optional int64 tradeidwr = 40; // 仓单交易id
    optional int32 nvalue = 41; // 数值
    optional string protovalue2 = 42; // 消息内容2
    optional int32 protolength = 43; // 消息内容2长度
    optional int64 distributeorderid = 44; // 配送单号(125+unix秒时间戳(10位)+xxxxxx)
}

message wrbusinesslog{ 
    optional int64 businessid = 1; // 业务id
    optional int64 relateid = 2; // 关联id
    optional int64 tradeid = 3; // 成交id
    optional int32 userid = 4; // 用户id
    optional int32 srcfuncid = 5; // 源功能号
    optional string logtopic = 6; // 目标协议主题
    optional int32 logfuncid = 7; // 协议功能号
    optional int32 sessionid = 8; // 协议会话id
    optional int32 logprotosize = 9; // 协议字节数
    optional string logprotostring = 10; // 小数据协议
    optional string logprotoclob = 11; // 大数据协议
    optional int64 accountid = 12; // 帐户id
}

message wrfactortype{ 
    optional int64 wrfactortypeid = 1; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional string wrfactortypename = 2; // 仓单要素类型名称(下面6要素的名称合并显示，逗号分隔)
    optional int32 deliverygoodsid = 3; // 交割商品id
    optional int32 brandid = 4; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 6; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 7; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 8; // 月份id(1交割品种升贴水参数表autoid)
}

message wrholddetail{ 
    optional int64 wrholddetailid = 1; // 仓单持有明细id(213+unix秒时间戳(10位)+xxxxxx)
    optional int64 wrfactortypeid = 2; // 仓单要素类型id
    optional int32 curwruserid = 3; // 当前持有人id
    optional int32 oriwruserid = 4; // 初始持有人id
    optional int32 agreeunit = 5; // 合约单位
    optional int32 isvalid = 6; // 是否有效-0:无效1:有效[提货后设置为无效]
    optional string createtime = 7; // 创建时间
    optional string updatetime = 8; // 更新时间
    optional int32 relatedtype = 9; // 关联类型-1:仓单注册2:交收3:仓单贸易
    optional int64 relatedorderid = 10; // 关联单号[交割成交单、仓单贸易成交单]
    optional int32 locationid = 11; // 库位id[整装]
    optional int64 ladingbillid = 12; // 提单id(208+unix秒时间戳(10位)+xxxxxx)
    optional int64 regwrid = 13; // 注册仓单id
    optional int32 holdstatus = 14; // 状态-0:无效1:正常2:冻结3:已提货4:履约冻结5:已卖出
    optional int64 curwrid = 15; // 当前仓单id
    optional int32 curaccountid = 16; // 当前持有人帐户id
    optional int32 oriaccountid = 17; // 初始持有人帐户id
}

message wrholddetailrelation{ 
    optional int64 wrid = 1; // 仓单id
    optional int64 wrholddetailid = 2; // 仓单持有明细id
    optional int64 relatedid = 3; // 关联单号(注册单id交割单id...)
    optional int32 wrtradetype = 4; // 成交类型-1:仓单注册2:交割成交3:履约4:仓单贸易5:供应链金融6:提货
}

message wrladingbill{ 
    optional int64 ladingbillid = 1; // 提单id(208+unix秒时间戳(10位)+xxxxxx)
    optional string ladingbillcode = 2; // 提单编号
    optional int32 userid = 3; // 存货人
    optional int32 locationcount = 4; // 库位总数
    optional int32 totalqty = 5; // 总数量
    optional string storagetime = 6; // 入库时间
    optional string relatedpolicy = 7; // 关联保险单
    optional string policyduetime = 8; // 保险到期时间
    optional int32 pledgestatus = 9; // 质押状态-1:未质押2:已质押
    optional string pledgeremark = 10; // 质押描述
    optional string createtime = 11; // 创建时间
}

message wrlocation{ 
    optional int64 locationid = 1; // 库位id(209+unix秒时间戳(10位)+xxxxxx)
    optional int64 ladingbillid = 2; // 提单id
    optional int64 wrid = 3; // 仓单id
    optional int32 userid = 4; // 注册人id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int64 wrfactortypeid = 6; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 brandid = 7; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 8; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 9; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 10; // 仓库id(1交割品种升贴水参数表autoid)
    optional string locationcode = 11; // 库位编号
    optional int32 standardqty = 12; // 标准数量
    optional double realqty = 13; // 实际数量
    optional int32 locationstatus = 14; // 库位状态-0:无效1:正常2:冻结3:已提货4:履约冻结5:已卖出
    optional string createtime = 15; // 创建时间
    optional string updatetime = 16; // 变更时间
}

message wrlocationlog{ 
    optional int64 logid = 1; // 流水id(204+unix秒时间戳(10位)+xxxxxx)
    optional int64 locationid = 2; // 库位id
    optional int64 oriwrid = 3; // 仓单id
    optional int64 newwrid = 4; // 新仓单id
    optional string createtime = 5; // 发生时间
}

message wrlocationrelation{ 
    optional int64 wrid = 1; // 仓单id
    optional int64 locationid = 2; // 库位id
    optional int64 relatedid = 3; // 关联单号(注册单id交割单id...)
    optional int32 wrtradetype = 4; // 成交类型-1:仓单注册2:交割成交3:履约4:仓单贸易5:供应链金融6:提货
}

message wrposition{ 
    optional int64 wrpositionid = 1; // 仓单头寸id(201+unix秒时间戳(10位)+xxxxxx)
    optional int32 wruserid = 2; // 持有人id
    optional int32 deliverygoodsid = 3; // 交割商品id
    optional int64 wrfactortypeid = 4; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 brandid = 5; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 6; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 7; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 9; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 totalqty = 10; // 总数量
    optional int32 increaseqty = 11; // 今日增加数量
    optional int32 decreaseqty = 12; // 今日减少数量
    optional int32 freezeqty = 13; // 总冻结数量
    optional int32 relatedqty = 14; // 关联数量
    optional string modifytime = 15; // 修改时间
    optional int32 modifierid = 16; // 修改人
    optional int32 tradewrqty = 17; // 订单仓单头寸总数量
    optional int64 accountid = 18; // 帐户id
}

message wrpositionlog{ 
    optional int64 logid = 1; // 仓单头寸流水id(202+unix秒时间戳(10位)+xxxxxx)
    optional int32 logindex = 2; // 流水序号(自增id)-seq_wrpositionlog
    optional int32 wruserid = 3; // 持有人id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 changetype = 11; // 变动类型-101冻结102最大冻结103解冻104增加105减少
    optional int64 relatedorderid = 12; // 关联单号
    optional int32 changeqty = 13; // 变动数量交割成功数量
    optional int32 beforeqty = 14; // 变动前数量
    optional int32 afterqty = 15; // 变动后数量
    optional string createtime = 16; // 发生时间
    optional int32 businesscode = 17; // 业务编号
    optional int64 accountid = 18; // 帐户id
}

message wrpositionlog2{ 
    optional int64 serialnumber = 1; // 流水id
    optional int32 suborderindex = 2; // 子指令序号
    optional int32 wruserid = 3; // 持有人id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int64 relatedorderid = 11; // 关联单号
    optional int32 changeqty = 12; // 变动数量交割成功数量
    optional int32 oppositiontype = 13; // 操作头寸类型-1:头寸
    optional int32 changetype = 14; // 变动类型-accountcmdop
    optional int32 businesscode = 15; // 业务编号
    optional int32 beforeqty = 16; // 变动前数量
    optional int32 afterqty = 17; // 变动后数量
    optional string createtime = 18; // 发生时间
    optional int32 marketid = 19; // 市场id
    optional string tradedate = 20; // 交易日
    optional int64 accountid = 21; // 帐户id
}

message wrregister{ 
    optional int64 autoid = 1; // 自增id
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int64 wrfactortypeid = 3; // 仓单要素类型id(212+unix秒时间戳(10位)+xxxxxx)
    optional int32 brandid = 4; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 5; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 6; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 7; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 8; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 wrtype = 9; // 仓单类型1:注册仓单,2:信用仓单
    optional int32 holdertype = 10; // 持有人类型1：会员2：投资者
    optional int32 wruserid = 11; // 持有人userid
    optional int32 qty = 12; // 注册数量
    optional int32 goodsunitid = 13; // 单位
    optional int32 auditstatus = 14; // 状态-1待初审2待复审3审核通过4审核拒绝5注册完成6.注册失败
    optional string ladingbillinfo = 15; // 申请提单信息(申请信息的json串)
    optional string requesttime = 16; // 申请时间
    optional int32 requestorid = 17; // 申请人
    optional string suretime = 18; // 仓库确认时间
    optional int32 surerid = 19; // 仓库确认人
    optional string canceltime = 20; // 注销时间
    optional int32 canceller = 21; // 注销人
    optional string audittime = 22; // 审核时间
    optional int32 auditid = 23; // 审核人
    optional string remark = 24; // 备注
    optional string requestaccount = 25; // 申请账号
    optional string tradedate = 26; // 交易日(yyyymmdd)
    optional int64 accountid = 27; // 帐户id
}

message wrtakedetail{ 
    optional int64 takeorderid = 1; // 提货单号
    optional int64 wrholddetailid = 2; // 仓单持有明细id
    optional int64 wrid = 3; // 关联仓单id
    optional string createtime = 4; // 仓建时间
}

message wrtrade_applygoodsconfig{ 
    optional int64 applyid = 1; // autoid
    optional int32 goodsid = 2; // 商品id
    optional string goodscode = 3; // 商品代码
    optional double pricefactor = 4; // 商品价格系数
    optional double pricemove = 5; // 商品升贴水值
    optional double weightratio = 6; // 重量系数
}

message wrtrade_applymatchdetail{ 
    optional int32 applyid = 1; // autoid
    optional int32 matchuserid = 2; // 对手用户id
}

message wrtrade_bargainapply{ 
    optional int64 wrbargainid = 1; // 议价申请单id(327+unix秒时间戳(10位)+xxxxxx)
    optional int64 wrtradeorderid = 2; // 关联委托单id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int32 userid = 5; // 摘牌人用户id
    optional int64 accountid = 6; // 摘牌资金账号
    optional int32 buyorsell = 7; // 买卖-0:买1:卖
    optional int32 applyqty = 8; // 摘牌数量
    optional string applyprice = 9; // 申请价格
    optional int32 applystatus = 10; // 申请状态-1:待确认2:已确认3:已拒绝4:已撤销5:系统撤销6:处理失败7:确认中
    optional int32 handlestatus = 11; // 处理状态
    optional string applytime = 12; // 申请时间
    optional string applyremark = 13; // 申请备注
    optional int32 confirmqty = 14; // 可接受数量(拒绝时填写)-作废
    optional double confirmprice = 15; // 可接受价格(拒绝时填写)-作废
    optional int32 confirmuserid = 16; // 确认人
    optional string confirmtime = 17; // 确认时间
    optional string confirmremark = 18; // 确认备注
    optional string refprice = 19; // 参考价格
    optional int32 retcode = 20; // 委托返回代码
}

message wrtrade_goodsconfig{ 
    optional int64 wrtradeorderid = 1; // 仓单贸易委托单id(挂牌委托)
    optional int32 goodsid = 2; // 商品id
    optional string goodscode = 3; // 商品代码
    optional double pricefactor = 4; // 商品价格系数
    optional double pricemove = 5; // 商品升贴水值
    optional double weightratio = 6; // 重量系数
}

message wrtrade_matchdetail{ 
    optional int64 wrtradeorderid = 1; // 仓单贸易委托单id(挂牌委托)
    optional int32 matchuserid = 2; // 对手用户id
}

message wrtrade_orderapply{ 
    optional int64 applyid = 1; // autoid(seq_wrtrade_orderapply)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 buyorsell = 3; // 买卖-0:买1:卖
    optional int32 marketid = 4; // 市场id
    optional int32 userid = 5; // 用户id
    optional int64 accountid = 6; // 资金账号
    optional int64 wrfactortypeid = 7; // 仓单要素类型id
    optional int32 orderqty = 8; // 委托数量
    optional int32 wrpricetype = 9; // 价格方式-1:固定价2-浮动价-[挂牌]
    optional double fixedprice = 10; // 固定价格-[挂牌]
    optional int32 isspecified = 11; // 是否指定对手-0:不指定1:指定-[挂牌]
    optional double pricefactor = 12; // 价格系数(浮动价时填写)-[挂牌]
    optional double pricemove = 13; // 升贴水(浮动价时填写)-[挂牌]
    optional double firstratio = 14; // 首付比率-[挂牌时指定,摘牌时使用]
    optional int32 performancetemplateid = 15; // 履约计划模板id
    optional int32 validtype = 16; // 有效类型-1当日有效2本周有效3指定日期有效4一直有效
    optional string validtime = 17; // 有效期限
    optional int32 pricedisplaymode = 18; //  
    optional int32 canbargain = 19; // 是否可议价-0:不可1:可
    optional string attachment1 = 20; // 附件1
    optional string attachment2 = 21; // 附件2
    optional string remark = 22; // 备注
    optional int32 applystatus = 23; // 申请状态-1:待审核2.审核中3:审核通过4:审核拒绝5:审核失败6:已撤销
    optional int32 applyuserid = 24; // 申请人
    optional string applydate = 25; // 申请时间
    optional int32 audituserid = 26; // 审核人
    optional string auditdate = 27; // 审核时间
    optional string auditremark = 28; // 审核备注
}

message wrtrade_ordercancel{ 
    optional int64 cancelorderid = 1; // 撤单id(322+unix秒时间戳(10位)+xxxxxx)
    optional int64 oldorderid = 2; // 原委托单号id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int64 accountid = 5; // 账户id
    optional int32 wrtradetype = 6; // 仓单贸易类型-1:挂牌
    optional int32 buyorsell = 7; // 买卖-0:买1:卖
    optional int32 operatetype = 8; // 操作类型-1:委托撤单
    optional int32 cancelorderqty = 9; // 撤单委托数量
    optional int32 tradeqty = 10; // 撤单数量(撤单成交后更新)
    optional int32 handlestatus = 11; // 处理状态-1:待处理2:处理成功3:处理失败4:已拒绝
    optional int32 ordersrc = 12; // 委托来源-1:客户端2:管理端3:风控服务4:交割服务5:交易服务6:交易日结
    optional string actiontime = 13; // 委托时间
    optional int32 sessionid = 14; // 会话id
    optional string clientticket = 15; // 客户端流水号
    optional int32 clienttype = 16; //  
    optional int32 retcode = 17; // 错误代码
    optional string remark = 18; // 备注
    optional int32 requestid = 19; // 请求id
}

message wrtrade_orderdetail{ 
    optional int64 wrtradeorderid = 1; // 仓单贸易委托单id(320+unix秒时间戳(10位)+xxxxxx)
    optional string tradedate = 2; // 交易日(yyyymmdd)
    optional int32 wrtradetype = 3; // 仓单贸易类型-1:挂牌2:摘牌
    optional int32 buyorsell = 4; // 买卖-0:买1:卖
    optional int32 relatedwrtradeorderid = 5; // 关联委托单号(摘牌委托关联挂牌委托单id)
    optional int32 marketid = 6; // 市场id
    optional int32 userid = 7; // 用户id
    optional int64 accountid = 8; // 资金账号
    optional int64 wrfactortypeid = 9; // 仓单要素类型id
    optional int32 orderqty = 10; // 委托数量
    optional int32 tradeqty = 11; // 成交数量
    optional int32 cancelqty = 12; // 撤销数量
    optional int32 wrpricetype = 13; // 价格方式-1:固定价2-浮动价-[挂牌]
    optional double fixedprice = 14; // 固定价格-[挂牌]
    optional int32 isspecified = 15; // 是否指定对手-0:不指定1:指定-[挂牌]
    optional double pricefactor = 16; // 价格系数(浮动价时填写)-[挂牌]
    optional double pricemove = 17; // 升贴水(浮动价时填写)-[挂牌]
    optional double firstratio = 18; // 首付比率-[挂牌时指定,摘牌时使用]
    optional int32 wrtransferuserid = 19; // 仓单受让用户-[摘牌]
    optional double tradeprice = 20; //  
    optional double freezefirstamount = 21; // 冻结首付金额-[摘牌]
    optional double unfreezefirstamount = 22; // 解冻首付金额-[摘牌]
    optional int64 performancetemplateid = 23; // 履约计划模板id
    optional int32 validtype = 24; // 有效类型-1当日有效2本周有效3指定日期有效4一直有效
    optional string validtime = 25; // 有效期限
    optional string ordertime = 26; // 委托时间
    optional string canceltime = 27; // 撤销时间
    optional int32 wrtradeorderstatus = 28; //  
    optional string clientticket = 29; // 客户端流水号
    optional int32 ordersrc = 30; // 委托来源-1:客户端2:管理端3:风控服务4:交割服务5:交易服务6:交易日结
    optional int32 clienttype = 31; //  
    optional string uuid = 32; // 发起端唯一id
    optional string clientordertime = 33; // 客户端委托时间
    optional int32 retcode = 34; // 错误代码
    optional int32 operatorid = 35; // 操作员id
    optional int32 pricedisplaymode = 36; //  
    optional double freezemargin = 37; // 冻结保证金
    optional double unfreezemargin = 38; // 解冻保证金
    optional double freezecharge = 39; // 冻结手续费
    optional double unfreezecharge = 40; // 解冻手续费
    optional int32 marginalgorithm = 41; // 保证金方式-1：比率2：固定
    optional double marginvalue = 42; // 保证金设置值
    optional int32 chargealgorithm = 43; // 手续费收取方式1：比率2：固定
    optional double chargealgorithmvalue = 44; // 手续费设置值(交易所部分)
    optional double chargealgorithmvalue2 = 45; // 手续费设置值(会员部分)
    optional int32 canbargain = 46; // 是否可议价-0:不可1:可
    optional int64 wrbargainid = 47; // 议价申请单id
    optional string attachment1 = 48; // 附件1
    optional string attachment2 = 49; // 附件2
    optional string remark = 50; // 备注
    optional int64 applyid = 51; // 申请单id
}

message wrtrade_takedetail{ 
    optional int64 detailid = 1; // 提货单id(330+unix秒时间戳(10位)+xxxxxx)
    optional int64 takepland = 2; // 关联计划id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int32 buyuserid = 5; // 买方用户id(收货方)
    optional int32 selluserid = 6; // 卖方用户id(供货方)
    optional int64 wrfactortypeid = 7; // 仓单要素类型id
    optional int32 detailqty = 8; // 提货单数量
    optional string detaildate = 9; // 提货单日期
    optional int32 effectivedays = 10; // 有效期(天)4位整数
    optional string takeaddress = 11; // 提货地点
    optional string sellcontact = 12; // 堆场管理联系人
    optional string sellcontactphonenumber = 13; // 堆块管理联系人电话
    optional string trusteename = 14; // 受托方名称
    optional string trustphonenumber = 15; // 受托方联系方式
    optional string deliveryplace = 16; // 收货地点
    optional string buycontact = 17; // 现场联系人
    optional string buycontactphonenumber = 18; // 现场联系人电话
    optional int32 takeplanmode = 19; // 提货方式-1:fob(自提)2:cif(送到)3:平台代理
    optional int32 detailstatus = 20; // 提货单状态-1:待审核2:审核中3:待确认4:审核拒绝5:审核失败6:已确认7:已撤销
    optional string drivername = 21; // 司机名称
    optional string driverphonenumber = 22; // 司机电话
    optional string drivercardnumber = 23; // 司机身份证
    optional string drivercarplate = 24; // 司机车牌
    optional int32 applyuserid = 25; // 申请人
    optional string applydate = 26; // 申请时间
    optional int32 audituserid = 27; // 审核人
    optional string auditdate = 28; // 审核时间
    optional string auditremark = 29; // 审核备注
}

message wrtrade_takedetaildriver{ 
    optional int64 detailid = 1; // 提货单id(330+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 orderindex = 2; // 序号
    optional string drivername = 3; // 司机名称
    optional string driverphonenumber = 4; // 司机电话
    optional string drivercardnumber = 5; // 司机身份证
    optional string drivercarplate = 6; // 司机车牌
    optional string updatetime = 7; // 更新时间
}

message wrtrade_takeplan{ 
    optional int64 takeplanid = 1; // 计划id(329+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 contractid = 2; // 合同id
    optional string tradedate = 3; // 交易日(yyyymmdd)
    optional int32 marketid = 4; // 市场id
    optional int32 buyuserid = 5; // 买方用户id(收货方)
    optional int64 buyaccountid = 6; // 资金账号
    optional int32 selluserid = 7; // 卖方用户id(供货方)
    optional int64 wrid = 8; // 关联仓单id
    optional int64 wrfactortypeid = 9; // 仓单要素类型id
    optional int32 takeqty = 10; // 提货数量
    optional int32 realqty = 11; // 剩余数量
    optional string plandate = 12; // 计划日期
    optional int32 plandays = 13; // 计划提货周期(天)4位整数
    optional string takeaddress = 14; // 提货地点
    optional string sellcontact = 15; // 堆场管理联系人
    optional string sellcontactphonenumber = 16; // 堆块管理联系人电话
    optional string trusteename = 17; // 受托方名称
    optional string trustphonenumber = 18; // 受托方联系方式
    optional string deliveryplace = 19; // 收货地点
    optional string buycontact = 20; // 现场联系人
    optional string buycontactphonenumber = 21; // 现场联系人电话
    optional int32 takeplanmode = 22; // 提货方式-1:fob(自提)2:cif(送到)3:平台代理
    optional int32 takeplanstatus = 23; //  
    optional int32 handlestatus = 24; // 处理状态
    optional int32 applyuserid = 25; // 申请人
    optional string applydate = 26; // 申请时间
    optional int32 audituserid = 27; // 审核人
    optional string auditdate = 28; // 审核时间
    optional string auditremark = 29; // 审核备注
}

message wrtrade_takeplandriver{ 
    optional int64 takeplanid = 1; // 计划id(329+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int32 orderindex = 2; // 序号
    optional string drivername = 3; // 司机名称
    optional string driverphonenumber = 4; // 司机电话
    optional string drivercardnumber = 5; // 司机身份证
    optional string drivercarplate = 6; // 司机车牌
    optional string updatetime = 7; // 更新时间
}

message wrtrade_tradecontract{ 
    optional int64 contractid = 1; // 合同id(328+unix秒时间戳(10位)+2位(marketserviceid)+xxxx)
    optional int64 wrtradedetailid = 2; // 关联成交单id
    optional int64 wrtradeorderid = 3; // 关联委托单id
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int32 buyuserid = 6; // 买方用户id
    optional int64 buyaccountid = 7; // 资金账号
    optional int32 selluserid = 8; // 卖方用户id
    optional int64 sellaccountid = 9; // 卖方资金账号
    optional int64 wrid = 10; // 关联仓单id
    optional int64 wrfactortypeid = 11; // 仓单要素类型id
    optional string tradetime = 12; // 成交时间
    optional double tradeprice = 13; // 成交价格
    optional int32 tradeqty = 14; // 成交数量
    optional double tradeamount = 15; // 成交金额
    optional double realtradeqty = 16; // 实际成交数量(算上溢短)
    optional double realtradeamount = 17; // 实际成交金额(算上溢短)
    optional double firstratio = 18; // 首付比率
    optional double realfirstamount = 19; // 实际首付金额
    optional double performanceamount = 20; // 履约金额(实际成交金额-实际首付金额)
    optional int64 performanceplanid = 21; // 履约计划id
    optional string attachment1 = 22; // 附件1
    optional string attachment2 = 23; // 附件2
    optional string remark = 24; // 备注
    optional int32 contractstatus = 25; // 合同状态-1:未提货2:已提货3:已结束
    optional string updatetime = 26; // 更新时间
}

message wrtrade_tradedetail{ 
    optional int64 wrtradedetailid = 1; // 仓单贸易成交单id(321+unix秒时间戳(10位)+xxxxxx)
    optional int32 wrtradetype = 2; // 仓单贸易类型-1:挂牌2:摘牌
    optional int32 buyorsell = 3; // 买卖-0:买1:卖
    optional string tradedate = 4; // 交易日(yyyymmdd)
    optional int32 marketid = 5; // 市场id
    optional int64 wrtradeorderid = 6; // 委托单id
    optional int64 accountid = 7; // 资金账号
    optional int64 wrid = 8; // 关联仓单id
    optional int64 wrfactortypeid = 9; // 仓单要素类型id
    optional int64 matchaccountid = 10; // 对手账号
    optional string tradetime = 11; // 成交时间
    optional double tradeprice = 12; // 成交价格
    optional int32 tradeqty = 13; // 成交数量
    optional double tradeamount = 14; // 成交金额
    optional double realtradeqty = 15; // 实际成交数量(算上溢短)
    optional double realtradeamount = 16; // 实际成交金额(算上溢短)
    optional double firstratio = 17; // 首付比率
    optional double realfirstamount = 18; // 实际首付金额
    optional double performanceamount = 19; // 履约金额(实际成交金额-实际首付金额)
    optional int64 performanceplanid = 20; // 履约计划id
    optional int32 wrtransferuserid = 21; // 仓单受让用户-买摘牌是自己卖摘牌是对手
    optional int32 handlestatus = 22; // 处理状态-1:待处理2:已处理3:处理失败4:履约完成
    optional int32 isreckoned = 23; // 是否已结算-0:未结算1:已结算
    optional double chargevalue = 24; // 手续费
    optional int32 chargealgorithm = 25; // 手续费收取方式1：比率2：固定
    optional double chargealgorithmvalue = 26; // 手续费设置值(交易所部分)
    optional double chargealgorithmvalue2 = 27; // 手续费设置值(会员部分)
}

message wrtransferrequest{ 
    optional int64 requestid = 1; // 流水id(205+unix秒时间戳(10位)+xxxxxx)
    optional int32 usedtype = 2; // 用途类型-1:仓单转订单2:订单转仓单
    optional int32 userid = 3; // 持有人id
    optional int32 deliverygoodsid = 4; // 交割商品id
    optional int64 wrfactortypeid = 5; // 仓单要素类型id
    optional int32 brandid = 6; // 品牌id(1交割品种升贴水参数表autoid)
    optional int32 qualityid = 7; // 品质id(1交割品种升贴水参数表autoid)
    optional int32 specid = 8; // 规格id(1交割品种升贴水参数表autoid)
    optional int32 warehouseid = 9; // 仓库id(1交割品种升贴水参数表autoid)
    optional int32 deliverymonthid = 10; // 月份id(1交割品种升贴水参数表autoid)
    optional int32 goodsid = 11; // 交易合约id
    optional int64 accountid = 12; // 资金账号id
    optional int32 transferqty = 13; // 仓单数量
    optional int32 tradeholderqty = 14; // 交易合约手数
    optional int32 reqstatus = 15; //  
    optional int32 handleflag = 16; // 处理标识:1：待发送2：已发送3：处理成功4：处理失败
    optional int32 requestorid = 17; // 申请人
    optional string requesttime = 18; // 更新时间
    optional int32 auditerid = 19; // 审核人
    optional string audittime = 20; // 更新时间
    optional string auditdesc = 21; // 审核描述
    optional string remark = 22; // 备注
    optional string tradedate = 23; // 交易日
}

message wskh_blacklist{ 
    optional int32 autoid = 1; // 自增id
    optional int32 cardtype = 2; // 证件类型
    optional string cardnum = 3; // 证件号码
    optional string createtime = 4; // 创建时间
    optional int32 operatorid = 5; // 操作员id
}

message wskh_openaccountconfig{ 
    optional int32 configid = 1; // 配置id
    optional int32 configtype = 2; // 配置类型
    optional string configvalue = 3; // 配置值
    optional string remark = 4; // 备注
    optional string createtime = 5; // 创建时间
    optional string modifiedtime = 6; // 修改时间
    optional int32 modifiedby = 7; // 修改人帐号
}

message wskh_smshistory{ 
    optional int32 msgid = 1; // 消息id(自增id)
    optional int32 userid = 2; // 用户id
    optional int64 accountid = 3; // 帐号id(加密存储)
    optional string smsoperator = 4; // 短信运营商
    optional string mobilephone = 5; // 接收号码(加密存储)
    optional string msgcontent = 6; // 短信信息(加密存储)
    optional string sendtime = 7; // 发送时间
}

message wskh_userauthinfo{ 
    optional string authid = 1; // 三方认证iid
    optional int32 authtype = 2; // 三方认证类型-1:微信2:支付宝
    optional int32 userid = 3; // 用户id
    optional string authname = 4; // 三方认证i昵称
}

message wskh_userinfo{ 
    optional int32 userid = 1; // 用户id(自增id)
    optional string username = 2; // 用户姓名
    optional int32 sex = 3; // 性别-0:女1:男
    optional int32 cardtype = 4; // 证件类型
    optional string cardnum = 5; // 证件号码(加密存储)
    optional string cardaddress = 6; // 证件地址(加密存储)
    optional string mobilephone = 7; // 手机号码(加密存储)
    optional string wechat = 8; // 微信号(加密存储)
    optional string email = 9; // email地址(加密存储)
    optional string ipaddress = 10; // ip地址
    optional string halfbodyphotourl = 11; // 半身照地址
    optional string cardfrontphotourl = 12; // 正面证件照地址
    optional string cardbackphotourl = 13; // 背面证件照地址
    optional string bankid = 14; // 银行编码
    optional string bankname = 15; // 银行名称
    optional string bankaccount = 16; // 银行帐号(加密存储)
    optional string bankcardfrontphotourl = 17; // 银行卡正面照地址
    optional string bankcardbackphotourl = 18; // 银行卡背面照地址
    optional string areacode = 19; // 机构代码
    optional int32 areaid = 20; // 机构id
    optional int32 memberareaid = 21; // 所属会员id
    optional string brokerid = 22; // 经纪人id(加密存储)
    optional int64 accountid = 23; // 交易系统帐号id(加密存储)
    optional string logincode = 24; // 登录帐号(加密存储)
    optional int32 openmode = 25; //  
    optional int32 userstate = 26; // 开户状态-1:未提交2:待初审3:初审拒绝4:待复审5:复审拒绝6:测评不通过
    optional string remark = 27; // 备注
    optional string isvalidate = 28; // 是否有效(删除后标记为失效)-0:无效1:有效
    optional string createtime = 29; // 开户申请时间
    optional string modifiedtime = 30; // 修改时间
    optional int64 modifiedby = 31; // 修改人帐号
    optional int32 removebeforestatus = 32; // removebeforestatus
    optional string cusbankid = 33; // 签约类型
    optional string cusbankname = 34; // 签约类型名称
    optional string signpdfurl = 35; // 签约pdf文件
    optional string referral = 36; // 推荐人编码
    optional string subbranch = 37; // 开户支行
    optional string bankpictureurl = 38; // 银行卡正面地址
    optional string auditime = 39; // 审核时间
    optional string auditedby = 40; // 审核人
    optional string videourl = 41; // 视频地址
    optional int32 signedstatus = 42; // 账户一号签签约状态
    optional int32 userinfotype = 43; // 用户信息类型-1:个人2:企业
    optional string customername = 44; // 客户名称(企业名称)
    optional int32 biznature = 45; //  
    optional string bizscope = 46; // 企业经营范围(企业)
    optional string legalpersonname = 47; // 法人姓名(企业)
    optional string contactname = 48; // 联系人
    optional int32 countryid = 49; // 国家
    optional int32 provinceid = 50; // 省
    optional int32 cityid = 51; // 市
    optional int32 districtid = 52; // 地区
    optional string postalcode = 53; // 邮政编码
    optional string company = 54; // 公司(个人)
    optional string legalcardfrontphotourl = 55; // 法人身份证正面照地址
    optional string legalcardbackphotourl = 56; // 法人身份证背面照地址
    optional string otherurl = 57; // 其它图片地址[使用分号分隔]
    optional int32 usertype = 58; // 用户类型-1:投资者2:机构
    optional string qq = 59; // qq(加密存储
    optional string telphone = 60; // 联系电话(加密存储)
    optional string attachment1 = 61; // 附件1
    optional string attachment2 = 62; // 附件2
}

message zj_deliveryfactorconfig{ 
    optional int32 autoid = 1; // autoid(seq_zj_deliveryfactorconfig)
    optional int32 deliverygoodsid = 2; // 交割商品id
    optional int32 brandid = 3; // 品牌id(商品价差表升贴水参数表id)
    optional int32 qualityid = 4; // 品质id(商品价差表升贴水参数表id)
    optional int32 specid = 5; // 规格id(商品价差表升贴水参数表id)
    optional string name = 6; // 名称(上面4要素的名称合并显示，逗号分隔)
    optional int32 canauto = 7; // 是否可自动配对-0:不自动1:自动
    optional int32 warehouseid = 8; // 仓库id(1交割品种升贴水参数表autoid)
}

message zy_reckon_daybroker{ 
    optional string reckondate = 1; // 日照日期
    optional int64 brokeraccountid = 2; // 经销商账户id
    optional int32 brokeruserid = 3; // 经销商用户id
    optional double brokercost = 4; // 成本额
    optional double brokerdivide = 5; // 分润额
    optional double transferamount = 6; // 今日划转金额
    optional double totalpremium = 7; // 客户定货金
    optional double closepl = 8; // 平仓盈亏
    optional int32 shipqty = 9; // 发货数量
    optional double curbalance = 10; // 期末余额
    optional string createtime = 11; // 创建时间
}

message zy_reckon_daymcdivide{ 
    optional string reckondate = 1; // 日照日期
    optional int64 mcaccountid = 2; // 大区资金账号id
    optional double totaldivide = 3; // 分润总金额
    optional double divideamount = 4; // 当日分润总金额
    optional int32 totalcount = 5; // 当日总笔数
    optional string createtime = 6; // 创建时间
}

message zy_reckon_daymcship{ 
    optional string reckondate = 1; // 日照日期
    optional int64 mcaccountid = 2; // 大区资金账号id
    optional int64 brokeraccountid = 3; // 经销商资金账号id
    optional int32 shipgoodsid = 4; // 发货商品id
    optional int32 mcuserid = 5; // 大区用户id
    optional int32 brokeruserid = 6; // 经销商用户id
    optional int32 totalqty = 7; // 发货数量
    optional int32 totalweight = 8; // 发货重量
    optional double totalfee = 9; // 总服务费
    optional string createtime = 10; // 创建时间
}

message zy_reckon_dayshipdetail{ 
    optional string reckondate = 1; // 日照日期
    optional int64 invoiceorderdetailid = 2; // 发货单明细id(504+unix秒时间戳(10位)++xxxxxx)
    optional int64 invoiceorderid = 3; // 发货单id(502+unix秒时间戳(10位)++xxxxxx)(503+unix秒时间戳(10位)++xxxxxx)
    optional int32 shipgoodsid = 4; // 发货商品id
    optional int32 deliverygoodsid = 5; // 交割商品id
    optional int32 qty = 6; // 数量
    optional double costprice = 7; // 成本价
    optional double sellprice = 8; // 销售价
    optional double expressfee = 9; // 运费[发货单对应的运费]
    optional double divideamount = 10; // 分润总金额
    optional double brokerdivide = 11; // 经销商分润金额
    optional double mcdivide = 12; // 大区分润金额
    optional double specdivide = 13; // 特许分润金额
    optional int32 specuserid = 14; // 特许用户id
    optional int64 specaccountid = 15; // 特许资金账号id
    optional int32 mcuserid = 16; // 大区用户id
    optional int64 mcaccountid = 17; // 大区资金账号id
    optional int32 brokeruserid = 18; // 经销商用户id
    optional int64 brokeraccountid = 19; // 经销商资金账号id
    optional int32 investoruserid = 20; // 投资者用户id
    optional int64 investoraccountid = 21; // 投资者资金账号id
    optional string createtime = 22; // 创建时间
}

message zy_reckon_dayshipdiv{ 
    optional string reckondate = 1; // 日照日期
    optional int32 shipgoodsid = 2; // 发货商品id
    optional double divideamount = 3; // 当日分润总金额
    optional double brokerdivide = 4; // 经销商分润金额
    optional double mcdivide = 5; // 大区分润金额
    optional double specdivide = 6; // 特许分润金额
    optional string createtime = 7; // 创建时间
}

message zy_reckon_dayt2sdiv{ 
    optional string reckondate = 1; // 日照日期
    optional int32 investoruserid = 2; // 投资者用户id
    optional int32 specuserid = 3; // 特许用户id
    optional double ticketnum = 4; // 转换券
    optional int32 scorenum = 5; // 转换积分
    optional int32 mcuserid = 6; // 大区用户id
    optional int32 brokeruserid = 7; // 经销商用户id
    optional int32 scoreuserid = 8; // 积分服务商用户id
    optional double specdivide = 9; // 特许分润金额
    optional double mcdivide = 10; // 大区分润金额
    optional double brokerdivide = 11; // 经销商分润金额
    optional double scoreuserdivide = 12; // 积分服务商分润
    optional int64 investoraccountid = 13; // 投资者资金账号id
    optional int64 specaccountid = 14; // 特许资金账号id
    optional int64 mcaccountid = 15; // 大区资金账号id
    optional int64 brokeraccountid = 16; // 经销商资金账号id
    optional int64 scoreaccountid = 17; // 积分服务商资金账号id
    optional string createtime = 18; // 创建时间
}

message zy_reckon_daywrdeal{ 
    optional string reckondate = 1; // 日照日期
    optional int64 wrfactortypeid = 2; // 仓单要素类型id
    optional int32 buyuserid = 3; // 买方用户id
    optional int32 selluserid = 4; // 卖方用户id
    optional int64 buyaccountid = 5; // 买方资金id
    optional int32 buyertype = 6; // 买方用户类型-1:特许经销商2:经销商
    optional int64 sellaccountid = 7; // 卖方资金id
    optional int32 selltype = 8; // 卖方用户类型-1:特许经销商2:经销商
    optional double tradeprice = 9; // 成交均价
    optional double realtradeqty = 10; // 实际成交数量(算上溢短)
    optional double realtradeamount = 11; // 实际成交金额(算上溢短)
    optional string createtime = 12; // 创建时间
}
